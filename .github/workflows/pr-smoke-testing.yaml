name: "Smoke tests"

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'release-*'
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  # Enable BuildKit for cache mounts
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain

  QUAY_ORG: quay.io/flightctl
  REGISTRY: quay.io
  REGISTRY_OWNER: flightctl
  REGISTRY_OWNER_TESTS: flightctl-tests
  GITHUB_ACTIONS: true

jobs:
  # This line defines a job with the ID `check-links` that is stored within the `jobs` key.
  smoke:
    runs-on: "ubuntu-24.04"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          since_last_remote_commit: 'true'
          files_ignore: |
            .spelling
            README.md
            docs/**
            .github/**
            examples/**
            packaging/rpm/**

      - name: Setup all dependencies
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        uses: ./.github/actions/setup-dependencies

      - name: Cache Go modules
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache DNF packages
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            /var/cache/dnf
            /var/lib/dnf
          key: ${{ runner.os }}-dnf-smoke
          restore-keys: |
            ${{ runner.os }}-dnf-

      - name: Cache bootc-image-builder
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            bin/dnf-cache
            bin/osbuild-cache
          key: ${{ runner.os }}-bootc-cache-smoke-${{ hashFiles('test/scripts/agent-images/Containerfile-e2e-base.local') }}
          restore-keys: |
            ${{ runner.os }}-bootc-cache-smoke-

      - name: Create cluster
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: make cluster

      - name: Deploy
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: DISABLE_FIPS="true" make deploy

      - name: Check
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: |
          kubectl get pods --all-namespaces

      - name: Apply device
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: bin/flightctl apply -f examples/device.yaml

      - name: Apply fleet
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: bin/flightctl apply -f examples/fleet.yaml

      - name: Apply enrollmentrequest
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: bin/flightctl apply -f examples/enrollmentrequest.yaml

      - name: Apply repository
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: bin/flightctl apply -f examples/repository-flightctl.yaml

      - name: Apply resourcesync
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: bin/flightctl apply -f examples/resourcesync.yaml

      - name: Build the simulator
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: DISABLE_FIPS="true" make build-devicesimulator

      - name: Simulator run
        if: ${{ steps.changed-files.outputs.any_changed == 'true' }}
        run: bin/devicesimulator --config bin/agent/etc/flightctl/config.yaml --count 1 --stop-after 1m

      - name: Collect and Upload Logs
        if: always() && steps.changed-files.outputs.any_changed == 'true'
        uses: ./.github/actions/collect-logs
        with:
          namespace-external: 'flightctl-external'
          namespace-internal: 'flightctl-internal'
          log-directory: 'smoke-logs'
