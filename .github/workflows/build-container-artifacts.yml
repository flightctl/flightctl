name: Build Container Artifacts

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'release-*'
  pull_request:

permissions:
  contents: read
  pull-requests: read

env:
  # Enable BuildKit for cache mounts
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  # Set the registry for container caching - following existing pattern
  QUAY_ORG: quay.io/flightctl
  REGISTRY: quay.io
  REGISTRY_OWNER: flightctl
  GITHUB_ACTIONS: true

jobs:
  # Build each container image in parallel
  build-images:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        app: [
          "flightctl-api",
          "flightctl-db-setup",
          "flightctl-worker",
          "flightctl-periodic",
          "flightctl-alert-exporter",
          "flightctl-alertmanager-proxy",
          "flightctl-cli-artifacts",
          "flightctl-userinfo-proxy",
          "flightctl-telemetry-gateway"
        ]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up build tools
        run: |
          sudo apt-get install -y podman buildah openssl make

      - name: Build container image using Makefile
        env:
          REGISTRY: ${{ env.REGISTRY }}
          REGISTRY_OWNER: ${{ env.REGISTRY_OWNER }}
          GITHUB_ACTIONS: true
        run: |
          make ${{ matrix.app }}-container

      - name: Save container image as archive
        run: |
          podman save ${{ matrix.app }}:latest -o ${{ matrix.app }}.tar
          gzip ${{ matrix.app }}.tar

      - name: Upload container artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-image
          path: ${{ matrix.app }}.tar.gz
          retention-days: 1
          compression-level: 1

  # Summary job that depends on all matrix jobs completing
  build-summary:
    runs-on: ubuntu-latest
    needs: build-images
    if: always()
    steps:
      - name: Check Build Results
        run: |
          if [[ "${{ needs.build-images.result }}" == "success" ]]; then
            echo "All container builds completed successfully!"
            exit 0
          else
            echo "Container builds failed or were cancelled"
            exit 1
          fi

  # Optional: Demonstration job showing how to download and use the artifacts
  use-artifacts-example:
    needs: build-images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [flightctl-api, flightctl-worker]  # Example subset
    steps:
      - name: Download container artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.app }}-image

      - name: Set up build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y podman buildah openssl make

      - name: Load and verify container image
        run: |
          gunzip ${{ matrix.app }}.tar.gz
          podman load -i ${{ matrix.app }}.tar
          podman images | grep ${{ matrix.app }}