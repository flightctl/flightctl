FROM registry.access.redhat.com/ubi9/go-toolset:1.23.9-1751538372 as build
WORKDIR /app
ARG SOURCE_GIT_TAG
ARG SOURCE_GIT_TREE_STATE
ARG SOURCE_GIT_COMMIT

# Convert ARGs to ENV so make can use them
ENV SOURCE_GIT_TAG=${SOURCE_GIT_TAG}
ENV SOURCE_GIT_TREE_STATE=${SOURCE_GIT_TREE_STATE}
ENV SOURCE_GIT_COMMIT=${SOURCE_GIT_COMMIT}

# Switch to root for build operations
USER 0

# Copy dependencies first (most stable)
COPY go.* ./
COPY go.mod go.sum ./

# Download dependencies (cached layer)
RUN --mount=type=cache,target=/opt/app-root/src/go/pkg/mod \
    go mod download

# Copy build tools and configs
COPY Makefile .

# Copy source code directories
COPY ./api ./api
COPY ./cmd ./cmd
COPY ./deploy ./deploy
COPY ./hack ./hack
COPY ./internal ./internal
COPY ./pkg ./pkg
COPY ./test ./test

# Use BuildKit cache mounts for Go caching
RUN --mount=type=cache,target=/opt/app-root/src/.cache/go-build \
    --mount=type=cache,target=/opt/app-root/src/go/pkg/mod \
    make build-db-migrate

FROM registry.access.redhat.com/ubi9/ubi

WORKDIR /app

LABEL \
  com.redhat.component="flightctl-db-setup-container" \
  description="Flight Control Database Setup Tools" \
  io.k8s.description="Flight Control Database Setup Tools" \
  io.k8s.display-name="Flight Control Database Setup" \
  io.openshift.tags="flightctl,db-setup" \
  name="flightctl-db-setup" \
  summary="Flight Control Database Setup Tools"

# Install required tools for database operations
# Use BuildKit cache mounts for dnf package caching
RUN --mount=type=cache,target=/var/cache/dnf \
    --mount=type=cache,target=/var/lib/dnf \
    dnf install -y postgresql gettext && dnf clean all

# Copy the migration binary from the build stage
COPY --from=build /app/bin/flightctl-db-migrate /usr/local/bin/flightctl-db-migrate

# Copy the database setup scripts
COPY ./deploy/scripts/setup_database_users.sh ./deploy/scripts/setup_database_users.sh
COPY ./deploy/scripts/setup_database_users.sql ./deploy/scripts/setup_database_users.sql
COPY ./deploy/scripts/migration-setup.sh ./deploy/scripts/migration-setup.sh
COPY --chmod=0755 ./deploy/scripts/wait-for-database.sh ./deploy/scripts/wait-for-database.sh

# Make the setup scripts executable
RUN chmod +x ./deploy/scripts/setup_database_users.sh ./deploy/scripts/migration-setup.sh

CMD ["./deploy/scripts/setup_database_users.sh"]
