{{- $namespaces := list .Release.Namespace }}
{{- if and .Values.global.internalNamespace (ne .Values.global.internalNamespace .Release.Namespace) }}
{{- $namespaces = append $namespaces .Values.global.internalNamespace }}
{{- end }}
{{- $migrationPassword := "" }}
{{- range $ns := $namespaces }}
  {{- if not $migrationPassword }}
    {{- $existingSecret := (lookup "v1" "Secret" $ns "flightctl-db-migration-secret") }}
    {{- if $existingSecret }}
      {{- if and (hasKey $existingSecret "data") (hasKey $existingSecret.data "migrationPassword") }}
        {{- $migrationPassword = (index $existingSecret.data "migrationPassword") }}
      {{- else }}
        {{- fail "flightctl-db-migration-secret is missing data.migrationPassword â€“ delete it or add the key." }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- if not $migrationPassword }}
  {{- $migrationPassword = (include "flightctl.generatePassword" .) }}
{{- end }}
{{- range $ns := $namespaces }}
---
apiVersion: v1
kind: Secret
metadata:
  name: flightctl-db-migration-secret
  namespace: {{ $ns }}
  labels:
    flightctl.service: flightctl-db-migration
    security.level: schema-privilege
type: Opaque
data:
  # Migration user credentials for schema changes only
  migrationUser: {{ (default "flightctl_migrator" $.Values.db.migrationUser) | b64enc }}
  migrationPassword: {{ if $.Values.db.migrationPassword }}{{ $.Values.db.migrationPassword | b64enc }}{{ else }}{{ $migrationPassword }}{{ end }}
{{- end }}