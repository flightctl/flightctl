{{ if .Values.flightctl.rabbitmq.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: flightctl-rabbitmq
  namespace: {{ default .Release.Namespace .Values.global.flightctl.internalNamespace }}
  labels:
    flightctl.service: flightctl-rabbitmq
spec:
  serviceName: flightctl-rabbitmq
  replicas: {{ .Values.flightctl.rabbitmq.replicaCount }}
  selector:
    matchLabels:
      flightctl.service: flightctl-rabbitmq
  template:
    metadata:
      labels:
        flightctl.service: flightctl-rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: {{ .Values.flightctl.rabbitmq.image.image }}:{{ .Values.flightctl.rabbitmq.image.tag }}
          imagePullPolicy: {{ .Values.flightctl.rabbitmq.image.pullPolicy }}
          ports:
            - name: amqp
              containerPort: 5672
            - name: management
              containerPort: 15672
            - name: prom-target
              containerPort: 15692
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "{{ .Values.flightctl.rabbitmq.auth.username }}"
            - name: RABBITMQ_DEFAULT_PASS
              value: "{{ .Values.flightctl.rabbitmq.auth.password }}"
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-data
        annotations:
          kubernetes.io/reclaimPolicy: Delete
        labels:
          paas.redhat.com/appcode: {{ .Values.appCode }}
      spec:
        storageClassName: {{ .Values.global.storageClassName }}
        accessModes:
          - {{ .Values.flightctl.rabbitmq.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.flightctl.rabbitmq.persistence.size }}
  {{ end }}
