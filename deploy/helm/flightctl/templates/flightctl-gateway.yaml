{{ if and (.Values.api.enabled) (eq (include "flightctl.getServiceExposeMethod" .) "gateway") }}
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: flightctl-gateway
  namespace: {{ .Release.Namespace }}
spec:
  gatewayClassName: {{ .Values.global.gatewayClass }}
  listeners:
  {{- if and (eq .Values.global.target "standalone") (eq .Values.global.auth.type "builtin") }}
  - name: keycloak
    hostname: auth.{{ include "flightctl.getBaseDomain" . }}
    {{- if .Values.global.baseDomainTls.cert }}
    port: {{ .Values.global.gatewayPorts.tls }}
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        name: gateway-cert
    {{- else }}
    port: {{ .Values.global.gatewayPorts.http }}
    protocol: HTTP
    {{- end }}
  {{- end }}
  {{- if .Values.ui.enabled }}
  - name: ui
    hostname: ui.{{ include "flightctl.getBaseDomain" . }}
    {{- if .Values.global.baseDomainTls.cert }}
    port: {{ .Values.global.gatewayPorts.tls }}
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        name: gateway-cert
    {{- else }}
    port: {{ .Values.global.gatewayPorts.http }}
    protocol: HTTP
    {{- end }}
  - name: cli-artifacts
    hostname: cli-artifacts.{{ include "flightctl.getBaseDomain" . }}
    {{- if .Values.global.baseDomainTls.cert }}
    port: {{ .Values.global.gatewayPorts.tls }}
    protocol: HTTPS
    tls:
      mode: Terminate
      certificateRefs:
      - kind: Secret
        name: gateway-cert
    {{- else }}
    port: {{ .Values.global.gatewayPorts.http }}
    protocol: HTTP
    {{- end }}
  {{- end }}
  - name: api
    hostname: '*.{{ include "flightctl.getBaseDomain" . }}'
    port: {{ .Values.global.gatewayPorts.tls }}
    protocol: TLS
    tls:
      mode: Passthrough
{{ end }}