{{ if .Values.flightctl.api.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: flightctl-api-config
  namespace: {{ .Release.Namespace }}
data:
  config.yaml: |-
    database:
        hostname: flightctl-db.{{ default .Release.Namespace .Values.global.flightctl.internalNamespace }}.svc.cluster.local
        type: pgsql
        port: 5432
        name: flightctl
        user: {{ .Values.flightctl.db.masterUser }}
        password: {{ .Values.flightctl.db.masterPassword }}   # we should funnel this via secrets instead
    service:
        address: :3443
        agentEndpointAddress: :7443
        agentGrpcAddress: :7444
        {{ if .Values.flightctl.api.hostName }}
        baseUrl: https://{{ .Values.flightctl.api.hostName }}{{ if .Values.flightctl.api.nodePort }}:{{ .Values.flightctl.api.nodePort }}{{ end }}/
        {{ else }}
        baseUrl: https://api.{{ .Values.global.flightctl.baseDomain }}{{ if .Values.flightctl.api.nodePort }}:{{ .Values.flightctl.api.nodePort }}{{ end }}/
        {{ end }}

        {{ if .Values.flightctl.api.agentAPIHostName }}
        baseAgentEndpointUrl:  https://{{ .Values.flightctl.api.agentAPIHostName }}{{ if .Values.flightctl.api.agentAPINodePort }}:{{ .Values.flightctl.api.agentAPINodePort }}{{ end }}/
        {{ else }}
        baseAgentEndpointUrl:  https://agent-api.{{ .Values.global.flightctl.baseDomain }}{{ if .Values.flightctl.api.agentAPINodePort }}:{{ .Values.flightctl.api.agentAPINodePort }}{{ end }}/
        {{ end }}

        {{ if .Values.flightctl.api.agentGrpcBaseURL }}
        baseAgentGrpcUrl:  {{ .Values.flightctl.api.agentGrpcBaseURL }}
        {{ else }}
        baseAgentGrpcUrl:  grpcs://agent-grpc.{{ .Values.global.flightctl.baseDomain }}{{ if .Values.flightctl.api.agentGrpcNodePort }}:{{ .Values.flightctl.api.agentGrpcNodePort }}{{ end }}
        {{ end }}

        altNames:
          {{ if .Values.flightctl.api.hostName }}
          - {{ .Values.flightctl.api.hostName }}
          {{ else }}
          - api.{{ .Values.global.flightctl.baseDomain }}
          {{ end }}
          {{ if .Values.flightctl.api.agentAPIHostName }}
          - {{ .Values.flightctl.api.agentAPIHostName }}
          {{ else }}
          - agent-api.{{ .Values.global.flightctl.baseDomain }}
          {{ end }}
          {{ if .Values.flightctl.api.agentGrpcHostName }}
          - {{ .Values.flightctl.api.agentGrpcHostName }}
          {{ else }}
          - agent-grpc.{{ .Values.global.flightctl.baseDomain }}
          {{ end }} 
          - flightctl-api
          - flightctl-api.{{ .Release.Namespace }}
          - flightctl-api.{{ .Release.Namespace }}.svc.cluster.local
    queue:
        amqpUrl: amqp://{{ .Values.flightctl.rabbitmq.auth.username }}:{{ .Values.flightctl.rabbitmq.auth.password }}@flightctl-rabbitmq.{{ default .Release.Namespace .Values.global.flightctl.internalNamespace }}.svc.cluster.local:{{ .Values.flightctl.rabbitmq.ports.amqp }}/
    {{ if .Values.flightctl.api.auth.enabled }}
    auth:
        {{ if .Values.flightctl.api.auth.oidcAuthority }}
        oidcAuthority: {{ .Values.flightctl.api.auth.oidcAuthority }}
        {{ end }}
        {{ if .Values.flightctl.api.auth.internalOidcAuthority }}
        internalOidcAuthority: {{ .Values.flightctl.api.auth.internalOidcAuthority }}
        {{ end }}
        {{ if .Values.flightctl.api.auth.openShiftApiUrl }}
        openShiftApiUrl: {{ .Values.flightctl.api.auth.openShiftApiUrl }}
        {{ end }}
        {{ if .Values.flightctl.api.auth.caCert }}
        caCert: {{ .Values.flightctl.api.auth.caCert }}
        {{ end }}
        {{ if .Values.flightctl.api.auth.insecureSkipTlsVerify }}
        insecureSkipTlsVerify: {{ .Values.flightctl.api.auth.insecureSkipTlsVerify }}
        {{ end }}
    {{ end }}
{{ end }}
