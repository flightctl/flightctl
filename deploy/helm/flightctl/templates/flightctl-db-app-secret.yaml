{{- $namespaces := list .Release.Namespace -}}
{{- if .Values.global.internalNamespace -}}
{{- $namespaces = append $namespaces .Values.global.internalNamespace -}}
{{- end -}}

{{- $secretRef := dict "obj" nil -}}
{{- range $n := $namespaces -}}
{{- if not $secretRef.obj -}}
{{- $tmp := (lookup "v1" "Secret" $n "flightctl-db-app-secret") -}}
{{- if $tmp }}{{- set $secretRef "obj" $tmp }}{{- end -}}
{{- end -}}
{{- end -}}

{{- $existingSecret := $secretRef.obj -}}
{{- $userPassword := "" -}}
{{- if $existingSecret -}}
{{- if and (hasKey $existingSecret "data") (hasKey $existingSecret.data "userPassword") -}}
{{- $userPassword = (index $existingSecret.data "userPassword") -}}
{{- else -}}
{{- fail "flightctl-db-app-secret is missing data.userPassword â€“ delete it or add the key." -}}
{{- end -}}
{{- else -}}
{{- $userPassword = (include "flightctl.generatePassword" .) -}}
{{- end -}}

{{- range $ns := $namespaces }}
---
apiVersion: v1
kind: Secret
metadata:
  name: flightctl-db-app-secret
  namespace: {{ $ns }}
  labels:
    flightctl.service: flightctl-db-app
    security.level: application
type: Opaque
data:
  user: {{ $.Values.db.user | b64enc }}
  userPassword: {{ if $.Values.db.userPassword }}{{ $.Values.db.userPassword | b64enc }}{{ else }}{{ $userPassword }}{{ end }}
{{- end -}}