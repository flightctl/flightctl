{{- $root := . -}}
{{- $baseName := printf "flightctl-db-migration-%d" .Release.Revision -}}

{{- /* Defaults applied if any key along the path is missing */ -}}
{{- $dbSetup := default (dict) .Values.dbSetup -}}
{{- $migration := default (dict) $dbSetup.migration -}}
{{- $upgradeHooks := default (dict) .Values.upgradeHooks -}}

{{- $dryRunEnabled := $upgradeHooks.databaseMigrationDryRun -}}
{{- $backoffLimit := $migration.backoffLimit -}}
{{- $activeDeadlineSeconds := $migration.activeDeadlineSeconds -}}

{{- if $dryRunEnabled }}
{{- include "flightctl.dbMigrationJob" (dict
  "context" $root
  "name" (printf "%s-dryrun" $baseName)
  "hooks" (list "pre-upgrade")
  "hookWeight" "-10"
  "hookDeletePolicy" "before-hook-creation,hook-succeeded"
  "isDryRun" true
) }}
---
{{- end }}

{{- if .Release.IsUpgrade }}
{{- include "flightctl.dbMigrationJob" (dict
  "context" $root
  "name" $baseName
  "hooks" (list "pre-upgrade")
  "hookWeight" "10"
  "hookDeletePolicy" "before-hook-creation,hook-succeeded"
  "isDryRun" false
) }}
{{- else if .Release.IsInstall }}
{{- include "flightctl.dbMigrationJob" (dict
  "context" $root
  "name" $baseName
  "hooks" (list)
  "isDryRun" false
) }}
{{- end }}
