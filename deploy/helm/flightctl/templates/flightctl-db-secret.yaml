{{- $namespaces := list .Release.Namespace }}
{{- if .Values.global.internalNamespace }}
{{- $namespaces = append $namespaces .Values.global.internalNamespace }}
{{- end }}
{{- $existingSecret := (lookup "v1" "Secret" .Release.Namespace "flightctl-db-secret") }}
{{- $password := "" }}
{{- $masterPassword := "" }}
{{- $userPassword := "" }}
{{- if $existingSecret }}
  {{- $password = (index $existingSecret.data "password") }}
  {{- $masterPassword = (index $existingSecret.data "masterPassword") }}
  {{- $userPassword = (index $existingSecret.data "userPassword") }}
{{- else }}
  {{- $passwordRaw := (randAlphaNum 20) }}
  {{- $password = printf "%s-%s-%s-%s" (substr 0 5 $passwordRaw) (substr 5 10 $passwordRaw) (substr 10 15 $passwordRaw) (substr 15 20 $passwordRaw) | b64enc }}
  {{- $masterPasswordRaw := (randAlphaNum 20) }}
  {{- $masterPassword = printf "%s-%s-%s-%s" (substr 0 5 $masterPasswordRaw) (substr 5 10 $masterPasswordRaw) (substr 10 15 $masterPasswordRaw) (substr 15 20 $masterPasswordRaw) | b64enc }}
  {{- $userPasswordRaw := (randAlphaNum 20) }}
  {{- $userPassword = printf "%s-%s-%s-%s" (substr 0 5 $userPasswordRaw) (substr 5 10 $userPasswordRaw) (substr 10 15 $userPasswordRaw) (substr 15 20 $userPasswordRaw) | b64enc }}
{{- end }}
{{- range $ns := $namespaces }}
---
apiVersion: v1
kind: Secret
metadata:
  name: flightctl-db-secret
  namespace: {{ $ns }}
type: Opaque
data:
  password: {{ if $.Values.db.password }}{{ $.Values.db.password | b64enc }}{{ else }}{{ $password }}{{ end }}
  masterPassword: {{ if $.Values.db.masterPassword }}{{ $.Values.db.masterPassword | b64enc }}{{ else }}{{ $masterPassword }}{{ end }}
  masterUser: {{ $.Values.db.masterUser | b64enc }}
  userPassword: {{ if $.Values.db.userPassword }}{{ $.Values.db.userPassword | b64enc }}{{ else }}{{ $userPassword }}{{ end }}
  user: {{ $.Values.db.user | b64enc }}
{{- end }}
