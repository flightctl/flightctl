apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    flightctl.service: flightctl-db
  name: flightctl-db
  namespace:  {{ default .Release.Namespace .Values.global.internalNamespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      flightctl.service: flightctl-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        flightctl.service: flightctl-db
    spec:
      containers:
        - env:
            - name: PGPASSWORD
              value: {{ .Values.db.password }}
            - name: POSTGRESQL_DATABASE
              value: flightctl
            - name: POSTGRESQL_MASTER_PASSWORD
              value: {{ .Values.db.masterPassword }}
            - name: POSTGRESQL_MASTER_USER
              value: {{ .Values.db.masterUser }}
            - name: POSTGRESQL_PASSWORD
              value: {{ .Values.db.userPassword }}
            - name: POSTGRESQL_USER
              value: {{ .Values.db.user }}
          image: {{ .Values.db.image.image }}:{{ .Values.db.image.tag }}
          imagePullPolicy: {{ .Values.db.image.pullPolicy }}
          name: flightctl-db
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/pgsql/data
              name: flightctl-db
{{ if .Values.db.resources }}
          resources:
{{ toYaml .Values.db.resources | indent 12 }}
{{ end }}
      restartPolicy: Always
      volumes:
        - name: flightctl-db
          persistentVolumeClaim:
            claimName: flightctl-db

