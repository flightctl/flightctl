{{- $namespaces := list .Release.Namespace }}
{{- if .Values.global.internalNamespace }}
{{- $namespaces = append $namespaces .Values.global.internalNamespace }}
{{- end }}
{{- $masterUser := .Values.db.masterUser }}
{{- $user := .Values.db.user }}
apiVersion: batch/v1
kind: Job
metadata:
  name: flightctl-secrets
  namespace: {{ .Release.Namespace }}
spec:
  manualSelector: true
  selector:
    matchLabels:
      flightctl.service: secrets-job
  template:
    metadata:
      name: flightctl-secrets
      labels:
        flightctl.service: secrets-job
    spec:
      serviceAccountName: flightctl-secrets
      containers:
        - name: flightctl-secrets
          image: {{ .Values.secretsJob.image.image }}:{{ .Values.secretsJob.image.tag }}
          imagePullPolicy: {{ default .Values.global.imagePullPolicy .Values.secretsJob.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              set -e
              DB_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              DB_MASTER_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              DB_USER_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              KV_PASSWORD=$(cat /dev/urandom | tr -dc 'A-Za-z0-90-9' | fold -w5 | head -n4 | paste -sd'-')
              {{- range $ns := $namespaces }}
              if ! oc get secret flightctl-db-secret -n {{ $ns }} >/dev/null 2>&1; then
                oc create secret generic flightctl-db-secret -n={{ $ns }} --from-literal=password="$DB_PASSWORD" --from-literal=masterPassword="$DB_MASTER_PASSWORD" --from-literal=masterUser="{{ $masterUser }}" --from-literal=userPassword="$DB_USER_PASSWORD" --from-literal=user="{{ $user }}"
              fi
              if ! oc get secret flightctl-kv-secret -n {{ $ns }} >/dev/null 2>&1; then
                oc create secret generic flightctl-kv-secret -n={{ $ns }} --from-literal=password="$KV_PASSWORD"
              fi
              {{- end }}
      restartPolicy: Never
