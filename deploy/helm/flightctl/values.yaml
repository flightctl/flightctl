
## @section Global parameters
## @descriptionStart This section contains parameters common to all the
## components in the deployment, including sub-charts, ui charts, etc.
## @descriptionEnd

## @param global.target The type of Flightctl to deploy - either 'standalone' or 'acm'.
## @param global.baseDomain Base domain to construct the FQDN for the service endpoints.
## @param.global.baseDomainTls.cert Certificate for the base domain wildcard certificate, it should be valid for *.${baseDomain}. This certificate is only used for non mTLS endpoints, mTLS endpoints like agent-api, etc will use different certificates.
## @param.global.baseDomainTls.key Key for the base domain wildcard certificate.
## @param global.storageClassName Storage class name for the PVCs.
## @param global.auth.type Type of the auth to use. Can be one of 'builtin', 'k8s', 'oidc', or 'none'
## @param global.auth.caCert The custom CA cert.
## @param global.auth.insecureSkipTlsVerify True if verification of authority TLS cert should be skipped.
## @param global.auth.k8s.apiUrl API URL of k8s cluster that will be used as authentication authority
## @param global.auth.k8s.externalOpenShiftApiUrl API URL of OpenShift cluster that can be accessed by external client to retrieve auth token
## @param global.apiUrl is an alternative to global.auth.k8s.externalOpenShiftApiUrl with the same meaning, used by the multiclusterhub operator
## @param global.auth.k8s.externalApiToken In case flightctl is not running within a cluster, you can provide api token
## @param global.auth.k8s.rbacNs Namespace that should be used for the RBAC checks
## @param global.auth.oidc.oidcAuthority The base URL for the Keycloak realm that is reachable by flightctl services. Example: https://keycloak.foo.internal/realms/flightctl
## @param global.auth.oidc.externalOidcAuthority The base URL for the Keycloak realm that is reachable by clients. Example: https://keycloak.foo.net/realms/flightctl
## @param global.auth.aap.apiUrl The URL of the AAP Gateway API endpoint
## @param global.auth.aap.externalApiUrl The URL of the AAP Gateway API endpoint that is reachable by clients
## @param global.metrics.enabled Enable metrics exporting and service
## @param global.timestamp Timestamp to be used to trigger a new deployment, i.e. if you want pods to be restarted and pickup ":latest"
## @param global.internalNamespace Namespace where internal components are deployed
## @param global.clusterLevelSecretAccess Allow flightctl-worker to access secrets at the cluster level for embedding in device configs
## @param global.appCode This is only related to deployment in Red Hat's PAAS.
## @param global.exposeServicesMethod How the FCTL services should be exposed. Can be either nodePort or route
## @param global.nodePorts Node port numbers for FCTL services
## @param global.imagePullPolicy Image pull policy for all containers
## @param global.organizations.enabled Enable IDP-provided organizations support

global:
  target: "standalone" # standalone, acm, aap
  baseDomain: ""
  baseDomainTls:
    cert: ""
    key: ""
  storageClassName: ""
  imagePullSecretName: ""
  apiUrl: "" # alternative to global.auth.k8s.externalOpenShiftApiUrl used by multiclusterhub operator
  auth:
    type: "builtin" # builtin, k8s, oidc, aap, none
    caCert: ""
    insecureSkipTlsVerify: false
    k8s:
      apiUrl: https://kubernetes.default.svc
      externalOpenShiftApiUrl: ""
      externalApiToken: ""
      rbacNs: ""
    oidc:
      oidcAuthority: http://keycloak:8081/realms/flightctl
      externalOidcAuthority: ""
    aap:
      apiUrl: ""
      externalApiUrl: ""
  metrics:
    enabled: true
  tracing:
    enabled: false
    endpoint: jaeger-collector.flightctl-e2e.svc.cluster.local:4318
    insecure: true
  internalNamespace: ""
  clusterLevelSecretAccess: false
  appCode: ""
  exposeServicesMethod: "route" # route, nodePort, gateway
  gatewayClass: ""
  nodePorts:
    api: 3443
    cliArtifacts: 8090
    agent: 7443
    ui: 9000
    keycloak: 8081
    alertmanagerProxy: 8443
  gatewayPorts:
    tls: 443
    http: 80
  imagePullPolicy: IfNotPresent
  rbac:
    create: true
  organizations:
    enabled: false


## @section Component specific parameters
## @descriptionStart This section provides individual parameters for each component
## @descriptionEnd

db:
  image:
    image: quay.io/sclorg/postgresql-16-c9s
    tag: "20250214"
    pullPolicy: ""
  masterUser: admin
  user: flightctl_app
  # password: Leave empty to auto-generate secure password, or set to use a specific password.
  password: ""
  # masterPassword: Leave empty to auto-generate secure password, or set to use a specific password.
  masterPassword: ""
  # userPassword: Leave empty to auto-generate secure password, or set to use a specific password.
  userPassword: ""
  # migrationPassword: Leave empty to auto-generate secure password, or set to use a specific password.
  migrationPassword: ""
  maxConnections: 200
  storage:
    size: "60Gi"
  resources:
    requests:
      cpu: "512m"
      memory: "512Mi"
  fsGroup: ""
kv:
  enabled: true
  image:
    image: quay.io/sclorg/redis-7-c9s
    tag: "20250108"
    pullPolicy: ""
  # password: Leave empty to auto-generate secure password, or set to use a specific password.
  password: ""
  # Save if at least 1 key changed in 5 minutes
  save: 300 1
  loglevel: warning
  fsGroup: ""
alertmanager:
  enabled: true
  image:
    image: quay.io/prometheus/alertmanager
    tag: "v0.28.1"
    pullPolicy: ""
keycloak:
  db:
    fsGroup: ""
api:
  enabled: true
  image:
    image: quay.io/flightctl/flightctl-api
    pullPolicy: ""
    tag: ""
  baseUIUrl: "" # ui.flightctl.example.com
  # Rate limiting configuration - enabled by default for production
  rateLimit:
    # General API rate limiting
    requests: 60
    window: "1m"
    # Auth-specific rate limiting
    authRequests: 10
    authWindow: "1h"
    # Trusted proxies that can set X-Forwarded-For/X-Real-IP headers
    # This should include your load balancer and UI proxy IPs
    trustedProxies:
      - "10.0.0.0/8"    # Example: Internal network range
      - "172.16.0.0/12" # Example: Docker/container network range
      - "192.168.0.0/16" # Example: Private network range
  # Health probes configuration
  probes:
    enabled: true
    readinessPath: /readyz
    livenessPath: /healthz
cliArtifacts:
  enabled: true
  image:
    image: quay.io/flightctl/flightctl-cli-artifacts
    pullPolicy: ""
    tag: ""
worker:
  enabled: true
  image:
    image: quay.io/flightctl/flightctl-worker
    pullPolicy: ""
    tag: ""
  enableSecretsClusterRoleBinding: true
periodic:
  enabled: true
  image:
    image: quay.io/flightctl/flightctl-periodic
    tag: ""
    pullPolicy: ""
  consumers: 5
alertExporter:
  enabled: true
  image:
    image: quay.io/flightctl/flightctl-alert-exporter
    tag: ""
    pullPolicy: ""
alertmanagerProxy:
  enabled: true
  image:
    image: quay.io/flightctl/flightctl-alertmanager-proxy
    tag: ""
    pullPolicy: ""
prometheus:
  enabled: false
ui:
  enabled: true
  api:
    insecureSkipTlsVerify: true
secretsJob:
  image:
    image: quay.io/openshift/origin-cli
    tag: "4.20.0"
    pullPolicy: ""
dbSetup:
  image:
    image: quay.io/flightctl/flightctl-db-setup
    tag: ""
    pullPolicy: ""
