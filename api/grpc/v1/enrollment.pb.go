// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.6
// source: enrollment.proto

package grpc_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AgentTPMChallengeMessage is a wrapper for all possible messages the agent can send.
type AgentTPMChallengeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*AgentTPMChallengeMessage_ChallengeRequest
	//	*AgentTPMChallengeMessage_ChallengeResponse
	Payload isAgentTPMChallengeMessage_Payload `protobuf_oneof:"payload"`
}

func (x *AgentTPMChallengeMessage) Reset() {
	*x = AgentTPMChallengeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentTPMChallengeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentTPMChallengeMessage) ProtoMessage() {}

func (x *AgentTPMChallengeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentTPMChallengeMessage.ProtoReflect.Descriptor instead.
func (*AgentTPMChallengeMessage) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{0}
}

func (m *AgentTPMChallengeMessage) GetPayload() isAgentTPMChallengeMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AgentTPMChallengeMessage) GetChallengeRequest() *TPMChallengeRequest {
	if x, ok := x.GetPayload().(*AgentTPMChallengeMessage_ChallengeRequest); ok {
		return x.ChallengeRequest
	}
	return nil
}

func (x *AgentTPMChallengeMessage) GetChallengeResponse() *TPMChallengeResponse {
	if x, ok := x.GetPayload().(*AgentTPMChallengeMessage_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

type isAgentTPMChallengeMessage_Payload interface {
	isAgentTPMChallengeMessage_Payload()
}

type AgentTPMChallengeMessage_ChallengeRequest struct {
	// The first message sent by the agent to request a challenge.
	ChallengeRequest *TPMChallengeRequest `protobuf:"bytes,1,opt,name=challenge_request,json=challengeRequest,proto3,oneof"`
}

type AgentTPMChallengeMessage_ChallengeResponse struct {
	// The agent's response containing the decrypted secret.
	ChallengeResponse *TPMChallengeResponse `protobuf:"bytes,2,opt,name=challenge_response,json=challengeResponse,proto3,oneof"`
}

func (*AgentTPMChallengeMessage_ChallengeRequest) isAgentTPMChallengeMessage_Payload() {}

func (*AgentTPMChallengeMessage_ChallengeResponse) isAgentTPMChallengeMessage_Payload() {}

// ServerTPMChallengeMessage is a wrapper for all possible messages the service can send.
type ServerTPMChallengeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ServerTPMChallengeMessage_Challenge
	//	*ServerTPMChallengeMessage_Success
	//	*ServerTPMChallengeMessage_Error
	Payload isServerTPMChallengeMessage_Payload `protobuf_oneof:"payload"`
}

func (x *ServerTPMChallengeMessage) Reset() {
	*x = ServerTPMChallengeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTPMChallengeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTPMChallengeMessage) ProtoMessage() {}

func (x *ServerTPMChallengeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTPMChallengeMessage.ProtoReflect.Descriptor instead.
func (*ServerTPMChallengeMessage) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{1}
}

func (m *ServerTPMChallengeMessage) GetPayload() isServerTPMChallengeMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ServerTPMChallengeMessage) GetChallenge() *TPMChallenge {
	if x, ok := x.GetPayload().(*ServerTPMChallengeMessage_Challenge); ok {
		return x.Challenge
	}
	return nil
}

func (x *ServerTPMChallengeMessage) GetSuccess() *TPMChallengeComplete {
	if x, ok := x.GetPayload().(*ServerTPMChallengeMessage_Success); ok {
		return x.Success
	}
	return nil
}

func (x *ServerTPMChallengeMessage) GetError() *TPMChallengeError {
	if x, ok := x.GetPayload().(*ServerTPMChallengeMessage_Error); ok {
		return x.Error
	}
	return nil
}

type isServerTPMChallengeMessage_Payload interface {
	isServerTPMChallengeMessage_Payload()
}

type ServerTPMChallengeMessage_Challenge struct {
	// The service's challenge containing the credential blob.
	Challenge *TPMChallenge `protobuf:"bytes,1,opt,name=challenge,proto3,oneof"`
}

type ServerTPMChallengeMessage_Success struct {
	// A message indicating the entire challenge was successful.
	Success *TPMChallengeComplete `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

type ServerTPMChallengeMessage_Error struct {
	// A message indicating a failure at some point in the challenge.
	Error *TPMChallengeError `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ServerTPMChallengeMessage_Challenge) isServerTPMChallengeMessage_Payload() {}

func (*ServerTPMChallengeMessage_Success) isServerTPMChallengeMessage_Payload() {}

func (*ServerTPMChallengeMessage_Error) isServerTPMChallengeMessage_Payload() {}

// TPMChallengeRequest is sent by the client to initiate the challenge for a specific EnrollmentRequest.
type TPMChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the EnrollmentRequest resource created via the REST API.
	EnrollmentRequestName string `protobuf:"bytes,1,opt,name=enrollment_request_name,json=enrollmentRequestName,proto3" json:"enrollment_request_name,omitempty"`
}

func (x *TPMChallengeRequest) Reset() {
	*x = TPMChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPMChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPMChallengeRequest) ProtoMessage() {}

func (x *TPMChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPMChallengeRequest.ProtoReflect.Descriptor instead.
func (*TPMChallengeRequest) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{2}
}

func (x *TPMChallengeRequest) GetEnrollmentRequestName() string {
	if x != nil {
		return x.EnrollmentRequestName
	}
	return ""
}

// TPMChallenge is sent by the server and contains the credential blob the agent needs to solve.
type TPMChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The encrypted data blob that the agent must
	// pass to the TPM's ActivateCredential command.
	CredentialBlob []byte `protobuf:"bytes,1,opt,name=credential_blob,json=credentialBlob,proto3" json:"credential_blob,omitempty"`
	// The encrypted secret that accompanies the credential blob.
	EncryptedSecret []byte `protobuf:"bytes,2,opt,name=encrypted_secret,json=encryptedSecret,proto3" json:"encrypted_secret,omitempty"`
}

func (x *TPMChallenge) Reset() {
	*x = TPMChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPMChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPMChallenge) ProtoMessage() {}

func (x *TPMChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPMChallenge.ProtoReflect.Descriptor instead.
func (*TPMChallenge) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{3}
}

func (x *TPMChallenge) GetCredentialBlob() []byte {
	if x != nil {
		return x.CredentialBlob
	}
	return nil
}

func (x *TPMChallenge) GetEncryptedSecret() []byte {
	if x != nil {
		return x.EncryptedSecret
	}
	return nil
}

// TPMChallengeResponse contains the agent's decrypted secret.
type TPMChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The raw bytes of the secret decrypted by the TPM.
	Secret []byte `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *TPMChallengeResponse) Reset() {
	*x = TPMChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPMChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPMChallengeResponse) ProtoMessage() {}

func (x *TPMChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPMChallengeResponse.ProtoReflect.Descriptor instead.
func (*TPMChallengeResponse) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{4}
}

func (x *TPMChallengeResponse) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

// TPMChallengeComplete signals a successful end to the challenge.
type TPMChallengeComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A human-readable success message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TPMChallengeComplete) Reset() {
	*x = TPMChallengeComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPMChallengeComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPMChallengeComplete) ProtoMessage() {}

func (x *TPMChallengeComplete) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPMChallengeComplete.ProtoReflect.Descriptor instead.
func (*TPMChallengeComplete) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{5}
}

func (x *TPMChallengeComplete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// TPMChallengeError signals a failure and terminates the challenge.
type TPMChallengeError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A human-readable error message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TPMChallengeError) Reset() {
	*x = TPMChallengeError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPMChallengeError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPMChallengeError) ProtoMessage() {}

func (x *TPMChallengeError) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPMChallengeError.ProtoReflect.Descriptor instead.
func (*TPMChallengeError) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{6}
}

func (x *TPMChallengeError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_enrollment_proto protoreflect.FileDescriptor

var file_enrollment_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x22, 0xcc, 0x01, 0x0a, 0x18, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a,
	0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x53, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x50, 0x4d, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xdb, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a,
	0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x48, 0x00, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4d, 0x0a,
	0x13, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x0c,
	0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x2e, 0x0a, 0x14, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x30, 0x0a, 0x14, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x2d, 0x0a, 0x11, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x32, 0x86, 0x01, 0x0a, 0x18, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a,
	0x0a, 0x13, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c,
	0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x26, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x27, 0x2e,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63,
	0x74, 0x6c, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enrollment_proto_rawDescOnce sync.Once
	file_enrollment_proto_rawDescData = file_enrollment_proto_rawDesc
)

func file_enrollment_proto_rawDescGZIP() []byte {
	file_enrollment_proto_rawDescOnce.Do(func() {
		file_enrollment_proto_rawDescData = protoimpl.X.CompressGZIP(file_enrollment_proto_rawDescData)
	})
	return file_enrollment_proto_rawDescData
}

var file_enrollment_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_enrollment_proto_goTypes = []interface{}{
	(*AgentTPMChallengeMessage)(nil),  // 0: flightctl.v1.AgentTPMChallengeMessage
	(*ServerTPMChallengeMessage)(nil), // 1: flightctl.v1.ServerTPMChallengeMessage
	(*TPMChallengeRequest)(nil),       // 2: flightctl.v1.TPMChallengeRequest
	(*TPMChallenge)(nil),              // 3: flightctl.v1.TPMChallenge
	(*TPMChallengeResponse)(nil),      // 4: flightctl.v1.TPMChallengeResponse
	(*TPMChallengeComplete)(nil),      // 5: flightctl.v1.TPMChallengeComplete
	(*TPMChallengeError)(nil),         // 6: flightctl.v1.TPMChallengeError
}
var file_enrollment_proto_depIdxs = []int32{
	2, // 0: flightctl.v1.AgentTPMChallengeMessage.challenge_request:type_name -> flightctl.v1.TPMChallengeRequest
	4, // 1: flightctl.v1.AgentTPMChallengeMessage.challenge_response:type_name -> flightctl.v1.TPMChallengeResponse
	3, // 2: flightctl.v1.ServerTPMChallengeMessage.challenge:type_name -> flightctl.v1.TPMChallenge
	5, // 3: flightctl.v1.ServerTPMChallengeMessage.success:type_name -> flightctl.v1.TPMChallengeComplete
	6, // 4: flightctl.v1.ServerTPMChallengeMessage.error:type_name -> flightctl.v1.TPMChallengeError
	0, // 5: flightctl.v1.EnrollmentRequestService.PerformTPMChallenge:input_type -> flightctl.v1.AgentTPMChallengeMessage
	1, // 6: flightctl.v1.EnrollmentRequestService.PerformTPMChallenge:output_type -> flightctl.v1.ServerTPMChallengeMessage
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_enrollment_proto_init() }
func file_enrollment_proto_init() {
	if File_enrollment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enrollment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentTPMChallengeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTPMChallengeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPMChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPMChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPMChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPMChallengeComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPMChallengeError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_enrollment_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AgentTPMChallengeMessage_ChallengeRequest)(nil),
		(*AgentTPMChallengeMessage_ChallengeResponse)(nil),
	}
	file_enrollment_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServerTPMChallengeMessage_Challenge)(nil),
		(*ServerTPMChallengeMessage_Success)(nil),
		(*ServerTPMChallengeMessage_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enrollment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_enrollment_proto_goTypes,
		DependencyIndexes: file_enrollment_proto_depIdxs,
		MessageInfos:      file_enrollment_proto_msgTypes,
	}.Build()
	File_enrollment_proto = out.File
	file_enrollment_proto_rawDesc = nil
	file_enrollment_proto_goTypes = nil
	file_enrollment_proto_depIdxs = nil
}
