// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.19.6
// source: enrollment.proto

package grpc_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AgentChallenge is a wrapper for all possible messages the agent can send.
type AgentChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*AgentChallenge_ChallengeRequest
	//	*AgentChallenge_ChallengeResponse
	Payload isAgentChallenge_Payload `protobuf_oneof:"payload"`
}

func (x *AgentChallenge) Reset() {
	*x = AgentChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChallenge) ProtoMessage() {}

func (x *AgentChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChallenge.ProtoReflect.Descriptor instead.
func (*AgentChallenge) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{0}
}

func (m *AgentChallenge) GetPayload() isAgentChallenge_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AgentChallenge) GetChallengeRequest() *ChallengeRequest {
	if x, ok := x.GetPayload().(*AgentChallenge_ChallengeRequest); ok {
		return x.ChallengeRequest
	}
	return nil
}

func (x *AgentChallenge) GetChallengeResponse() *ChallengeResponse {
	if x, ok := x.GetPayload().(*AgentChallenge_ChallengeResponse); ok {
		return x.ChallengeResponse
	}
	return nil
}

type isAgentChallenge_Payload interface {
	isAgentChallenge_Payload()
}

type AgentChallenge_ChallengeRequest struct {
	// The first message sent by the agent to request a challenge.
	ChallengeRequest *ChallengeRequest `protobuf:"bytes,1,opt,name=challenge_request,json=challengeRequest,proto3,oneof"`
}

type AgentChallenge_ChallengeResponse struct {
	// The agent's response containing the decrypted secret.
	ChallengeResponse *ChallengeResponse `protobuf:"bytes,2,opt,name=challenge_response,json=challengeResponse,proto3,oneof"`
}

func (*AgentChallenge_ChallengeRequest) isAgentChallenge_Payload() {}

func (*AgentChallenge_ChallengeResponse) isAgentChallenge_Payload() {}

// ServerChallenge is a wrapper for all possible messages the service can send.
type ServerChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*ServerChallenge_Challenge
	//	*ServerChallenge_Success
	//	*ServerChallenge_Error
	Payload isServerChallenge_Payload `protobuf_oneof:"payload"`
}

func (x *ServerChallenge) Reset() {
	*x = ServerChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerChallenge) ProtoMessage() {}

func (x *ServerChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerChallenge.ProtoReflect.Descriptor instead.
func (*ServerChallenge) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{1}
}

func (m *ServerChallenge) GetPayload() isServerChallenge_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ServerChallenge) GetChallenge() *Challenge {
	if x, ok := x.GetPayload().(*ServerChallenge_Challenge); ok {
		return x.Challenge
	}
	return nil
}

func (x *ServerChallenge) GetSuccess() *ChallengeComplete {
	if x, ok := x.GetPayload().(*ServerChallenge_Success); ok {
		return x.Success
	}
	return nil
}

func (x *ServerChallenge) GetError() *ChallengeError {
	if x, ok := x.GetPayload().(*ServerChallenge_Error); ok {
		return x.Error
	}
	return nil
}

type isServerChallenge_Payload interface {
	isServerChallenge_Payload()
}

type ServerChallenge_Challenge struct {
	// The service's challenge containing the credential blob.
	Challenge *Challenge `protobuf:"bytes,1,opt,name=challenge,proto3,oneof"`
}

type ServerChallenge_Success struct {
	// A message indicating the entire challenge was successful.
	Success *ChallengeComplete `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

type ServerChallenge_Error struct {
	// A message indicating a failure at some point in the challenge.
	Error *ChallengeError `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*ServerChallenge_Challenge) isServerChallenge_Payload() {}

func (*ServerChallenge_Success) isServerChallenge_Payload() {}

func (*ServerChallenge_Error) isServerChallenge_Payload() {}

// ChallengeRequest is sent by the client to initiate the challenge for a specific EnrollmentRequest.
type ChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the EnrollmentRequest resource created via the REST API.
	EnrollmentRequestName string `protobuf:"bytes,1,opt,name=enrollment_request_name,json=enrollmentRequestName,proto3" json:"enrollment_request_name,omitempty"`
}

func (x *ChallengeRequest) Reset() {
	*x = ChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeRequest) ProtoMessage() {}

func (x *ChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeRequest.ProtoReflect.Descriptor instead.
func (*ChallengeRequest) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{2}
}

func (x *ChallengeRequest) GetEnrollmentRequestName() string {
	if x != nil {
		return x.EnrollmentRequestName
	}
	return ""
}

// Challenge is sent by the server and contains the credential blob the agent needs to solve.
type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The encrypted data blob that the agent must
	// pass to the TPM's ActivateCredential command.
	CredentialBlob []byte `protobuf:"bytes,1,opt,name=credential_blob,json=credentialBlob,proto3" json:"credential_blob,omitempty"`
	// The encrypted secret that accompanies the credential blob.
	EncryptedSecret []byte `protobuf:"bytes,2,opt,name=encrypted_secret,json=encryptedSecret,proto3" json:"encrypted_secret,omitempty"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{3}
}

func (x *Challenge) GetCredentialBlob() []byte {
	if x != nil {
		return x.CredentialBlob
	}
	return nil
}

func (x *Challenge) GetEncryptedSecret() []byte {
	if x != nil {
		return x.EncryptedSecret
	}
	return nil
}

// ChallengeResponse contains the agent's decrypted secret.
type ChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The raw bytes of the secret decrypted by the TPM.
	Secret []byte `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *ChallengeResponse) Reset() {
	*x = ChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeResponse) ProtoMessage() {}

func (x *ChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeResponse.ProtoReflect.Descriptor instead.
func (*ChallengeResponse) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{4}
}

func (x *ChallengeResponse) GetSecret() []byte {
	if x != nil {
		return x.Secret
	}
	return nil
}

// ChallengeComplete signals a successful end to the challenge.
type ChallengeComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A human-readable success message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChallengeComplete) Reset() {
	*x = ChallengeComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeComplete) ProtoMessage() {}

func (x *ChallengeComplete) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeComplete.ProtoReflect.Descriptor instead.
func (*ChallengeComplete) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{5}
}

func (x *ChallengeComplete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ChallengeError signals a failure and terminates the challenge.
type ChallengeError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A human-readable error message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *ChallengeError) Reset() {
	*x = ChallengeError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enrollment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeError) ProtoMessage() {}

func (x *ChallengeError) ProtoReflect() protoreflect.Message {
	mi := &file_enrollment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeError.ProtoReflect.Descriptor instead.
func (*ChallengeError) Descriptor() ([]byte, []int) {
	return file_enrollment_proto_rawDescGZIP(), []int{6}
}

func (x *ChallengeError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_enrollment_proto protoreflect.FileDescriptor

var file_enrollment_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31,
	0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x10, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x50, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xc8, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63,
	0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42,
	0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36,
	0x0a, 0x17, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x29, 0x0a, 0x10,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65,
	0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x2b, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x2d, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0x5d, 0x0a, 0x0a, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a,
	0x0c, 0x54, 0x50, 0x4d, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x2e,
	0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x1a, 0x1d, 0x2e, 0x66, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x34,
	0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x63, 0x74, 0x6c, 0x2f, 0x66, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x63, 0x74, 0x6c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2d, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enrollment_proto_rawDescOnce sync.Once
	file_enrollment_proto_rawDescData = file_enrollment_proto_rawDesc
)

func file_enrollment_proto_rawDescGZIP() []byte {
	file_enrollment_proto_rawDescOnce.Do(func() {
		file_enrollment_proto_rawDescData = protoimpl.X.CompressGZIP(file_enrollment_proto_rawDescData)
	})
	return file_enrollment_proto_rawDescData
}

var file_enrollment_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_enrollment_proto_goTypes = []interface{}{
	(*AgentChallenge)(nil),    // 0: flightctl.v1.AgentChallenge
	(*ServerChallenge)(nil),   // 1: flightctl.v1.ServerChallenge
	(*ChallengeRequest)(nil),  // 2: flightctl.v1.ChallengeRequest
	(*Challenge)(nil),         // 3: flightctl.v1.Challenge
	(*ChallengeResponse)(nil), // 4: flightctl.v1.ChallengeResponse
	(*ChallengeComplete)(nil), // 5: flightctl.v1.ChallengeComplete
	(*ChallengeError)(nil),    // 6: flightctl.v1.ChallengeError
}
var file_enrollment_proto_depIdxs = []int32{
	2, // 0: flightctl.v1.AgentChallenge.challenge_request:type_name -> flightctl.v1.ChallengeRequest
	4, // 1: flightctl.v1.AgentChallenge.challenge_response:type_name -> flightctl.v1.ChallengeResponse
	3, // 2: flightctl.v1.ServerChallenge.challenge:type_name -> flightctl.v1.Challenge
	5, // 3: flightctl.v1.ServerChallenge.success:type_name -> flightctl.v1.ChallengeComplete
	6, // 4: flightctl.v1.ServerChallenge.error:type_name -> flightctl.v1.ChallengeError
	0, // 5: flightctl.v1.Enrollment.TPMChallenge:input_type -> flightctl.v1.AgentChallenge
	1, // 6: flightctl.v1.Enrollment.TPMChallenge:output_type -> flightctl.v1.ServerChallenge
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_enrollment_proto_init() }
func file_enrollment_proto_init() {
	if File_enrollment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enrollment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Challenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enrollment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_enrollment_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AgentChallenge_ChallengeRequest)(nil),
		(*AgentChallenge_ChallengeResponse)(nil),
	}
	file_enrollment_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServerChallenge_Challenge)(nil),
		(*ServerChallenge_Success)(nil),
		(*ServerChallenge_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enrollment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_enrollment_proto_goTypes,
		DependencyIndexes: file_enrollment_proto_depIdxs,
		MessageInfos:      file_enrollment_proto_msgTypes,
	}.Build()
	File_enrollment_proto = out.File
	file_enrollment_proto_rawDesc = nil
	file_enrollment_proto_goTypes = nil
	file_enrollment_proto_depIdxs = nil
}
