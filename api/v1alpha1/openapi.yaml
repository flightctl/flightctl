openapi: 3.0.1
info:
  title: Open Device Management API
  version: undefined
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: /
paths:
  /api/v1/resourcesyncs:
    get:
      tags:
        - resourcesync
      description: list resourcesync
      operationId: listResourceSync
      parameters:
        - name: continue
          in: query
          description: An optional parameter to query more results from the server. The value of the paramter must match the value of the 'continue' field in the previous list response.
          required: false
          schema:
            type: string
        - name: labelSelector
          in: query
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of results returned in the list response. The server will set the 'continue' field in the list response if more results exist. The continue value may then be specified as parameter in a subsequent query.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/ResourceSyncList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    post:
      tags:
        - resourcesync
      description: create a resourcesync
      operationId: createResourceSync
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/ResourceSync'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/ResourceSync'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - resourcesync
      description: delete a collection of ResourceSync
      operationId: deleteResourceSyncs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/resourcesyncs/{name}:
    get:
      tags:
        - resourcesync
      description: read the specified resourcesync
      operationId: readResourceSync
      parameters:
        - name: name
          in: path
          description: name of the resourcesync
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/ResourceSync'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - resourcesync
      description: replace the specified resourcesync
      operationId: replaceResourceSync
      parameters:
        - name: name
          in: path
          description: name of the resourcesync
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/ResourceSync'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/ResourceSync'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/ResourceSync'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - resourcesync
      description: delete a resourcesync
      operationId: deleteResourceSync
      parameters:
        - name: name
          in: path
          description: name of the resourcesync
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/ResourceSync'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/repositories:
    get:
      tags:
        - repository
      description: list repositories
      operationId: listRepositories
      parameters:
        - name: continue
          in: query
          description: An optional parameter to query more results from the server. The value of the paramter must match the value of the 'continue' field in the previous list response.
          required: false
          schema:
            type: string
        - name: labelSelector
          in: query
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of results returned in the list response. The server will set the 'continue' field in the list response if more results exist. The continue value may then be specified as parameter in a subsequent query.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/RepositoryList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    post:
      tags:
        - repository
      description: create a repository
      operationId: createRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Repository'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Repository'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - repository
      description: delete a collection of Repositories
      operationId: deleteRepositories
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/repositories/{name}:
    get:
      tags:
        - repository
      description: read the specified repository
      operationId: readRepository
      parameters:
        - name: name
          in: path
          description: name of the repository
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Repository'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - repository
      description: replace the specified repository
      operationId: replaceRepository
      parameters:
        - name: name
          in: path
          description: name of the repository
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Repository'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Repository'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Repository'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - repository
      description: delete a repository
      operationId: deleteRepository
      parameters:
        - name: name
          in: path
          description: name of the repository
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Repository'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/devices:
    get:
      tags:
        - device
      description: list Devices
      operationId: listDevices
      parameters:
        - name: continue
          in: query
          description: An optional parameter to query more results from the server. The value of the paramter must match the value of the 'continue' field in the previous list response.
          required: false
          schema:
            type: string
        - name: labelSelector
          in: query
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of results returned in the list response. The server will set the 'continue' field in the list response if more results exist. The continue value may then be specified as parameter in a subsequent query.
          required: false
          schema:
            type: integer
            format: int32
        - name: owner
          in: query
          description: The owner of the devices.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/DeviceList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    post:
      tags:
        - device
      description: create a Device
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Device'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - device
      description: delete a collection of Devices
      operationId: deleteDevices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/devices/{name}:
    get:
      tags:
        - device
      description: read the specified Device
      operationId: readDevice
      parameters:
        - name: name
          in: path
          description: unique name of the Device
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - device
      description: replace the specified Device
      operationId: replaceDevice
      parameters:
        - name: name
          in: path
          description: name of the Device
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Device'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - device
      description: delete a Device
      operationId: deleteDevice
      parameters:
        - name: name
          in: path
          description: name of the Device
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/devices/{name}/status:
    get:
      tags:
        - device
      description: read status of the specified Device
      operationId: readDeviceStatus
      parameters:
        - name: name
          in: path
          description: name of the Device
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - device
      description: replace status of the specified Device
      operationId: replaceDeviceStatus
      parameters:
        - name: name
          in: path
          description: name of the Device
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Device'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Device'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/devices/{name}/rendered:
    get:
      tags:
        - device
      description: get the full specification for the specified device
      operationId: getRenderedDeviceSpec
      parameters:
        - name: name
          in: path
          description: Name of the device
          required: true
          schema:
            type: string
        - name: knownRenderedVersion
          in: query
          description: The last known renderedVersion
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/RenderedDeviceSpec'
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/enrollmentrequests:
    get:
      tags:
        - enrollmentrequest
      description: list Enrollment Requests
      operationId: listEnrollmentRequests
      parameters:
        - name: continue
          in: query
          description: An optional parameter to query more results from the server. The value of the paramter must match the value of the 'continue' field in the previous list response.
          required: false
          schema:
            type: string
        - name: labelSelector
          in: query
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of results returned in the list response. The server will set the 'continue' field in the list response if more results exist. The continue value may then be specified as parameter in a subsequent query.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequestList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    post:
      tags:
        - enrollmentrequest
      description: request enrollment of a Device
      operationId: createEnrollmentRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/EnrollmentRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "208":
          description: Already Reported
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - enrollmentrequest
      description: delete a collection of Enrollments
      operationId: deleteEnrollmentRequests
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/enrollmentrequests/{name}:
    get:
      tags:
        - enrollmentrequest
      description: read the specified Enrollment
      operationId: readEnrollmentRequest
      parameters:
        - name: name
          in: path
          description: the fingerprint of the EnrollmentRequest
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - enrollmentrequest
      description: replace the specified Enrollment Request
      operationId: replaceEnrollmentRequest
      parameters:
        - name: name
          in: path
          description: name of the EnrollmentRequest
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/EnrollmentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - enrollmentrequest
      description: delete a Enrollment Request
      operationId: deleteEnrollmentRequest
      parameters:
        - name: name
          in: path
          description: name of the Enrollment Request
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/enrollmentrequests/{name}/status:
    get:
      tags:
        - enrollmentrequest
      description: read status of the specified EnrollmentRequest
      operationId: readEnrollmentRequestStatus
      parameters:
        - name: name
          in: path
          description: name of the EnrollmentRequest
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - enrollmentrequest
      description: replace status of the specified EnrollmentRequest
      operationId: replaceEnrollmentRequestStatus
      parameters:
        - name: name
          in: path
          description: name of the EnrollmentRequest
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/EnrollmentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequest'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/enrollmentrequests/{name}/approval:
    post:
      tags:
        - enrollmentrequest
      description: create approval of the specified EnrollmentRequest
      operationId: createEnrollmentRequestApproval
      parameters:
        - name: name
          in: path
          description: name of the EnrollmentRequest
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/EnrollmentRequestApproval'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/EnrollmentRequestApproval'
        "422":
          description: UnprocessableEntity
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/fleets:
    get:
      tags:
        - fleet
      description: list Fleets
      operationId: listFleets
      parameters:
        - name: continue
          in: query
          description: An optional parameter to query more results from the server. The value of the paramter must match the value of the 'continue' field in the previous list response.
          required: false
          schema:
            type: string
        - name: labelSelector
          in: query
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of results returned in the list response. The server will set the 'continue' field in the list response if more results exist. The continue value may then be specified as parameter in a subsequent query.
          required: false
          schema:
            type: integer
            format: int32
        - name: owner
          in: query
          description: The owner of the fleets.
          required: false
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/FleetList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    post:
      tags:
        - fleet
      description: create a Fleet
      operationId: createFleet
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Fleet'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: StatusConflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - fleet
      description: delete a collection of Fleets
      operationId: deleteFleets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/fleets/{name}:
    get:
      tags:
        - fleet
      description: read the specified Fleet
      operationId: readFleet
      parameters:
        - name: name
          in: path
          description: unique name of the Fleet
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - fleet
      description: replace the specified Fleet
      operationId: replaceFleet
      parameters:
        - name: name
          in: path
          description: name of the Fleet
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Fleet'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - fleet
      description: delete a Fleet
      operationId: deleteFleet
      parameters:
        - name: name
          in: path
          description: name of the Fleet
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/fleets/{name}/status:
    get:
      tags:
        - fleet
      description: read status of the specified Fleet
      operationId: readFleetStatus
      parameters:
        - name: name
          in: path
          description: name of the Fleet
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    put:
      tags:
        - fleet
      description: replace status of the specified Fleet
      operationId: replaceFleetStatus
      parameters:
        - name: name
          in: path
          description: name of the Fleet
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/Fleet'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Fleet'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/fleets/{fleet}/templateversions:
    get:
      tags:
        - templateversion
      description: list template versions
      operationId: listTemplateVersions
      parameters:
        - name: fleet
          in: path
          description: The owner of the template versions.
          required: true
          schema:
            type: string
        - name: continue
          in: query
          description: An optional parameter to query more results from the server. The value of the paramter must match the value of the 'continue' field in the previous list response.
          required: false
          schema:
            type: string
        - name: labelSelector
          in: query
          description: A selector to restrict the list of returned objects by their labels. Defaults to everything.
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of results returned in the list response. The server will set the 'continue' field in the list response if more results exist. The continue value may then be specified as parameter in a subsequent query.
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/TemplateVersionList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - templateversion
      description: delete a collection of template versions
      operationId: deleteTemplateVersions
      parameters:
        - name: fleet
          in: path
          description: The owner of the template versions.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Status'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
  /api/v1/fleets/{fleet}/templateversions/{name}:
    get:
      tags:
        - templateversion
      description: read the specified template version
      operationId: readTemplateVersion
      parameters:
        - name: fleet
          in: path
          description: The owner of the template version.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: Name of the template version.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/TemplateVersion'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
    delete:
      tags:
        - templateversion
      description: delete a template version
      operationId: deleteTemplateVersion
      parameters:
        - name: fleet
          in: path
          description: The owner of the template version.
          required: true
          schema:
            type: string
        - name: name
          in: path
          description: name of the template version.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/TemplateVersion'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
        "404":
          description: NotFound
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/Error'
 