// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
