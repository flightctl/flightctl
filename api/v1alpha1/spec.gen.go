// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"sfcb5lWINNqNtqOrT1f/LwAA//+9ylfH0MIBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
