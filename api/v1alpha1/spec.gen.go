// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
