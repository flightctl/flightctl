// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x9i3LcNpbor2B7t8r2bKtlOZmpjKpSs4r8iDaxrSvJmdqNfDdoEt2NERvkAKDkTspV",
	"9x/uH94vuYVzABIkwUfLLfnF3aqJ1cTzAOfgvM8fkyhdZ6lgQqvJ4R8TFa3YmsI/j+YqTXLNTqlemb9j",
	"piLJM81TMTmcnLFMMmW6ESoItW3JgieMZFSvZpPpJJNpxqTmDMbLguNcrFjZ2zQhOiUUx0kF0StG1EZp",
	"tp6RV6lmRK+oJlRsCHvHleZiiU1veJKQOSPpNZM3kmvNhFkBe0fXWcImh5P9ayr3k3S5T7NslqTLyXSi",
	"N5n5orTkYjl5/774JZ3/g0V68n46OcqyC/gttGzTmqQLWCPNsoRH1HyFeUW+nhz+isBVbPK2Ptt08m7P",
	"NNq7plLQtYHQr262Y9cJF+DGPU6FZkKbtdAkeb2YHP76x+TfJFtMDif/ul8e4749w/3nPGGu0/tpd9sz",
	"llDNr/GwTWPJ/plzyWKzLji5tw3w1Nb3TFz/QiUedeXgWfmBxjE3bWlyWmlSO4ppDdrPxDWXqVgzock1",
	"lZzOE0au2Gbvmia5uTZcqinhwqyLxSTOzTBE5kLzNZsRc1hXbEOoiAn2YDRakXWutLkzc6ZvGBPkABo8",
	"+fM3JFpRSSPNpJpNGttuuScODKcyveYxk+cZi4afVQCO5hSqgKTlbewZC5q9n07M1WrBuXJCYloV0Dj4",
	"f//n/1ZhQJJULKdEaSo1ueF6RShJmNZMklQSka/nTE4BdlEqNOWCiJTcrLhmKqMRmw1CtT8mqWADAHWy",
	"pkvWBu6+W34iEi7ae799/7b7bM811bkKUwT8ZugBJYqLZVKFsaVlMbvmCBJHIk4ly6ilCecGxPjPs1wI",
	"/NczKVM5mU7eiCuR3ojJdGIIRMI0i4fTleoO/DkbH71FNL6Vq2p8cstsfCjX3fjkbaQK6F/SJMebW6JP",
	"FdxP2YILpgiF2xuTa+hBcsViMt/Am1QlyVVUCiPGG8H/mTPEB0vY/XHN3eciRO+b99unnzDZ2w+88wiS",
	"xoUNwa1Ogqpbxx2p5u5/5krD/fWurW1s9sg1W6sBtKd2hiWuUynpppd+Yje8H91YtpMjf9U468B5muNc",
	"MMlExEKckP1kOBfE8SxJNywmr49P9gyMEk6FJtycoqGYBr0WNNJkTqMr81B1zh26S/56ekiWOs/Xayo3",
	"A0lXkvhAVO1k60dGE73aTKaTp2wpacziAKnamjxVV1vO0drEm7y1TYAyVRsUyzWgy/XqOBULvmzCyXwz",
	"b9yCL5vXi+Z6FQYvdDNwCN4s0+/N2c8t3d6c/dx/J4qpy9FCt+IHqqMABw4/Ew58PEsYMFlckDn8rNg/",
	"c3PNmvtN+JrrMG+xpu/4Ol9b1sBc+YzJiAkNCLCwt0kZfMmzmGpGLFWFOc1Uw+jiaTEqENM1F2bayeFB",
	"sXkuNFsyibyqYgmLdCr7aNjPdM6Sc9fYdMyjiCl1sZJMrdIk7hvAX9f7toM4t5BtORD3mcT2oTPwSSyF",
	"BjghAOeMsHcsyg3fy0XHeanW+Y6q4+KMwKYPp/t4t95PzSGcYIeDOuGfmvtLNVtu+kY7S5MkzfW5a16/",
	"8MU4oWt+bPa8MIjOzvnSsCtnZusqcFlbmxLpibdE2h8XhngTxZeCxSQq+5KFTNdwQMdHAcKQ8V+YVDBj",
	"A/SnJ/Zb5Zyv8TcWE4QIPlBclcuyTOXCIC1ufUbOmTQdiVqleQLM+DWTZitRuhT892I05R6qhGqzLYMk",
	"UtAEZSPk5Nd0QyQz45JceCNAEzUjL1NpsHaRHpKV1pk63N9fcj27+k7NeGqOdJ0Lrjf7RiKQfJ7rVKr9",
	"mF2zZF/x5R6VkZEPIp1Ltk8zvgeLFXjn1vG/SqbSXEZMBUnmFRdxE5Y/cREDGSPY0op6BcjcS3v27PyC",
	"uAkQrAhB79BLYBpAcLFgElsWJ81EnKVcaPgjSrihmiqfr7lW7r4YOM/IMRUiBckKaV08IyeCHNM1S46p",
	"YncOSgM9tWdAFgbmmmkaU037cPI1wOgl0xQw2bKWXT1ascvKahNVMHm3Gwa7N17DEt/sVfE2aVe+Fd0w",
	"fPEWtAPYaLiHjqy2Nh2Jxd0Ti+L5Cgs7nWcz6Olrf2/eN1/AkXR9BNJlzhoJ13akAo9/K1rhRO7q+f5d",
	"0ixjRvJLcxETamRWuRdJZoBKjs/PpmSdxixhsRG4rvI5k4JppghPAZg04zOP31Cz64NZ5xKahIW9y7hE",
	"1QuLUhGrkCAL/VGBWtCMa5rwmOsNcD9wY8qJzTSLVK6pRl77myeTJus9nbB3WtIu9W+BZ40jruNPTS9s",
	"BiZU4+ViygnyBrxoKXAwBubMwDlLszyBn+Yb+PXo9IQowBgDe2hvdm7oGl+vc03nCQtogfEiBbnKC5Bk",
	"FPvLt3tMRGnMYnL67GX575+Oz//14LFZzoy8dJz8ihHzMs0KXpOzBDh66t+HLoYVqULlSOYbzUKIAyys",
	"fBVUiJyIGC8ZrEkWdwL7IMEHUvXPnCZ8wVkM+rIgguY8QOzenDy9h3PyFqHoMqTuegO/A9TNNoD6MngT",
	"rtiGYC9v/1ZE5UrlVe6/8lD0XmCz5X5N1D0ApkYK3W2uXI7tSF+Lyq68UDTLZHpNk/2YCU6T/QXlSS4Z",
	"UYX+qdilZ01QLXAnfFEaAlWT4nlNwzhqh2zKc9MScCQ1MngB80HYZcgris8BrrH4hno2c7Kpj2kz8pNI",
	"bwSJvIaSkSMAHYun5CkT3PzXQOg55Qkuahin4sYMKmX92+BtIXgHioHaN1geX8w05YmCByQVjFCDctod",
	"d5RLCRyINmfqeFdzqc88klbTPVGlLyQVCma64G1GLtOOaL5mOFOxNF30ZTHyRWZd9hrqlFCR6hWTldM2",
	"DNCeGSvMiShDL5qr+DFfU0EkozHcJtuOcMQJw9c56NB5mmu74mJ5QYKWzgHd4xdMMHynw7ufOVZmtixa",
	"IlGpQuOGKqB85s2KSZ7htP67/pdvg++6ZFQFBRXycC45Wzwi2KJkHdycD9SgnQ4UEN2oTiB0Iw3shsbS",
	"GgZo1KfaFUxDV64AQHn+ncjSb9OowGgKlzJdkAtpBK3nNFFsSqyu2lfFm++T6QQabK18r63OjlX71Q1d",
	"+9nXm1eh2byP1leivHXclyS83ThKhwp790+kerBLQ/LMR9DJ8nnC6n84unFKpYKm5xsRwT9+MbysaYH6",
	"xRNxKtOlZMoc8Bsj4lgzbMYi1/RlnmieJez1jWBSwUquecSeMiPdcGVkB9NpGLCfCZkmyZoJbd9Mb4et",
	"7+qQNgV4WlsUcDtjWaq4TuUmCDQDq9YPDcj6HwsoP08Y0w5+8EcI3ghHD+r4gw97/GXoCeAlXPBl3fw5",
	"zJjwgutA9z6Pgp8K3vycRZLpW7gj3GLWH7XOQt0ABlnuTuVlKsxBNz1Rqq/pGpv1OzqVmoeU2E79jKU/",
	"etAG3u2W1NwJ7lKm4tm7zNylMBsiU0FY0YDgawYPkRk7zhPQqfA1U7NLYTZpW3BFfvsTsf//2yHZIy+5",
	"MLLlIfntT7+RtZXXHu/9+a8zskd+THPZ+PTkG/PpKd0YoL1MhV5VWxzsfXNgWgQ/HTzxOv+dsav66H+Z",
	"XYrzPMtSaYQAc5BUp2YRe6bhYSFSGt4Y9UgP2Ww5m8IwXJCVWXIxHrtmcgO/PTLz/rb32yE5o2JZ9nq8",
	"991vALiDJ+TopTn778jRS2w9/e2QgCbNNT6YHjyxrZUGHvXgiV6RNcAQ++z/dkjONcvKZe27PriYeo9z",
	"9Kap7uW7EiTm1fzO63IpnqHbn4Ecebz33fTgL3tPvrFHGmQ0jnOl0zUSlhOxSLuUFXVeB3Q5qJCNSQQD",
	"EYtg9gCCU9aFUW8QLvAyghgHbGHVBt9gMXDhzcXh71VjVrbaKB7RxBtvVEGP9qrRXrVfMiDDZQ/b5xaW",
	"qLeteNxwk2v6cIU1SDVh03dj6/ZXA0km3oRff+fFsXASvblmNyserUAzAT3JILc4Mw14kQbo6KtiFteG",
	"ODm3EB/Do3sC6bAzCzt0vp+2e8aVEpptUjidAZLV1nU7R7m68NqimSn8v8x5eQAtNj/oXlX9n0KvmsIG",
	"7v6swBWr5h0YcA+rXlNun9LOa+q/dqgMcZQPVAS+N+JO1AXdznFNV5MeqCIf3gbIY0+7Vcr4CK9WVzLJ",
	"RMwki1uf4TPbwD28reP26Xyr83RuUqVJK4dhP/uMhlVlwM9RKgSLrNRfHHbIRQmY9ZOnYUJkP5OTp75C",
	"qTZD+GJgz5fe01G77wWvV8ziCLUjbWbd1jjwfSXsIKICXkuFulxwnaIJ/x2VjkWQCJNrLmgyLdaMzlum",
	"25QwHbUdF41fi2QzOdQyZ7WrWdvV1ANg+1H6cnMTEG4wy3dSd6XiqrRdaKsbZ6ipXDI97Nn0l3IB/cKq",
	"OBxy2Ja8cZpkvDD1ILIoM0Nja2umV2lcRSlfQfVGMFDjgDIq0qncnDFVWV+XCqhrxd7IXc2qsxZQODHv",
	"oOS6lahbYlejRdx1a+74A4l5KboAIS8n2gkZD27abvF2lLxjrB6dbQcMizAPqlRVgVnGRbwRysnzW92i",
	"2oKLKYJfi3mDX8vFtHz2VlgA7Ge+YNEmStiPaXrl4OQ2/ANbpNLX7x0tNJPe39jgjM3T1G9R/rANKCpL",
	"aUwdaFNfTesw/gLbxvHW3ATOrViDxPXeKR7WB7dzfzAW1vZ6O/QLDdKGd37oZQhiJa121xpV7xYBqprj",
	"6i9b4mBt1XU8qn2urCLwPbS0nmY1jAw5pJTfqn6J+LsaVUAf3QvRO4lB0qNV+I0Ohp+ag+F0YgXnYSfo",
	"mIzdeSaGbGZPmYbA6KfoatBUJ6HY3W8AwnYgfcXcNDIijU4lyXKZpQovsKO9XStpklgDbaqjFRdLMBl2",
	"IMvCfAftlkJ3BuhY47uGemTV4O5BorGgoeA+YypNrjvATRX6HEHzMMRxj64hoYqkpjF5KPIkIXxBRIq/",
	"PDKbNT+aZ99JiQFjwz0dsNt78IAzya55mquX2xy0PWPXN9lYu098ywMHnVma5O2+Cj+mN065sEh4pMFB",
	"RtqN+QBAwxTsZjKdvErdv2BfT1lLiHbnlautrf3KvVZhV2P/K8FPc/tEoxxNXp8X6pNWUW8ddGa6qAyC",
	"8ayoZJbDAhVx3M5N3YZZfn0+eAu/VBVmbhvhN9t8ecqXrU6+MXyrj4UmSqJW9Mmf/3JIH89ms0dDQVOd",
	"tANQgGwrnh2vqFh+HMpeX0MQ5QW76aBygt1Yuob0rqBukq3TaxYPI26ONHRM5JqEZxOpYEOmakfc9pMq",
	"PGS2utgFM9mnlImyfBinUV2Hs3jEXF19SP81W6dDeZ3QCHW30yyfFIPa1Q0FbfcdVxX/FQR29VKXweZ/",
	"p9IKX8eSax7R5Nah7aGF+pHzza/l5KGv3oJCn90iQ998Zz3P0tnygNSeD9rhLVBaU4allMisy9KtkkrU",
	"3KQab3vUErrvFoLfb7GGoJdWaHqVJiET4oUXvk0jza9L44XV2m8r/TmbTDBKpqpG2FobD27GA9dhORHL",
	"WAHVCmgNzNIqOGj9wuyJ2ICj4TCoeYaFoIB5w+IWYxJ+hMgJl4zA82mrecgZxu6Uas2kUF0B9CiJZLZl",
	"ZTMNAyt6Nbl1GDkWmKkpplhKJfw3zY3ovFjwd1OC0ecrliR7Sm8SRpZJOneTwfphdrqkXCjtHOuTDUlS",
	"GjOcAta0pu9+ZmKpV5PDJ3/+y3Rih5gcTv73r4/3/kr3fj/a++/Dy8u9/5ldwv/9enn59l8uL/cuL/90",
	"efm3t//+8D+GtXv0t4eXl7NfsWHo87+F+K7+dDGoLThNEx4NfHzeeD3wur5vfVfanmr/q2/qDOtalZep",
	"xhJPYvuuKdhAeIJeDZHOaVLGP3worbVMsU9ySzXvFvSl6YYSwDHaNKZvPXrNGWF4BE1xBgBHdBdxjgkG",
	"jsHwEhqSGW8ZNeO/N4MIdukpYOQLZ2O5lanLjJBQpc8ZE0OiX+y1wGAPJlz0mKV/w0NdCj37rUwDWz4s",
	"RZ/K07Itr7m1Wq5xIZFKO8/QAQOU7QtyFW9DqeIWlzIPMyqrqmLiJIyYPhj961dcYzibcr0l1Lyr5t+A",
	"dt789v5F3l1dURnfUMlAvY+Ozlws7ZNJKgr33fsd2TW4oLDdmax34HO0VU6vsD36NcQehNN3+SbP0/SG",
	"SRa/XixuKfxU1urN2vjmLSTwtSraVD41LbSVz5UdBL4HBKMKtg/zA3+dOf8hvJ1eUDp7l6WqjNelSyb0",
	"7FI8o9EKQo2jVEqmslTEGHxYssR4Ta2pK6IZnfOE683sUvR7lOMmKrc8SpMEM6QWpppWVsMsstUGaF6X",
	"oyVkY8Um4cxmnvWlZQyvhXnNMaTBwqnh716ObM475CX2Q5pqcvJ0m6HQYX8IZW/ECJinzBElhHZ4l68L",
	"ynXuKNfA5dWNQj5ACyg0VzGtHl87HWlwxT0uUxm0BC3hmgq6xPhVoJP4ZkAW3ijJY/PlZsWE+91ZeOeM",
	"xOmNsBKJoes2DLp5BV27c4zX6eU3cDNF6+LdvW3/9z1gi2+lq8Y17d67qjL8Lp+rymZv91w1h9jCr6ME",
	"WOHUkV2kTynE3r/O9euF/bfnzHObd6qySG+KwFd/1mDnmldR9WvjufEFpx42yWVOdD6poMeWTOdSsBgR",
	"bsHQuFamIQZzVKc0Wd7ktsduQDR4zBY0T/Tk8I/GW3RE5pLRK4PRnTuZb8ilv67LSdNDqbxcqs5jfgKL",
	"t2vqXrhONU1adNXmkxdyEZppYHS+pX6fEnSsYNEFnbrvL4BqGris9fOvbThIjbi66o2N3TocdfqJxdMG",
	"H3CrCIKXGweAt5urK8x0s025hphLSI26Keo1OF2uNR96Y3bvpaOwwFOuZA6z/pDH1qO8po6rtahmSmXX",
	"LLEZjdMbFptl2dZIJiWGpBMO9zSzcelNMCxlmmc/bNrVbQmds8Tw8cC8Z0xCoAB0g+oUztRezj+H5Vb0",
	"T54G9uGvR3v/Tfd+f7z317e/7hX//p/92ds/Pfqb93GA7hRUvW8Evabc2jWD6Xoxb65HddwZkaJngdSu",
	"tgKCD7TJHWl34etRz/S1bMELkovmvMU5bjV/kIfL/aQplrBNHhsK0r64IiOaW0cRk4ZxLTolkU1mj/Um",
	"ig4l4+syTYE7DyWQhoFfW+9xZrDHjj3fEIqKu1xwPSNltHfxI2QFOiS/KQycVpjTbUp+W+MPGAttfljh",
	"DxD1Ddfbu2p/O/z1YO+vby8v4z89+tvlZfyrWq/C9+qZiFLD1A8JrGC2LdI5iIsBwkA1rXmD+lxdllBu",
	"xFrMnDY4oQZOdWo7u79/sIO8n3o5N8q03vX6JK7FntWG9nHG5ZjntkOdsgXGDL1IjYQgTdg2mnTkJrb5",
	"tcxtxAV0GhNGH98xzPsrDPNuINR2Ed/N7rtNQ9ySIygkMLQ2LXOvhTUGBaHw7GGkJFnt0X3U5SLqyPJ3",
	"s2J6xaSf1I6sqCJzxgRxA3hnPk/ThFGB9qw5Sz6kUNSRS+GII4E6NcuSTVmaoyWHRuPw7D63OiFP1hok",
	"TrQfdZOP75m078Q9a/SHnv1Rizck8CZU29QA/unfUFU5+GGGRtfjh7a8BNX0BqbtAPHJG3XqbykghUy3",
	"PIJbuAQEAF8c0Cx418IRPsFm1WCfRpORJfjoYT/BMxnklNBkHMdYoC812XiYYemnAeDDydF5s2iI1KfR",
	"9oFynv3gKBNwNFYtrtWh1NZ+ll6FaQj9dyXwiFf9roZn3LkLnsFlSLWCG9YW9dgIrgpnmhUTxNxkj4xz",
	"FWJyWvgMA9VhR95ia2ppuN1bNOhpKJnQW7E0nnNXX15m/0Y1kzPPtk653EwwzD6A8u4siXJTidBxurZJ",
	"F5u3Sm+sGsoQQsA9W6zzecKXK02ODWFME/+yet5fzWpmhjhGhapsK33IUQ5lZH01SM733FsQPvY3Zz+7",
	"03lzUmIhmLJJrtBFN5PuLflfZ8RcEeABEi6uMIEgzOdesA6z/20VPW36nhq8yglaYTDoSgAc+6+FK0xX",
	"pku3L211WZVLg8WsbnE1cOg9DyX3wkl1jqGhl5H2KdW0XKaP5qAbBJ6BuqWb8bG2s1npxc/nYcTHxVyx",
	"TecifmKbrSa/Ypu+uevI3gKV5hIHHfxwkjCAMrjsSAYt0lseurcvc6lSyXUryMu2R65pO/R9XqEYmVSq",
	"nbQhcCjaC/lR8woD8YhjyVThg9G7cfLQsZarVGkjYR5mqdQD4vc6AFQsNnjy17amd43+ukKF3XIv1IkA",
	"/T8uH6mm5MslpAcDBtxMgDYJZPRdqfRMsgV/h+YGxkFlY4Y7JA/BXgCeJ+YH9cibwX6luU7XUITCxU88",
	"CruAjRLljiXKuIz07Hy4zIguKhR8za8hfBnVpcOUqkVh21GW3Lks2VIu4gjxbq/w+KpJblXOHeGY2dIO",
	"O1Sjtxd2UKtU6ilZ02jFBSvXaY8f6E816rxWAgLJkWf3cz4Vx1joxksqf2xL2Xip6/HDm8I/vfpLo6GL",
	"wa/94o/ZjH1r+bnW4/j0TSMY8/j0TT188/j0zSvzGpeNXkJ0a6Mv/lzvjr/WRnjK1VWjv/mx3tv8Vuvr",
	"hd1UPaq9Dw1HbO9bPXj1KVeWu/BhE/pFM6EbbnX296ZDXdGhcKXrqp3QKnXWDq0lGUl3Go+O0gTmlxNx",
	"bX87sW/JBVVXxcTgfOeKCZ/KFCoriGVHCX/D3MBdHUTjz7GpV/Ok3d/IYwdeY2kRvB1TYm+Oj5fFxXG3",
	"6m2/ar1bwVV9ggLVU6ZF1RXc1NSyQa18k5f2oMYlX4Pl3fo+uRo7U0OmcqDasa12kwqESFGfu5L9AGM/",
	"s8zG0HZeok51VXc+np77t8XI9dQzbfkiegKvWrJLDLjNLeP29StnCCBRa/WMestylPpL0ePPZ5t5/JJL",
	"4I818vxUD++HVidvHXxQ7FvLEQzr3X3dbjNG/WL1lzZpO5y+nkOvyvu3W2XjAIrQYjxzn2oGs2vgSkcr",
	"2Ue3khUHMcw0BhL1aA77Ys1hHtsTZHeKVaA4AmimslRARaumIFJTdLnO/cqXLefp0R8V84b2/JwnjiVu",
	"2zN8RHvOgofyxkZd/cH7kmj2TpOHby6e730HSp9aFVtvEnDs50mrNca0c86Y/Up2z7c06LJrtt+evN18",
	"LdK1t3hwt2TZ4wl7oNBZe+r551p1GLjpugRnIl8zySNy8nRGnqLbMBDey4lMU305CWNJGrPOqTMmrXwJ",
	"FaBn5L/SHIgHLgbjA9cG1Rd0zRNOJUkjTRNn2kkYBVfb35lMXW2kx3/59ls4Poq234ivbQdM6R7q8+2T",
	"x48M9dI5j/cV00vzH82jqw2ZW29jUqSAnpGTBTHUqYDYFMMDq5sBFDD7VCT2AGaWFy7fkavWdIgILcje",
	"dQcH1XbnXmdegU0nGEWFosJmKfMi5od5LVeGLvUelZ/PirErPzuG9q1d4XbxKz4Z6eXDfJzra3w0h7SF",
	"7JSC3e+PZpRHQRVa4j2A7Qvgto1w8zyerbU+HpMXj47No2NzQ3LaypkZu+zWgRnGDEtaxaeqpIV5YEdM",
	"/uiSVnkQgyQtpNmjpPWlSlp+7d42B7Rmm+18z2wIexnOVxNa0HnrB8isHGQN55D0zgYPljnv5syFCbKY",
	"2KGHRAcOVT/dT6bdW1kPLGdkm4eCNV414ssz13jWEgAOzf7O9QrMRmrImCAVr2jsBjcHwqB3eJKyWTVE",
	"sxL068IqrQzqDd1tCC0b9h+RNyjs4YaqIrqzmgDcnkxpkKyk/i6qcoBj6Zs2GaEzIXht3YHTbcXcsJtw",
	"8anFNRgQstcd2CLssBSMZ5XG4LyDcOslaQZwDsjw0LB1lrQ6jrqvtfzmzewJtXj9e6koWk+aEmaf6ukP",
	"3H7bD7mLLt+aIA9OVQmtp4SBSE6TZEN4SQA8Ar+i1wxUBuADBjmoQLNBBV2yigcWF4SSm1WbCms7N9/i",
	"xD8802PcyNWyTXmPqcOYQTxV9c3d0q/4BRNM8uiMZWmhHQh6xi9oolijfp+ljt2WLRza2cNy2ZLN5GGW",
	"KsXnyQYSumv2CFJfKQ7JIwZVDDBD2zbBvQaL9jfe5iXXZ2Y7oTVK5+WEvpEvuK6mJCbovLdNggyXFsMV",
	"keBLR4HOiu23lMd1n/u1z+VQBa8cHBPp+Bm75u253KT9ahadK1Yy0Z3rbVQTLRbfmHXalupj2lLKuKlr",
	"r+Tt7l+NrZNrTz40MVRvixybUSrQanm5Fp0paLH+TK5AflgzHcgLMWeEvWNRbnmHQZTIrK2TGmm+Zpaa",
	"fGZJK8gD9aCas+LB+kE1Z4URox+sHnx43or3ofw4w6z35e04y8Xk/VtQUlZ/DCSSuP6Fyg+JRXomrrlM",
	"BTyI11Ry8K27Ypu9SsVZLv6BaRxdMpRcGBgHc03JXLRaydYG0NUb6ufvo2JDqFzma+AccuCHlaYipjLG",
	"POREbYSm78zlMaI3Z0nsrASKrK0DgZtJkYxnUCN3CQHiU3OjOKD3htwwWS6C5CJmklAyp2pF9iI0PL0L",
	"x47dpPLqKW+xG5iPmOjIpSwqq+7aPEC5EE7xYBc6gNTlopWklGh7uM1dK7qdUr16nfVq3Ct9nr0zDB4m",
	"7u9dl9e4qVUThBWfPeLGzP2DxIIp0TJnBCQiO2CY5tlMSCwOnlpoyw18SlvMdoWk91A9ImZ+sDFRDSZL",
	"ltjyTfgKmy0oqrmytjT4tVj6cFVXxRoUIMjt3AC1tpGCLUADLQEFQHEtC1ADpxyh188HgjmUbWtqoBq8",
	"I1pnZYacTo6x8Rp63JJZ5I8XF6eYgtJQggAbT2eRDLxdmLWHOHOzTFNNjo/C4jxV6iaVcRsDhl+JjVVY",
	"obm0ua4iE0ExXsgb84pnqG38hckil1og9OSKZ5bRtUwjufY6hFNe6EQNAsbFz+cYEuWM3IOWbka/Ypvh",
	"o1+xzfDB06u21PPwaTfQzxWT7Tyi+9o71wCLb4kB3dLESutsoDghcCXDBApDFU6DZMT86kQIlEMfKCQi",
	"Ntu0Tr20G85No8gLatMMw1IUM/ey5O9uJNeaiQ8WR2RTHHHSBEXTjNqIiHQIKljmJLR5WbicvDn7GUll",
	"lK4NyV9om2hmThV8nZETDRX5kY1h5J85g0SFkq6ZBhtPHq0IVYfkcrJvKOK+TvedreBv0Pp7aN3mKNAq",
	"8hTHd/9SjruRbXT9lrqAVeVJ6ORGypaeJ/pOdAhwa+HcUxLRJDHvZpSkAqXU4E0Ch3zMFdpyp8x4eN+Q",
	"FUxFgmmtXVfD/kYRU4XFrzzqGXmjwPAEsYTmgrubiQwwyEnwdtlVO35zvnEH7Iq7mbMwTDWshCnLR0OA",
	"3oolGdIyjZF7dkdFwQSts8LGtZUeZeqfa+jGnKzpkrXV3Brsa+IN8Eua5GtWq531x7CCjWc+PXXUjXLB",
	"pK22WHBFfokxGl0NSkDaVpCyFSyneZKUSu8yfeTJ4lWqT1HL2kgk6WoDVP2RHvh9HszI3404opiGb0fJ",
	"Dd2oB+hXhRvlimQ5mLMMCd+AWF3r9cp8qXQClpImktF4Q9g7sPOKlpIQOOdkWt8MjDrQtcnApxjH/FEb",
	"y/xkx3MgDdyOw9bL0elzXo7momIG1x9t9g2Uf/LD2uwTh34Er49P9kCTwqnQFvKGH5GaL2gU4ICzyjXq",
	"3ZR362BHLi6zG1v6F4bKdsmWXGlD2ID8rOnGkCzawDTTUaSY281ayl4fnxSDgTyfpIZyKmK1qKlcFxTU",
	"tMWBlJ+TeMgr6/YbPDkoKXL/5AormXTUgvMJkmXJblPxsPTX6842Yhc0kJZB4yHMbv8+Ufo2rzN4Mjbp",
	"y2ABu62q4t0yT62ACwUj3a/5PxAMFTL4g1H9ZVtMsZkdWhAbZ+cCdJ3aa0F5kkvWIgJouTlO85DfeGnx",
	"N0+RqzGtrspsj6Y3b/MpME1PC778A5Sm5SBEMBaDihGm3hRLCqfhp+qq/8AKHy/YGggfCziK/gtWMeQX",
	"s9XOK3TvfsrnTAqmmTpnkWS6G0V3hR7TiYLZhprKylUS7BgwrZubc0uZtpJKEifw5FYYuUW5OAwg5ZqD",
	"A6iMRh2jwOfeocIUpxx+6kGo1xnA9i4PKXR1wGUi7H1ZkuyYK81FpG3Ksym5WYH+nUYrwqFqlCKonNGo",
	"hLycXLHN92CEuJxg+Sn2jq6zhGGy68Jq8X0m0ziPbBIkw1mk4vtc7TGq9N6BARBn8vs5ja6YAGI2vGx/",
	"1RkktDvIxO98S6yLKfyGSoD0GowK1n+8dJQkeLdVnpQ1XNFlxzp06mhVKs3RiHX06imLZ+TZOtObfagj",
	"Xp1d2WKshl+ygdWBkrLeqH3v48t6e0juX6z0g/LfrWlmNv7HFdtM4Yzfo6UpnL+ueeWc42HQr9R88VJC",
	"OGcbq5nfCL1imkdexfNCC+7boszNxeO4phIquTufFViGmpEjr7Qw3aAaHcT6FEPd/yjdd6bELex9OEyK",
	"izyA+i+RMTb3h3vpd8zflCR8zQvZqixlANe70MShaZMXqZIrqQaZhIcTgn0AQkURBD97D2T8oP/MWeFs",
	"7NQLOiVcKfiATLpLKGv5b88hlqK7DTjhcIVkwb6ZnF2jQkOwd9rhSlmOoQD3MYIJCw1FqVBcgdIRxjLL",
	"sj611gOEOZDZnVY1ombfzuQBFUokpDIywsmC3TjDMJ5pRsFN0SEtnLjzBEcFTLUeUm79+DjmSDZHW0uE",
	"xGNMkZY4SFlIW6cxLiHnPkT2sSnJRcKUIps0x/VIFjFegNIqviGZmKiyXS381ZpywcXyRLN1C591UblR",
	"Kp8rc7BGnoPLZdcJgMcH0xAoA36rA42xiTtotxWI4ip6usvihL7YEjQI4QK7rqNsoF6o3/NiH25RiuRY",
	"6AruKQLSDOOAnrCFJrkA5BExSddcexZtxSSnCf8dJcTKQnnpi0ke2vivOYtorpiROrlCN7NVLsDym5Zf",
	"AQQ2MRjUTINGj8r9SGZBhzewvifcSGHovtVOnNd6msSguaaCXB/MDv5M4hQj6pj25sBbbjhQAQW8ladu",
	"r98bs7M/MaX5GtSXf0Js479bRz1b+xEWgTnxinAHM69kQCnbxkYtJlADWXgMWM1Gb/2o0JtRe86aTG3Q",
	"aoVVjW29HZ962icfawmCW38I2dBu3JZXrbAql1njgYDAK1tLjnJiuJtXqYb/PntnHqfJdPI0ZepVquHv",
	"oKCGMSAt+7K8GbYpyrlXBOj+Uuk+v2hA6G36bRPsA2rZl+4Aw+NC6oeLZYBOsOtBk7PDLEe9lbk+qSpb",
	"W5cJM+D3PIibBWSLbwaTq2wSTRKSmTdOGcoSZJWQ8luKD+WS3FuNSfywLapoApFWQqS6LCx/W0G8aAyk",
	"ollhvEEGIpvi64KvmdJ0nXWUFsAa7xAHBA75GDc7vJ5AbFN/bTuXJfMxK9z/h823ZIK1hTEcEXzDo+IN",
	"rURB0UJFSspRyvJ6CmpzoWc+OU2zPKFeNVkUn2fkjNF4z3DAA+sFfnAi7ZcoRtjgLqiIhgw7EjQw21Lh",
	"86upXFJhnijTzrDEy1SaPx+qKM3wV6TtjwrGc3Jr46oN9gs+DDeCBUVKLwqNapLegMcnJnqA342IYoRj",
	"LuJ9M9flxMrNLcxehV0Nul9Z5t7Pp4f8aVFeCznoB8qLPrTsbyWocZjPQz3TYxAGFa2P72xce7LHqL/d",
	"Rf0Nu9PF2cSdx17hCjAAEMYPKZBOzePtVSMrXvwtHAd6Hfe8Uok+W0VjTKuQJagcwwQLQVYq7G93RP7z",
	"/PUrcpoCboDHXZuHQN4CXrye5qrHIIza1cwagEyzLrf2Oo9zymTEhA5q6MtvTjyxqIK0pIorWdkYWwU3",
	"eMYSqvl1iz/RWbWCHDZF5asD2ZBYh6NAXydEuFfoVaot9aTCWqBhZ6a9e1rTayY9P6RCszhRMtrnImbv",
	"Zv9Qw+hZxa0ktO/iqwO1nxxRVsId3K1ccm2dJoI38azDS6oSpOHB/AXXvscUWFbR08V36Rij4ce8FmNe",
	"i/0SibZLbuH1222Gi3LgsKGl+r2a66L4xsfcNZ9AxgtZO45B+g2P4o/JL77U5Bc1qtOB5BBMX1q4aM24",
	"UWUqhkUE1WN4e6OBfCffvsbnalW27dl6S3R5vcV2IeZViHxgiHd1sPst4eQUfUcJk/osxwrndb8gbwe3",
	"SfdPzdjhUhD9WTIcj8vXyGV7HhX0mkkjRECpfjArzq1NcM4WBulhYiNfkOdwnofdwZ/9YZ1dIZ2Xl/G/",
	"t1cfzzqEpwtMPOhkonRhd+SXQlFBSKLmDf1erpnkuj+RhX/e57ZTkbaykt7BjegdU2UfVeVZ7+WqTBYo",
	"eoNfG3fGiTBlZQCvcMCJWKQD3Xpb11IO3NrEm7G1DS7F2/RPwUf0rHgXzbNB2LssVYbR4BS2fXR64m/a",
	"q0N0jkUInVojVHjdJWtxSVwmFcmuXNn5RkST6eTCZuZwj0tYMqzYAWA/Henlj0/ftFKsLA8ZFaaTp1xd",
	"teag4Ooq3AsNLq3mm1ZzTDMxum8nGZwZvWU3fe9W17p6snG0QKKeQ7xi9WkeYJgROPe9mZHiYXPU5Lfr",
	"S6l7NUJmOPMcwWuZAF9uWs3Ia+fPgr9m4H1iUZ8rF+a/BR9bf74C7Kyi6yzhYgm+qMEy5MVrM2f6hjHh",
	"9k+gq1n3PTwgRUKAjlwAbUc99Y8isOMu6gzkoJVQma9VzU9Fmw6uSdbfBd2orUN+oRnSKcbNgXeOJX4g",
	"/SFXMkqQo5Zo1BJViJlBuW31RF7PXWuKyqGdrmjE14+s8bGdNyLa+qUEaj/qfL5cnU+NhnQ+7DW9jyuJ",
	"8FA9Kp5tW1W2S+HRk0asKOhQzRfCRSMq+cS0LFpgEGjZoUR7TblAz+gQR4ExxyI1V8f15gann9FoZeMz",
	"qkOhT4obwCzYZ2u6cfV+MwwMSYXmvGuKlGhNSN9VJrTAO9R9/26hevP7f6Dyjd6OlHamNXM6qON0vea6",
	"zQEU3JRNA7KialXmaDXraAkJcgO/6HDKKgb3fK4CYw/xd72FDrFWJux+AgzrddJCWgzBbl6H/aMAQ9kN",
	"luUgD3kR8zpPGNQDFnkCYQOTQy1zFszKy655mquOCVyTD5jFPnPPOUviDs4AXK6toxrkI7P9ShJQ0pbi",
	"qjtIogtZ4UXX4AkH+uxWQgar6w5eHkwUavPMMuvh3RW7vkpv4HWCtkWmVnNbvBzcXVoqSMV9br0X25C8",
	"2qipNlJaUs2Wm+E6o9qIHcDw0zNUSKf/2WnG7aZJhr/W08bWURCyNyCyXJQZGDtVT3mZMyxuHtOAtMn1",
	"w30P5yNz2NcPebxk/Yuot4d0O5Df5GIlmVqlSdw3hufAFPa8cTlr7ckGkdmduwF0tEp5hPk7EDD2UtpH",
	"t3oyPtGqXoUQip2r1Y5SmZ2f/9iVySyT/Jpq9hPbnFKlspWkirWnJMPvqORSq9Oi76eRiayypN6MYXbn",
	"AKDhScNCF8c3R27nZqj8Y+6xeN5RdiKz/Zozl8tV1JWjqCs7T7mrEJFrYwwtM8hRx6hzKay0aW5bRJPE",
	"PmxxKh641GAE4wQ91+pRN3G3uokoWA/uPF8uGYR2gAugPZzIlVAD+CETPyWPCV+4SLE6N/rNk6Bj/6ic",
	"+CxL97cX4W9U369NdbPa1CYwB2252MvJc8z3cTmx67HxlVyVIcZsnemNDYmEiMqqaFkGJh+RM6zvHyVU",
	"YoyC82S1m4VrPM8N5WEYm5leMyl5zAgP+zWobhLnwjkK4Nli5ofkcnKOTM3lhKTS3+mdXxvD7e9REe9Z",
	"kE5uUyzdbtySiUCB9NCDUDdEN5+paoOqOcoPHSnqZ4wvwWhVGq1K0KOGPNsZluqdd2tbqo0edkUONKr6",
	"I9cajFzgx7dQhY5kkGq1/hSMhqov1VAVIkt9uN9wU668/VYF084CLMIFei+cuozcrFLl1eCy+L4A78u0",
	"nyHC8YdstqC9wzI7+kW4Gmkct3Y33jKtYae1w97qI90RiV7JglYA94YqNFU4xBgYlb6NaeLttOc+3cL8",
	"VGzA3r0ZnC9fs/9OXZJJl1H35xR9RmtrMDD5PRWsjIqWyrqRwWwnR6+OXNzk0dmzo/2fXx8fXZy8fuWS",
	"nJkfqzwwpgWCwvaSpBGjAt8Q17OogQMFcKjUPMoTKoni5iS4XnFrJ6KS0SmI7DaEkRxBKXK6/4rd/M9/",
	"pfJqSp7l5v7tn1LJnUNfLuh6zpd5mivyzV60opJGkNfc7bVWfp08vJy8eHlxOZmSy8mbi+PLyaMgeUI9",
	"9Xm0YrF1Ta8bBcoXW9lWLo9+ao4xInF6I5KU2nIwsb1uys/MpfnafU1tnmNiqxMFeIleVfWxrJYzAV5L",
	"6heSRswvCzlU5669y9X5drp2DRodJkoeS1Td4nUbr/SCa5/khlNjtCCqG/Tte8zSmEuuN+Zk1zjpnFHJ",
	"5FGOrgT413NHD/7z7xeGj4TWk0P7tZwSAlvfm4EN/roUaDSCo2JrypPJ4UQzuv6PRcKXKx3pZMZTF0KO",
	"pOo5fIGkYDJNyAWj64nVmk7cy1zp3Uge8Wt1iLcPQ90eWSbFlgpE00GUUIlByF41wXSBrxLQHRYvy1qQ",
	"Nh0Vl1AcyFxuhQkNEx4xgep7u7OjjEYrRp7MHjc2c3NzM6PweZbK5b7tq/Z/Pjl+9ur82d6T2ePZSq8T",
	"vIIaoplrQDo6PZlMy+syuT6gSbaiBzZTkaAZnxxOvpk9nh1YrwE4asOo7F8f7NNcr/ajQv29DD3OL5iG",
	"ohiY38xlIi5NHLMiPxBPxUlstpxrp32GfBWQKQzmffL4sbsbDLOUeQmO9/9hVVWITr3pjctZ4OLVMuH8",
	"ZEDw7cF3O5uvkLyayQ9z8HYpa/6xGK0UdAmBD1XoIf5VTsBm5metZ/CLbWAkndpZQLK48Bm4XnDyZY7c",
	"X4MFhgKjGhHJLQ2YFdN4xWgMmO/ud65XqbS5yRyJoIFML+gnf0eXof1wLmAnsA24Efcy6Q80Ji4mBCY9",
	"uLedclHu9ePd/unkz/cCaJfc2sqLBApLD0a+qAzuURjc40THVkwE+bo1KKjqqVbFSNOztaPqw1HI6mM5",
	"o6KhQVBMS+vc5KAuRCEk2yJBXuZPV/HajGAGgIRemKRN1xs9cKkuH9hkhVb5XzjTVDNBOgIBCyrpQ5EK",
	"tYs0TEO5rWw+Poxa0JJHukzgCD64NkOnS1GGqau4tAmJq4UyoNxFkUY3tNCkkhr4/laLHkNTx5qXVchT",
	"aUB8xciD7x9MyYPvzf9CVct/+f4Bechmy9kUcyofYFLlg+kV2zz5F/zjiWXoQzuFGW+3U78yqJ+4Ey9e",
	"sUk/nWiZKvSiTN0KWVswT2X7Rat0J3xRveWQBgYHreVkhXrTKyYapUdLxIEQGS8LKkCo9WbwNWRvKeHU",
	"azC908eulYqA+radGfpyn743glo2hNlX/pt7mPV5Kuc8jpnA9+4+pjy3UssbUdhPK69d64sGoYhZGlLv",
	"H2PJDTrgWWu+ati5K0rWLuCHNN7cPQYgzEqpV8ucvW+g4sF9LSQE6HjExbvGxW8f//UepjTCZ8JRk/Pp",
	"Y/8gtnf/D/PkvUcakTAdUPjh71VqQezdJyXWV6nEU+jURSV6BVQ/iqOfUBk+DFdaPOq2cq19020djCql",
	"+PSkV/dyfzWI++09TPkq1eR5mov4c3m3g5KoZBRz4pcsbtSBYFWEfMH0PWPjEl0NPxwVp5Nc8H/mzKYC",
	"hxf+47DbI8KOCNvCaFMdhctVRatbMtrQ955xNiuKB+zqAR0qCuzB1P++3WlWsg4PEgQ+MpEYZYAvijKN",
	"YkeQFuZB5gUSYtf4l+PB/MsZ9r9neoieCx+FIN6bbuSjksRRNTOS5ZEsf2LaoH2aZTK1WduC1PwIGmB2",
	"ESY2XRxuk7FFD7PWDkdu8p1RdKzM5S94pOgjkztS05Ga7oCaWg/Bbv8R9CbvcxZ5aocaPUNGz5DRM+SL",
	"8QwJ3BGbQIMsErqEEsxYgRETrJnVrNdUbqrRI2pG/m52AqBKCbAmLsMQggUgWcnVBphvB/PiLGwIAQAc",
	"UhA9wNtUufcPShjVQwmgwukDO7AZ6gFkxpF5K+p7bUO3rEgocqd6faSvo8/M1+4zg/g0xEGm9m63ecMU",
	"OeDvQhiwg9+zn4s/66g5GZ1aPgZ6NrnsAe4qT527Si/uYssCd7dSNtQGH71PRmn6czJmey9gewhYPwa9",
	"YHpn6LMzd5H74CFH3Blxp9/roxd/oOHOMGh03tghFo+M7ajE/pJ46Ra3DLTFDaFV1gFjZ9Tqs3Ct2Eb2",
	"vj/qNMr5IzkcyeHdqBb2YwZVIlSRpyVENovEN6V6HlUAXt+muqH8uEOlQznoZ0FLfSiMXN9I5r4mgbGd",
	"6EgmYgY40JGTB2192NDLKNdQyZzZNrtUzYQmdwbVsobprijQtLXIzpVIb0SxkF9cPriw0REan1XbTj5V",
	"xdETRI/6bYbET2bykVSMHNHHIU5l2uJO0uRnbByuOT532ctH/fGoPx71x57+eGuc8rTJO8OqUac8Shcj",
	"OflcyEmHhndralLR9+6Mnoxa35F+jPRjFDnqIgcTMk2SNRN6QHLisnHFqTkkZDwrmhb5iQeTMDowSBjD",
	"LiAFuiBcqbyamAUKZWUyveYxi6d+Bm/rsL1i0RXhfUFs1q9bhScB/23wleeKRFSxwqWcO92N9cevQwSq",
	"Y9AksWX9TN+pLbhRQNmfCN3yYeVzhiW/WuM9lPxo6pbGwY90deTL7pPKlegTDBtrfO6JICvv88DMw40O",
	"Y1zZGFc2xpWNGYe3fD7HTMNj1FTrg9YXQCU63q22YKpGjzuKq2rOc88hVi0LGL2wxmirT5lP3SIGazv0",
	"x14h9N9K69g+5RilNYqQn7sI2RWwtR26VbRjd4Jrn4lJftA7POLc14xz3YFe2+EddLpjzBvN9neD/SMD",
	"PlrgvlCevydAbDsaZ50H7pjKfRbOBLdUM3wUAjdqN0biOhLXj6RQuUXW3QBRDhQGxl53QIs/u7y6jS0U",
	"uYY/Nk12C+lX+oxUcpR6Px2atX1syIcrqW7njDqqqkak/epVVR+Ei2HF1V1g46i+GtVXIxkaJaydqa8+",
	"iO61KbPugvKNKq2RDRrZoJ3KLtdmnlYJ5Yxpydk1U4QWjrTYZXYpwo7VOGCfM/VX4697nkpNUhkzCTEw",
	"tiIB+M+aDfE1U5qus6qv9AMzxgPyULAbQwIXXCrdujgYvLKoGIeC6uQqmkwnTORrcxko/AU/vp3e1tcY",
	"zx/PzRyRcxbu80PfTXGIL9oL/06FY3Nso5/yV++nbK5B9Q1YJIz1Bdg8N236gmqe40BjIM0YSDMG0ny5",
	"BZpObOxsWyUmt2mgK20robHNwKbOcZCPV/gIyNb4Mn7tLyNc1yFlj6pvYVugDrS6o+AcHPueA3K8SUc3",
	"lTEI5yNgZoNn3f8D/vt+X7N1llBtWCPFU9HOzMJD7FqTonmIm72wrX4pG/WqMqFcoHsOG9O0KC4XHqW4",
	"ZQbQkaceeeqRpx6D0w2drdGtkbEdGdttn88BQayxKyRYf+VaAldrt/KDH9O7e0vrJsmBM4/RsaPdL/4U",
	"pdkgHywZjZEJLF7AXkR+wfSIxfeJxXVoj+j81aNz4A0fXvO3T3GFDZ3iaiu/nerQYyqJEbu+oMcS6/32",
	"Yc8LpneEOjt0t/86jDcj7o6421tvuA9/od2OMHh00d8dAo8KqtEt/wsyYvWVGu4jU9bffkeE6rPwqN/C",
	"3H1vdGm0rI90cKSDd6DJ6AuaBs1lGa1U1WE6qhiWzG4XknSn8tkoGo2i0ccWjerFr4YLSrtCqFFcGsWl",
	"kZJ8HpQkD77JIJNs+Sz7ksyuKMkoz4zcwIjDQxlvdIUcFP0bc6W5iHThsoh9i6DWEtlLdNxkrC1M+Gec",
	"eQC+m1GsF2GB5dIurFiETNetZe65iDuR3gXH2gqTQwJjj8iCJ9bDtr6WVCQb9LEtouWIXlHfj3bJr5nA",
	"9oVr6J34ne5glehy2bfKnfuMltcN13sv0ca3E8bYO7rOEuyBq32GvwBSW/vY4cT+WHqsGsxJHBqAayrG",
	"619zmYo1E/r7TKZxHml0tJFsyVPxfa72GFV678BsgDP5/ZxGV0zEiNjDaAgg3+gX+rX7hcLlqz4IkmWp",
	"4jqVnPUEBJ+5lpu+qOAzf8wxNniMYxjjGMY4hgGEraQw41P1tT9Vxbu0GRKgG3ib2qJ0y6Z3FKrrTXDP",
	"8br1mUfT4hi0+7FQtoXF3MZ5eRBSY+sKUm+lUAxMMvoyj2q+z0nNV3sqOxyaB2HUC6Z3jk6fif28+wEd",
	"8emrxKceJ+NBOGXtxzvGqtGIvmPMHrni0eHuS2PE+7yPB9Eva7jfOQX7LIz32wr090u1RgXCSCpHUrl7",
	"nYW1cG1E1GsXw6bnGxH1W8bKtqNpbDSNjaax0TQ28GUuCcdoHBuNY+XrNMw8Fnii2g1kZeM7M5F5U9y7",
	"kaw+98jljmayj4e8bUzndpayQfjtbGUV/N5SjA9MNNrLRinz89Lv117PTovZIMwCm9kdoNVnYzfrflNH",
	"zPpKMavXdjYIu6zh6A7wa7Sg7RzHR5Z5VAx/eVx6vxVtECUr7Gh3QMs+E1vatpL/fVOwUdcwEs6RcO5e",
	"vWEzWreZ0oy4pezQXsLuhphV5iG/MzoxIPn2V6p3dof4FvqiXQffrFwmk8PJ/sS8G7Z1/YRfu6PEEHJD",
	"E5jQdgszL9Vs5cOkaZDyBkoFOWZS84Vpzc75UnCxrNeRV97gUdlaYWtZkMPueTBYPDgoJtLtHaG90r0/",
	"WLN8d+e4BpQ21JuLpSvV7Q0H1V/7lhYo9lpJzL/NEmz8No1kqhSJ+WLBJBPh0TEgtW91bZGndhDPht8/",
	"UputvhjLo14Ddh0xDpsOkC47osOZ92/f//8AAAD//3pp36snHAIA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
