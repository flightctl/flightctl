// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
