// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x9i3LcNpbor2A5e8txttWynUwqo6rUlka2E934oZLkTM1G3g2aRHdjRQIMAEru5Krq",
	"/sb9vfslWzh4ECTBbrasl23WVE2sJp4HB+d9Dv5MUl6UnBGmZLL3ZyLTJSkw/HO/LHOaYkU5e8EufsEC",
	"fi0FL4lQlMBfpP6As4zqtjg/ajRRq5Ike4lUgrJFcjVJMiJTQUvdNtlLXrALKjgrCFPoAguKZzlB52S1",
	"c4HziqASUyEniLL/JqkiGcoqPQwSFVO0IMnEDc9nukFyddX5ZRJu5KQkKSw2z9/Ok71f/0z+VZB5spf8",
	"ZbeGw64Fwm4EAleTNggYLoj+b3Nbp0uC9BfE50gtCcL1UPWiHUwii/4z4YwMWOJhgRckWOeR4Bc0IyK5",
	"en/1fgMsFFaVPIUW+iSrItn7NTkSpMSwrElyorBQ5p/HFWPmXy+E4CKZJO/YOeOXejcHvChzokiWvG9v",
	"bZJ82NEj71xgocEh9RSdNYRzdj4Gi+h8q1fV+eSW2flQr7vzKdhIE1TypCoKLFZxkP1EcK6Wq2SSPCcL",
	"gTOSRcC0NWiac9Zz9DYJJu9tE4FKs4FfrgZApZYHnM3poovf+htK4eM0mbSuBK7U0gEp0g3gMOkSBt3t",
	"3fGrnl76S+zmCPJ7RQXJNPj8xPVgsUvwd6zSZXca+BlRiTBDJCdAkihDM/hZkt8rwlLS3W1OC6r0P4bd",
	"2CMiUsIUXhC45gVltNB49NQvlDJFFuYKTxJJcpIqLvQE64Z9hWckP3GNdccqTYmUp0tB5JLn2aYBwnVd",
	"9QHtxEKhB3juM8rInDIigfTlVCpNBgGO+jeOZgSRDyStNEWnbA1sZTAfVaSQm3ZhjvZqouF6aDrUgMVC",
	"4FV8dwdH746J5JVIyWvOqOJiO1YR6wznd6A3M9d3jZzQhaZWx3pPUnVB2NsUCVIKIvWECCNhf5xzgTCS",
	"dMFIhtK6L5oLXgDkD/a7V7OkvxAhYcLONTs6tN8a53dhfiMZMps1LI3KelVAR/TPmCED0ik6IUJ3RHLJ",
	"qzzTpOKCCL2TlC8Y/cOPBvgAaIKV3pVGfsFwjoD/TxBmGSrwCgmix0UVC0aAJnKKXnNBEGVzvoeWSpVy",
	"b3d3QdX0/Hs5pVyfVlExqla7KWdK0FmluJC7Gbkg+a6kix0s0iVVJFWVILu4pDuwWAbEcVpkfxH2bGWM",
	"aJ1TlnVB+TNlGVASZFqapdYQ0z/pTR+/ODlFbnwDVQPA4MhrWGo4UDYnwrT050xYVnLKFPyR5lQTLlnN",
	"CqqkwxYN5ik6wIxxpa9fVWZYkWyKDhk6wAXJD7Aktw5JDT25o0EWhWVBFM6wwpsu+VsA0WuiMBA6e1HX",
	"9ei9WuaiThIJ3O/6w5juHX5U3zaLKcEm7cpjDKp3nld0K8Khmxs0dES4nxyNlOKWKYXnX01Yvtp0Mpor",
	"DuJ9/Wd71WaBI926D7qlj9pQre3ohDn9rQiFk16ax/sPgcuSCIQFr1iGMKokETupIBqm6ODkeIIKnpGc",
	"ZIgzdF7NiGBEEYkoB1jikk4DSUNOL55O1y+hTVXIh5IKo3KRlGt4dhZpuxtl3xOMC5zTjKoViD2AL/W8",
	"ySSZc1FgZYTnb54lXVl6kpAPSuB1lgp/yToH3L48LROGHhhhZTCLSKfza+AitcQKOQiDUKahXPKyyuGn",
	"2Qp+3T86RBKui4Y8tNcb1zSNFkWl8CyPWDsMFkWFydMlQTMsyXff7hCW8oxk6OjF6/rfPx+c/OXpE72a",
	"KXrtJPMlQZonTb2ISUkOEjoOkWGdnGooQnggs5WKansguIo3UevJIcsMgsGShEcI08eQeqBSv1c4p3NK",
	"MjC2xKapaITMvTt8fvuHFKxB4gWJYPo7+B1ArjcBZJcAMzgnK2R6BbunDFZBpayaEn+DQ2xEXr3juNHq",
	"TWCwun24tGig8HJIgBnb0Twvw/VhEy5LwS9wvpsRRnG+O8c0rwRBRvpzW4dN6sVrboEpkxGwaz2LajFm",
	"hcgHKpXsULqQPkVvpx2wq8BNaqghrrVpD/Ah90pTVSBvEUgc+G/GIKlPlYd3bIp+ZvySoTRoKAjaB7iR",
	"bIKeE0b1fzV4XmKaw5o87g3Tlf0qkqv3mpbOcZVrCnZ1FdHUQxQJthZFDD9u/8brM82IwjSXwE84Iwjr",
	"a6gcDqSVECCOKH3STo7ViO40/YghCEt1KjCTMNMp7bML63ZI0YKYmfzSlO9LMiMk6XVZ3FQcYcbVkohp",
	"iAVaGtppmsJDuURqGtJdxU9VgRkSBGeAZLYdouaiaCHPQQfPeKXsiv3yprHJ+AxIQPYjYcSw7fjup06w",
	"mS58S0NomtC4xBKooWZiGapKM23I57/7NsrnBcEyNvlXM0HJ/DEy32s5ws34SA7a50BN0Y3qNEM30sBu",
	"YMVs4781nNoVTGII57dfn/7aq1LTTGfNPhWVHuYlziXZ2n7dGteO1frVDd36OTQ9N+EQrM5RImPDdv80",
	"VAlWbUnSPhg/qWE8jT/c/T3CQkLTkxVL4R9vL4jIcVlStnCGVA3lX7TkqSGhVQ/rGClJ6n5+XeWKljl5",
	"e8mIkAPh9IIJnucFYcryrmAzvfxtSBsPid4WHkTHpOSSKi5WUfhosPR+6AAx/OgB+jInRPVAFb45GD4n",
	"FzQlAYDNDyGYzS9tYBtUmdOF83s5vWeYLf5HqiLdrybre/3sReETkgqitup8yHLKyDVm/UmpMtYNYCA4",
	"e/FBK95xe80ZtEDEN0GGjgIR1BNkVQ6qPS2InCJNpm0DKtFvXyP7v9/20A56TZlWcvbQb1//hgqrOTzZ",
	"+evfpmgH/cQr0fn07Bv96TleaT76mjO1bLZ4uvPNU90i+unps6DzPwg5b4/+3fQsOWMnVVlyoWVSzZGx",
	"RjK92N/0mp16o4U1Y8/4ikwX0wkMRBla6kX7EckFESv47bGe+bed3/bQMWaLuteTne9/A8g9fYb2X2vO",
	"/D3af21aT37bQ2DRcY2fTp4+s62lArHp6TO1RAVA0fTZ/W0PnShS1svadX3MYto9Tihb5KS1l+9roGi2",
	"9n3Q5SxB5AMuypzsobPka/Rk5/vJ0+92nn1jjlXDL8bpDiqpeHHzbpFJGz1PjAJk/JGw78K01ziZwiq8",
	"aimnXTVYXwFDH7qob35velDK5UrSFOcog4/T0fY5eklGL4ncrbnucEHX9rmG/yMml5rROoEZ3cCjuAGj",
	"pdf0BOBExXrdadUTx1MVMyL0QFZ51Fh2uaTpEpRj6OmMM5unkQoLFdHN3/hZXBvkVCqvq8RHD3SfYWcW",
	"DwJqH561qBnABCv3sww6wGZ4Sfcg9TXaeJC6kRZHDNHVmqkjDaCxyZVUpAihczNK3PoIoDa8NkLFSG99",
	"gBCEZUSQrJfxOK5jETpzjM10C4JxNtnZmvOsXa/kOekudXF8dPDCUtOoyVEaKfPweeRrazmNscKe/et6",
	"TjSJpV7WbS4uC76eYrEgEeP4ibe4GkhKvRoU9tT4VRC15FkT3snEq6LvGAEtDtROrdasjokkqqsBtrcc",
	"WWH/Zn/i/Fw6oaslpcwVEcdkxjloTd1LpLvWgTbQHAnXHhEGd8vKVzi15j7NkjVBsZaZS6qWCOxO9prJ",
	"M6aVBiL06oyyIInvztO0EnaqAEuXWNqZwXiY5/xSL0HTtZJLtWO+IYXluZyCNDrI42lAZECgd+tYV9vk",
	"Devx6uUwQFW2+e3Dydxc5+tKl1rZkGiJLwiaEcLaplortG4LJdg+WQelGZlzQYYjlGkfYBScKxzqbQDL",
	"ThdgFa2R6haQxsw3GGvs8jza3Akw4qijpZK7QZqrXrp1CDukqpfxS8NQh62jNZplxl0WbH9/P3RZJ/Ui",
	"PlIsMYZyL5JQN8/NSCLrFn89YWTNWGE0OJayaVitw6ffMemMLgOtntGZ/RTRr37e6Nd6MT2fgxX6ncdj",
	"qOpvzYAp87scbQT3HR8VHMQWBGwMfXpooU+T7Sh/L62/dsyUGfftSVyopkXUY8qlEoQg+GrtCgK9O361",
	"Wd8yA65dSJ9qHF9KSw98e2JWFeUu8OU5XfSGCGXwrT2WMSojucTP/vrdHn4ynU4fD9xoc87+bbfkr65y",
	"k/bEMOhVO1lI4XPCnCyk6ZsRqK09wMiGRhxyppQpeoHTpR1AX/cwD0GDgIvMqC4r6GfIdzaY6ugN7acm",
	"uGFD3FhEb3ZWrQ1ZLml/DIQDrvXG9WBWWlZDpeRwICNpTJKMyvOP6V+Qgg+9/7ER2mEhZZX4Qe3qhsKm",
	"P5frH1jY3LIDQRVNcX7trK7YxGHSWPdrPXnsa7Cg2Ge3yNi30MkemHu71y8wffXz5LDV4CvSTseM3JO0",
	"J+vMzWu+o9I6QofPHfW7dqZfas1uGHrW5pmrScIHdrK8x5iDrUDUlSH1aqw52Mga1inWVPqG773li4tt",
	"3BDOrIsO4Fk8wkpLlM1Y2QJ/eEXYQi2TvWd//W6SlKZRspf8569454/9nf94svO3vbOznf+anp2dnX39",
	"/ut/jTGqzWqlEX+OeE7T1TbKq+lhAN6vrvbFDoZfQydiXPWr4wix07iR7asFQSUwzY0hP1UVzuvoMrzG",
	"FTnkIlqDSGgBN2vZUlzuel5i1rSuWXzr0VtugeFxi/4MDLcGto6tZUTDMRq8F4J3KJ1wIYrrqNPmLTds",
	"/logcxrqtTR+PUKOpTohBASIYWGAW5AlP0uDMG3LpbcW8jvIYAjRoTXCDBigbu9JRbYNlch6PJgBVjZW",
	"1bwFSfxShGAMj96jEJxNvd4aasEx90syd+BZs3TFxaDenCnrBtxpa3Py30KYVTwlv7ZwT5IjfkkEyd7O",
	"59eU6hqrCGbtfAsWEvnalNkan8LlRj43dhD5HpH4Gpcryu98C2sRMVkJNJO7VUUzsDRVjP5ekXyFaEaY",
	"ovNVaGfusrHAzBDX6faDFprKm2iuWXvYDtZp4BhHYyshnXOFDp9vM5QJHaNsYfYfX+db1widODVz4ARt",
	"NS4Eid9HdxX9N6Blnb+mDs1BjUaXS8J8BpDJqZnTnNh4Op8K8Ekr0pOEs5c0H15OQDd+6wAQW0iJ1TIO",
	"X/1FA9dJ7eAJsg4aylqeGw1p8PRQaTqmmCFrIOSIUPAOYXc0qT0ZAZUqmKIavlRAbO1qAOJttB90JOcN",
	"HvQSWprIPczwwmQQAOswvA1K+KR5lekvgGn2d2fVnhGU8UuWc00ijSnHOLC6pMS1OzFxqxtj6s1mfGsv",
	"H1y3/9UGsGU3xpBbPqUGRG+SGTfWfT1m3B0iYMbvylP+3ORpvq3U27n9dxDvfR3O25gymCLyNZw12rkV",
	"eN782mGgodbTUtqRleCaUSPSEcV5TohCgqhKMJKZmzAnKl2CxxhJE9gLsfFrVcEaxfqSWQckygSZV5PO",
	"PmaC4HN91dbuZLZCZ+G6zpJA7+ygimwLrA9g8XZN6xeuuMJ5nMzDpyBEMDbTwMQlS5YeEnSsZrIOOu0c",
	"JQDVJIKs7fNvbThKW6g8v+/484zKc5OL272R/dzfs+OoHNAccz23hjnex2PeqRQVzLqf5/wSRwszRRo1",
	"yzORC5KDkUR/JplenO1g6JPgea75EAUEKQVfCCIjDvGF4FX591W/kSrHM5Kjc7ICobMkQiMygm4uGAyw",
	"sZ4fuxVvl+Fc4A/vGL7ANIfM4+gB2bpbwc11QEe+p78YruqggUQ89LagbH/DlPhDa8qKdefyx7Bxzqgg",
	"UoW5l5YIJE/0betfkK+z4Ob28cZGulccpbY03vSMAXq7HrX4VqsNGHIsuBZOLgiyyz1jc25Hn60QNvmv",
	"FaNqiurcHf8j6Bp7Z2wHPZKPTJaSKRcBPxXmJ5PeYn5amp8glQd+yMwPGV5JCHoK7dJPd/72/uws+/pX",
	"WSyz91F7dJ2gV1fAa5e+dC12bKjWJmGrHvPEdriaJAtRpjsgNEPBuR3SH1fbIgyRBawZLkZeO1mIXbzt",
	"NFlTi8wm14PGAt3WmrXH6Jkxw+aLy7DpXKftkm263W+27lhPWrKRfTvKiElG7uCc++LKCRCp5QiwYASV",
	"JiAk3IU3Q/uAxc04zwlm1tkEX/dV/0z7IJzowYGBYGWzc8LpLrFszDTMdeJ6xMSa+pubvZVvpL+KqHIO",
	"ktDHVE02AzSMs/YnxcFysmoF/m6U2/15DsKLeAxltFkznLLTZGQN9x1YGT2SQdbRrvwwRlt+poXm4oxr",
	"MwXQzcw5Bw2NS77T9pFECtKhjOO+SxlSKbpTplKYCWLlzcKyuNKUwfCljmIAzlrBIMMzX2+AqO+3Sbkr",
	"imPFe3RJtUxdU3cqnU0YFHWNzbVSAECpK4asp/4assOOvSdOpqfhdiEzg5hDLZBsRZq8JHM1WV+aK0SZ",
	"Dl51i3VNt67B1a0sRT6CBq+JVNmuelZXO+3KfJVaamKVehPDVurufqWgNHeguFZ0ncI7Sa6rWXsFO1Ig",
	"PthBPUHvqgaBCnbWjbIFRrMTIMuOI95djDFtz8mqr037NHsG7w41aAe9Zx5OoKHHBVWr/n2YMoADlt8/",
	"rB8kunCIk+jGJ/ZVOoP2rsDZRlurL5l1NUmart+47X9Vwg32LnJDsrWq4VP3ubWp0xxIhXOJHUBRRQhG",
	"KfiF94YRH54y0BXWWKUftPGrn6Hxq5+u1dbMbfcfDyvQsg1hPQkFZY4pQ4p8UOird6cvd75/jLhoVyK1",
	"Izjq54ATo6O63QvdrScH89IVcVPGJCW0tAezTNHrSoIsZ/3nZwks7izRKzpLzJrOkil6bgylIOf7RuFp",
	"wU/JxHaJZHhPjPU7DhK9vUfSGLongZ3UufU1k3EpJawqiKApOnzeXpbgXJlVdcVCnpH+qf////1/EpVE",
	"2IxzqPA7Rf/kFYjLZjkmcqXQwu0cFzSnWCCeKpyb7FSMcoLBd/8HEdyVHHry3bffwulieca0gJfSwvbQ",
	"3D3e6dtnTx5rgV1VNNuVRC30fxRNz1doZu2+yGftTdHhHGmB3ANtcsYg4KC5HbA/QgwFygKg6QVOw9pG",
	"gbm+33WDZ5LnlaojOByKurvsInvfcEXMjfdlQMGPoZuCqDYjiF8QcSmoUiTupq8kEWuxhl9Cxdsbx5qY",
	"l8lfuCjpBa90d60vrUs7sApbMTYbUydH4+9o/K2DyfRN2c7ga7rcrJEXxowb8PynptEOfh7v8b1b6upz",
	"GBa8CAR7NMl9piY5ON5jEx7Qm+hpjA3+wbMhIQQ1mYrThzUmPYgc2mjGsyENw1K5jhuNP+ZBNEWKMrcm",
	"n7b2eBcV9dohlXH63A6ncovuxYA+i1zwcTsrnAlZG5q3Bq0niICAivN8hWgdBFe3MOWM9EWGGnqpe1Cg",
	"DlXwVk54buJyaXXCjuq5nWHNx999fNpX1on93KZ6wcSh/SCq3bzWW1ryoAI7TY9JyX20XNQiPce5JG0Q",
	"DylT7oZ2Cd2V6ImO/KrkUD9as9yCK/IYsiVM1elBLzrqkW2b6FajBZy7BeuoOta76Vx8XjF15DVBFy61",
	"24mWOrKqoE08pqwuB9fhCE6zjNR+dFvf/F5sAKaa1XJUSaI1P7iyK5Yi8yVevtcQ4WNyQWU8TaJTGNAv",
	"r9N50heGOBn4/m0rY3vjudvik/bgYvMGCSKNet/t94ZIah8gGZxw8sL3iRLuYMj33eeAgxTqYbOZLJ8s",
	"ziPsYPG3fGMrXvtEc0tCZ4iXhih4Sf/nF//84Zf9V+9emIeXNcppZR5LRCLvNEsfKFjDZLtITVH1mFa1",
	"2Kal9eZjoWEWCWYrhMWiKoCtVVL/JhVmGRYZkkuS5/qKKPzBptWYt4ysaUmiwlaSdzNJVNIS6qUtIFZl",
	"ojdN5yaB6ZKI4MXSimWQjTPDcol2UmN8/BB3KF5ycf6cik1BwpQFISs1ML0ZSVTMiM50jihoZzmZK0SK",
	"Uq30D9DON3Lv90i05MVWqUH6PIai2naR2AHCD6p2H8NtCHpuDdTBd0ULYtnsGPE6OOL1au2hhzTqY068",
	"eVJ621vTyXe6U0dK0D/GY+TjA+xd7xV3S4/hwBAP72yNC0G+pLu9NtRdq65AimoUMtcdp6oxDQw/pzmZ",
	"IFmlSyC/pn7/1ArJYBj3IWdUgmRdv8vlv7gV4EpxlFGZ8gsoFuzJBBirNW9flxDbm0Pq8xEdYILNByH+",
	"vJ1YCrcgZBTO0fKC2bfCnlNp/wXvv8N/eWkeGrE/HJOcY0inxqTgzP45zG1mccFPZ/8OZrUY7yZ3f8Ia",
	"7F/1UvwPdkVuuMbCIuzvE+MOVigLsCLKK/xDJVtqHimepkLFnhaX5LtvnVsPCc6Vedo6InpLeclF1peR",
	"a76aaPVKLY1z66fT0yOTTalpchga6oeL5Vee09LYuH4hwicPRRJlz2lplR/3Rt5F2CEW86pyOQgSp69O",
	"IBQFWVvRoIXrwc/JavjguvHQsfk56fOV6083Avn+9wtPLWYD6dsw1RD+F39xp8M7lkqVUfVSE9ej9Qni",
	"gQccXS6JrW8siCw5k0DZpeKizqoHJ6epO9BI3pvGdcA7VjllNZ/TD92pjrDwzv53x6/su5K8IDIoFT7D",
	"Er5O0aGC/Hcj6xP0e0Ugj07ggihwAximuHfGdjUQdxXfdebkf4fGP0Dj2BrX6bz+uO5czXUY1EdOr2nK",
	"WTYo8bDHpYa+VDfYBAQ3Dw6doxTnOeICpTlnBLhRDIvgqV+TOdqDT3o4g2saPTPEWW6qD7iuWj+Et8vq",
	"9y3dQU/RO2B+BV0sFWC3w0qjIYIsDzzGLnpGzCSzlTte68FB+ii01gkr8fUbgNsuSV4aygNeL78jhyj6",
	"aLwPZLqNGWwSHmsMYQ4LvAhLbTniNbjA6DGZE0GYuf4uugaePbHVQSPPkaASp+dDQqz6y6H2vowWKaQA",
	"ZXa2KeLRV+rvVq+1XWdss2vfkLumdrJxlZNEwmSbbaHDC6qASF3idEDdUguVusckmHSjJ8T2rncQA2vT",
	"6RMpz1Dg0r6vPDHuTWvngigeQdD+m+dQ20aLzrusynObtey8TvadOK1vLSlbdD0U8Ll+i28jcr5ut4f8",
	"ZZUuX20fTt4FYBdAzg0ZdTLrL9arNyMSOb+YAY9cMbUkiqb1W2yoqKRx7YSWuZxKZZ45uMCC8kp69xIs",
	"Q07RflDUEq+MbwhouGYLfI7+rD1tE+QWdhV1BynKqlgUt/0C488IWDFp8LI1WDVRTgujyKvGM09AVXyV",
	"DvvcePAkeRCWTwQkskHkHIDKJ3SbZxQNklGJeIl/r4iPQHBMRXHzDrR73Nfnq1nSG7jJsXGRgXqvVTxq",
	"WgmiBCUXho0x8kG58Ks6tdzD/cBAxRQbSTmTVEIcJoyll2U97dZrQxzI7E6bNYv0vk1BowxByQQQXjFD",
	"GM3JpbNVmcMtoci/AYk7ehceYthusyaKMefCPv1JGlA6nddUHUtNurGqIe3EZGGeowcxeoIqlmthYMUr",
	"sx5BUkI9KK1uopVjzBAJQ4Z7HvEqMGWULQ4VKQ40CesiYLeNzxL0eCarmdTHrb8BytnVw3HUD4zpQ7Gy",
	"sNUD3PG7DXpzkP3VoJBj25mlYRAjCUZwR8wmulMb+/3K3aIkqkwJHMBeA149jDsKMDZUDK4UyxAvqFJ1",
	"AQNJBMU5/cO8WtZYKJyusbKir2xc44ykWAtlxo4BDuNlxc71SLz+CiCw8ITaSNDocb0fQSzoDF6292Q2",
	"4r0C19qJi3DhuSl0hhm6eDp9+leUcROzSlQwh8F9yhRh+hj1JrzeFcOUr4lUtABR9mtzB+kf1uWe8lyf",
	"HyziACJnvElRzysIENK+sY1ECzRCePcKTocVqYmxlBYH60oW1trQY100fNoZAA+1zvaGK/jvC/ey/nNO",
	"5Buu4O9o9LUJ3mpIhJtLDIfShTFy+BW97+5LDpY32wAxxUEOTdenXRn0NVQuv/k6N3oTQchKh0TV3zTC",
	"NZm9VtRKTaClvgBRhm8IlCVMULfEMRprXoS2KeQkRGIHGeOqti1fM2Wubmzeil+F+XLRUk6wHvtaulS4",
	"KIfX0c1ITq7ZdbHmUfx9ZJhA6olwI+QuqPoXPJjvjT/m6ToTaYWOvAfAQQJMRVN0THC2oyWsgaWoPjqX",
	"8bWRs20kIdT8MQKhvqfW/oNZKAZxscBM0zjdTktaCy70n1/JlJfmV8O3Hnt5JhlspwnVJNs25u64ZCSq",
	"NQTRjlghfsmkC1o1v2vpF51B9N6unuosse9n970BGgpAPZ55EBct/GBaW2fV1Vw0MtkjGQS51g+D1LGz",
	"w0ydR5pkBUVgPJ3bwtrEe9Jfguwo7xIKk2twlkGl5DI3OqEw+Urv14TWtM/nf5+8fYOOOECi35sFyBdf",
	"oxEeFUc4A2HWrmba4RPg/+mNhWlT9iMiUsJU1MpSf3OCjD1s+/J6gwiUdWPTqnGP//Orp0+e/B9w8v77",
	"r092/vb+8f+KFjU6tk9/tl9gGMxmgo4vbFhJ163b/4hJG15Dn+nvtWhdxQNj3D63eeBi4BMKcQCuLRIf",
	"y2pz76oOKiAPje/4WYrOW7S9VOzTfbri/h6h2PY93oaxPWKvrb/6Qjg2NbVp+w6o7oIqa0qOUtrjNY6j",
	"49BRFKR9/UhV6EQy5YnB/E/qB37HDJIxE+yLzwSrb9B26WBBv5vNCasHjieGNb83s8P8Nzrmet5/jpho",
	"ncZA/uqp/Zgu9pmmi7Vozt5Q4budTbIxcjeMV9jU+EQu67YbVt2T59RusV2yUxgXMDDjKejy8flJzcHu",
	"tuKPk6r3cyLUcRVLHmi9s9HWu5dVgdmOf7uglQ8I4NNjx0ttVX0GMVfDuFHUkV8QEURB4gsitDYMRbTB",
	"v+YKrrjXQPXEWlFGLwEF9jrx2SgMz24FXU/aIdeTZsD1tBlffXaW/duvsljGawmXa6wAp6aYhVPu+dzu",
	"yDgZBV0siJBRSBpboXHqX5AhT4o1zvvEdoo/9+BGDI6psY+muW8jcjUmC6z90Tc24WGiYWG8vZPUA/c2",
	"CWbsbWOWEuzGKaD6HKkGQEGZc2EUuCxtkZqDo3e9t/foXcxYb2rd96qSPXXwne+g1xPR61m48pRr9Qbs",
	"NYlV0V081zDm0LObTWR/3bo2KNU9kLiKnFKP4cdRu3WGC2iERAWv8rx1kQnm1xLCBwySgABkqMjWxoya",
	"7MZK2AenEa2zhYsyp2xxqKXXi9jjFJ6Kzoi6JIR5Gwx01fu6A8LYSDzpyTtpFOAKtj0Jjyqy43VU52TF",
	"0pioUH9t1zEPQt4gCMUGNJiiQpCSHJg2FDexsBB+YSVb0GD8U4GjEjSaOUYzR3DftjV0BD1v2tRRD+2M",
	"HeNtvV+The27YunWXBQo/Wi0+GyNFi0K0rms5cb8GuxfS2xk1LWzAg7hmWjXwtYZrHvUd1Rhyky0aoz3",
	"m6B/xs+YrGauO9U3EN7LhKW0xjKBHG4EKCgKEsgZs7Fr9no8jByfblmJSOqiDUsRtlUX3ttl5gyvRhFh",
	"HGvFwOvZjGp69XEWIHw92re2TI0zhBzwoqA9afAmZBIaoCWWy7purV4HyeIn70b+cU0wkx89iFWKDT4k",
	"0nAbU5apl2Md/sSGR0bV9JbaK5XAiixWw3VeKKZ1YkO2wGrZqgDiRtyYEOFbrtlS7WtuIXH42VnK3FNt",
	"9j3Wdg2ktm0P6t0YB/VpXTVhrfpd1U/hZl1gDyjk1T4iPVD8GbsNZoBOF8g/hKSv06UgcsnzjVVYgvic",
	"qLv/hAv1VmQuKMzVB9qXaadCUPNBXMmFMi8gh5FOpt9zItOoz/1ELq+VN10KeoEV+ZmsjrCU5VJgSfoz",
	"oM13o9PL5ZHv+xASn5sL2pShbPeNTk5+Gp6kHD3mwAuxHehleGQbHB23lF+pd9+KvHDZlmuyLNflF9ab",
	"itGlPq5qOSk15hRVCWaFa3j4GufuQYuMs0fuCVxkcl6CeM6BZd2HuB5qlm3kdxeG2BOTiWXcx1HgdEkZ",
	"6Z3qcrlqTWBfytRrOEteYppXgtQvqJoMCCrr1CBTp8EkLUDOQ1MGqROK9tExLBOlORaG2LgIG7tZfTHQ",
	"rNJQJiZ7gl8QIWhGEFUb3omOHqeLmfXAQ28hRWsPnSUnhtq6eup+p7eurmjdfgezbEe6l2QHXPJTW0mx",
	"V7VvNWgaCMPYWuSKMo7RDqOhbzT0Ybnbujrb2franW/W3NcaPR7eFGnUjHFqNRjjnO7daBg7kUHKc5sP",
	"jLbDz9R2GCNK3RI98UctTv0z+JdLLonn+O5+ziEqg28u3GHGH7K8+tn/QakYYWXpyQZ6dh0jl9+xpVI3",
	"EOtUP0X68VYui+vmVdghOXjb2JPe6+OhBfkPzkhT83/FTcRIC9y0IOgPrWz5HC0hrRcddn64/2bf5fXs",
	"H7/Y33319mD/9PDtm4kt+qR/bAqcJu0dHkkSiKcEM0OyXU9fTQ9KT2KhaFrlWCBJFQEbNGW+qgWeImRe",
	"39mHd2Lw7hty+V//5OJ8gl5U+lB3j7CgLtShYriY0UXFK4m+2UmXWOAUijS5bbZe6UFfnSU/vj49Sybo",
	"LHl3enCWPO4xVRtb00m6JFkVeyX/ecAdpW3lCnlxja6pJXIyrDehaGEKwmZ1QVtbBTTCpzfauA4EZ83s",
	"XSjz96PAKQmf1x9qJ1MBJq1lTK5dhwLGCIhupG+xHjWnKWHG5mOSr5L9EqdLgp5NnyTWdJA42n95eTnF",
	"8HnKxWLX9pW7rw4PXrw5ebHzbPpkulRFbpau9DElb0vCkKE46HVdsX3/6DCZJBdO7EkqZsSbzGZ3M1zS",
	"ZC/5Zvpk+tQa7eEMNBvZvXi6iyu13K0TpRYxSvwjUaaMWyN1KKxCeJjpDVfKGS0gNQnKIsBkz548aT1a",
	"FqR+7f631frNIWw6omAWOIBWPvXPet/fPv0+IgFW4BRSfhcaRjBEAxa2ThTphcYvtoEBiSm3FwOFawdQ",
	"d3XTgKdQPcySYFMgyKFL51lED442GX0fB2+LIEJBDdgNgOTJ0742lNWtBgNukvz1Bg/VPCkYOc9DKzEb",
	"Uc03Cw4teMXQvi7rRDOzk5zEXhg1vzcKOWgWeVAPdmIGcwm57RN+DgP0tpe3eQW8etaH/uasb/dk3jH7",
	"ZuQfcI8micIL2XpWsnkgEMUZvVKg4q2FZRP4WlBd27x14fqLrvuGWlMzRQ6dwxcecPO6gDGfhwWFrEQF",
	"I+gBoNSCqUyl2o0euQo6j2y1E2ubLAW5gOpMzVIyULcs2UtgQTWJ8KWW1hGHSay2gak1Y2PllKCpqivA",
	"QPSHLfzjikeY0gVU2GeQmy/akQsiVr70VmyheaME2N2tFmArJ3WF+Uc/PJqgRz/o/9eiyaN/+eHRFB5B",
	"ROdk9fQHOKOnk3OyevYv5o9nj/v2BGNfb09h1fOwxo9BMb+dsPJQXVXotK79BCVyTEmbfpRqdEd03sRn",
	"eCHRDNoq6gQpF0vCOlXV6ysCIZhBwSSAUC8O0ALSW2s4hf7mb55F/c1/rvXomX0qblx7M5jaFuVO9rxC",
	"OvWV/7qL0h3/vtru9NZ6Ff3sxq/YN6dxYE6G0nffo5fX3wht7yWhYKFbw17ugPH/HWfI8d4HztJKLqPF",
	"x0wFsADIyEK5w8/Mo8HrhA872t95trr94zewqdUfJSpydR942I+Dz24QH7aa3hxVZtbw7H7WsJ+mpPSL",
	"+P7mLkb7Bfzo5LkgOFtByrGwixgpQkgRBiknu39q9nA1SEeJkBB0Tb1kk2wcBiqunxZYnX2y2HI6y3ib",
	"hOMaiux9EZV7QCk96be3P+kbrl7yin20oqavfusdkXSwynxMcHZtxKyN14GBN4KpnVE/Hk8nScXo7xWx",
	"1QOBG46o+4BRt3RPrTZHAgs9PI9pDNgtRB5u+4FKbTdCYvv3cYMEdqjkuANw+7ftzq1Rte7KCo6jnBjK",
	"iV+IdHTn9EBP+Lfbn/CAs3lOXTH3YQSoivJOqGd4bapzbPrftGh3CwxzS7ozaqwjJRop0W1Qom000V1c",
	"loL7MgZ9KilbXZuAPSds9QlQr1Hc/1IvVa8t11yN67PufdP/02HdDwnTR5b1Cd8uE6pQ37EHEzZibEnX",
	"iRF5bnvGLa/11y80/MMAdkOsRx8MX1Gp6m9jFMcYxfFwojj20ZzmFseiO7Ikxb370UAd09W+ElJJvfBt",
	"j8P0fAkDNVY+vJj6GJhyU4EpH4Xg8MbJtsdvHkbZEmNtXjea53gB79zZ53yhdIoGWVFgsWomB8gp+ocG",
	"N5wnRyAvNl9EhuNuVGEB2moHC/IabDA7YAWs/5G5wA3K8ih8VrgZ1A7v0D2yA+uhHkGVBVH1EtegbQxW",
	"Ps99DDW621Ajw9THuCIreX9zJ6K+K4vZJ5/FlV3zWhjCVkjrCVbyH2/DzmsHH2TUfXors44m1HtRD2N4",
	"2lXatomd6UHiUFnbxvriezx0U0s/Mn+RAQObtNJIYEsP5hwTnA3DG2NGRiP6fFbo0xNcAnEQTnDzOJTF",
	"cQgab098shvHns8mNGQzvo5m5M/IjNxzNYeHXfQSd2j8EOSC+5Wq7+5mjhL8SAruTGXYDd79jMqB9sxM",
	"8QfdUv+X2TqZXWoBjd3zoJ+9OOjfQR3DEh44mmcEKgtLVwsryhl9dY8gtl5x1Ojb1Zvrj58zlwz3+dA4",
	"5sjA7k7f679i7s3gXlaysP6weZXnTvI0S4dyOoMUxR+JijykveHGvbktlXHSW2n8nPFLhtrPKMedFND2",
	"uNP0fhhbBLprJNVvu6f8hiO3kJEBPhwGWJe97Df3yUZ53S0Mfyeu5O1oNv6C7H7rjAtbo1JgZngI2PSl",
	"GBtG0eleRCfiCwuYEmKBA6+34JxpCaKS6U7ZwkWodC5UXbnAF6DbmE3sbpQN7s7QwcnxJ0ChO1sdkf2u",
	"kB11sb2N2X14/xE16eoD74s57tTt+ILDjzsg3xCJXMMOrS03F4XxGKA8BiiPZebGMnNj7OdWZaXGMNAh",
	"PGt9Wbm6j6kVvzZYs1vY63aUvp4CYncXwjmoglmjhNtYPe3LCSmN3bO10vo2gaZdQXKotL6N6Sc6y6ej",
	"so6J7dfWViIRqjVco8bqrRHNCD9sQUQpqGEsTZwbUe5zRbktQucGEDpr374hSvdJlCa6puhzLxh/nxLX",
	"aJT8XL2y15WuGoWH1qek2YZdP1uMWERLsHzRJGnfAfq+SVNzIaPv4k7JxLNnd7HLUvCUSIlnOXnBFFWr",
	"e679cgN06mNiSjYTqKjEvn1swCisf+HC+sdgYFxqf2BI+GXL7uMFCIk1PO16Haf6S9MxbqHzH79QH7p9",
	"MHet37wHgK+oVP7T6B4f3eOje3wsdnUnxa5caSsI7fPH62qyUYYITpfmQfGeSXFm47vlAa+YGutHPaAY",
	"AuApY9xAH5/eUMnppcX6WGyA+3YbgrUZ+45jAIJJRyv0fRuFHYp2ZPbdP+G/V7uKFGWOFbFPmF9HmHdD",
	"ID9GXK4/te1+qZutFVE1fwZO5ATIzkTTuGI7D+7U/ZtXHray0Tr/DWrH5qPWTOIBH/Rk1INGPWjUg8Yw",
	"4VHEb83TItqjsL+JTw6XqbaJY2yzvmGy1Edz2NtjsKFjYuCsD8o71ob06BrYUnCMRE5uRPJjgrNPB8Xf",
	"jCj+haB4hOYPJ+1xM1Dg89rGx/sytKQ+YNzqNQeNJcvu4nnCDb7ECG2OY6kmyINwNFJm7yZRtdfv0Pea",
	"htOEhnkeTswY630P43W5KwIcWNi3Kfs8j6IwtN2azs5vms5+NjWfN6LqGEL6eUaaB7dyeNpKH1uBtvcv",
	"/dyr8+3O7uTo5xtpwE1JlH2q0EfFaW8QPrcPhR3VpE9c7rtOrPVmXvMAEOnL4DhfKOIGxFGQkkuquKDX",
	"eu74OOwetx21mnyhgQwezqsNMQxiHURfUala8BzDqMfwgTF8YAwfGMMH1ldyd+R3jBxYy5g2xAoHreMB",
	"w8dhg9sQI4MJ7jh0uD3zaFe4b1NfA3d7hNptXKBrsLsly662Uc4awz50VX89ln+RatMQ2T3iqlyDTccE",
	"ZyMujbi0neNwDUJZz9rDwajPxo84DIdHR8Ln5khoX9ThvsS1dB86fIoX9fYk9Lu9q6NGMBKImycQDeVD",
	"8kqkRK5Yej2Tuul/smJprxpSN/mibeo1pDda1YOmcat6A+qjVX20qgtF2QIZVOFCg/icxMzsCMzsE3SW",
	"9Fnaz5LHU/SSC4TNe59uIfXYeixrYZUTJMjcIBREivK0KghTgK+jyf4BmexPl81I4poj6LOb01wvy+1t",
	"1ruWhlx3bWv96DG4aVmyZgijz2AD493oNVjDfZ3foMF/b0cvCaa4c99Be+5RV7h/70EDi/tE+O0cCGsQ",
	"vSu7b6f9N4Z++Kbf9Qj/hRp/hygsUVfCGrwyzoQRq0asctx4O6fCGtSyhvaHhVufkWthGDaPtsPPz3bY",
	"vrLbuBfW8gLrYPg0r+xtCvN3fW9H9WEkF7dDLvQnY3Qz97kSebKX7CZX76/+JwAA//95zfCwLqABAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
