// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
