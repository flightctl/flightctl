// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/z8AAP//C3fVU6B9AQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
