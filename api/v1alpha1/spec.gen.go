// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/wcAAP//mRcq2C/hAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
