// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
