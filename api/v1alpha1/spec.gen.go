// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
