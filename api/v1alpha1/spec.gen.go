// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
