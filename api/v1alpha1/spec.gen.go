// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"9AEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
