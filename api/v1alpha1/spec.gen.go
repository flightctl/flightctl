// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"7AEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
