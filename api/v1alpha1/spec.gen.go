// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"6/8XAAD//4x7DY7A8gEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
