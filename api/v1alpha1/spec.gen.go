// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+y9C3PctpIo/Fews1vlODsaWc6jclSVOp8i24m++KEryTm1G/luMCRmBisSYABQ8iSl",
	"/34LDYAESfAx0kiybNapOrGGeDbQjX7335OIpxlnhCk52f97IqMVSTH88yDLEhphRTl7yS5/wwJ+zQTP",
	"iFCUwF+k/IDjmOq2ODmuNFHrjEz2J1IJypaT6+kkJjISNNNtJ/uTl+ySCs5SwhS6xILieULQBVnvXOIk",
	"JyjDVMgpoux/SaRIjOJcD4NEzhRNyQydraA1wixGpgfB0QqluVRoTtCcqCtCGNqDBs+/+wZFKyxwpIiQ",
	"s8nULY7P9fCT6+vGL1MfDKcZiWCrSfJuMdn//e/JfwiymOxP/n23hOKuBeFuAH7X0zoAGU6J/m8VKHpX",
	"+gviC6RWBOFyqEFbg5+kwkKhK6pWCKOEKEUE4gKxPJ0T4W3enUxg839POCMDtnqU4iXx9nss+CWNiZhc",
	"f7j+0ANThVUuz6BFHQzmmwYCRpKyZVKFBGcAnJhc0ojoDRGWp5P93yfHgmQYNjXVYwhl/nmSM2b+9VII",
	"LibTyXt2wfgVm0wnhzzNEqJIPPlQB8x08nFHj7xziYU+FKmnaOzAn7Px0VtE41u5qsYnt8zGh3LdjU/e",
	"RqqAlqd5mmKxHgjwJPFhLduB/QvBiVqtJ9PJC7IUOCZxAMAbA7W62nKO1ibe5K1tAvCsNiiWq0GXq9Uh",
	"Zwu6bMJJf0MRfNSgqKI0ztUqDF7opuEQwL4p9Ht/8rql2/uT12GcFeTPnAoSawAWU5ejhdDvJ6yiVXMe",
	"+BlRTT0QSQiQZMrQHH6W5M+cMHP01f0mNKUqTMNS/JGmeWppjqY+GRERYQovgbaZ2ySR4ijPYqyInk9f",
	"M5hTTzWM/hwXowLRSinT007294rNU6bI0hCk6USShESKC73ormFf4zlJTl1j3TGPIiLl2UoQueJJ3DeA",
	"v67rtoM4tZBtORD3GcVkQZkG1oqghEqlAQhwMgCcE0Q+kijXryRlHeclW+c7qI5rZoRHHR5Lqkgq+7Zs",
	"7tb1VB/CkelQngIWAq8BkEpgRZbrvtFOeJLwXJ265vULX4wTuuaHes8LjejklC41kT3RW5eBy9raFAmS",
	"CSL1ohBGwv644AKepCUjMYrKvmgheAoHdHgQIAwZ/Y0ICTM2QH98ZL9VzvnS/EZiZCBiGAIqy2XZp3Ch",
	"kdZsfYZOidAdkVzxPIk1obokQm8l4ktG/ypGg3sD1wkrvS2NJILhxHBSU+AiUrxGguhxUc68EaCJnKE3",
	"XGisXfB9tFIqk/u7u0uqZhc/yBnl+kjTnFG13o04U4LOc8WF3I3JJUl2JV3uYBGtqCKRygXZxRndgcUy",
	"c+fS+N8FkTwXEZFBknlBWdyE5a+UxUDGkGlpGcMCZPonveuTl6dnyE1gwGog6B16CUwNCMoWRJiWxUkT",
	"FmecMgV/RAnVVFPm85Qq6e6LhvMMHWLGOLBuhtbFM3TE0CFOSXKIJblzUGroyR0NsjAwU6JwjBXuw8l3",
	"AKM3RGHAZMsTd/VoxS5gqIEc6Nf35sOY7o3XsMQ3e1W8TdqVb0Q3XtONaIdubu6hI6utTUdicffEoni+",
	"qsB8PeRsBj197e/NdfMFHEnXA5AufdaGcG1GKszxb0QrnK6ger7/EjjLiEBY8JzFCKNcErETCaKBig5P",
	"T6Yo5TFJSKwFrot8TgQjikhEOQATZ3Tm8Rtydrk361xCk7CQjxkVRmAkEWdxACVsf6NuKWjGJU5oTNUa",
	"uB+4MeXEepoFFylWhtf+5vmkyXpPJ+SjErhLWVTgWeOI6/hT0yLpgRFW5nIR6RQnGrxIrbBCDsbAnGk4",
	"ZzzLE/hpvoZfD46PkASM0bCH9nrnmq7RNM0VnickoDMyFynIVZ6BJCPJ99/uEBbxmMTo+OWb8t+/Hp7+",
	"+94zvZwZeuM4+RVB+mWaFbwmJQlw9Ni/D10Mq6EKlSOZrxUJIQ6wsOJtUAl1xGJzyWBNorgTpo8h+ECq",
	"/sxxQheUxKCzCiJoTgPE7v3Ri3s4J28REi9J4Lq/h98B6nobQH0JvAkXZI1ML2//VkSlUuZV7r/yUPRe",
	"YL3lsPbvraf5uwfA1Eihu82Vy7EZ6Su4ubYLhbNM8Euc7MaEUZzsLjBNckGQLPRPxS716vWrgSmTLXBH",
	"VDM0a0Q+Uqlkk+J5TcM4aodsynPTEnCIaxm8gPkg7NLk1YjPAa6x+Gb0bPpkuY9pM/Qr41cMRV5DQdAB",
	"gI7EU/SCMKr/qyH0CtPELGoYp+LGbF7M2m3wthC8A8VA7Rssjy8mCtNEwgPCGUFYo5xyxx3lQgAHovSZ",
	"Ot5VX+oTj6TVdE9YqjOBmYSZzmibMl23Q4qmxMxULE0VfUls+CK9LnsNFUeYcbUy2vLitDUDtKPHCnMi",
	"UtOL5ip+yVPMkCA4httk2yFqcELzdQ46eM5zZVdcLC9I0Pgc0D3+mTBi3unw7meOlZkti5aGqFShcYUl",
	"UD79ZsUoz8y0/rv+/bfBd10QLIOCCvpqLihZPEWmRck6uDmfyEE7HSggulGdQOhGGtgNVKd1DFBGn2pX",
	"MA1duQIA5fl3IksbgTytkL8CRlO4lHyBzoQWtF7hRJIpsrpqXxWvv0+mE2iwsfK9tjo7Vu1XN3TtZ19v",
	"XoVm8z6uM9hLeeuoL0l4u3GUzijs3T8N1YNdapKnP4JOls4TUv/D0Y1jLCQ0PV2zCP7x7pKIBGcZZUun",
	"39Vn+5tmcXVHo3Y8YseCLwWR+tt7LflYm1JGItf0TZ4omiXk3RUjMMYL0Gm/IFrooVKLFLrTsDN4yQRP",
	"kpQwZZ9Sb+Otz+2QNgXUWlsU4DwhGZdUcbEOwlKDsPVDA+D+xwL4rxJCVMsJwDcHW/gjdBYGxt6JmB/8",
	"czG/DD0dc28XdOksl058G2Z/+JmqQPfraXevXwt2/pREgqiNOh+xhDJyg1l/USoLdbMwkDwhp0SGFU8n",
	"vjI8Mo2RNK2bj3OI59fPke2Ajl7470F9rG4ulcZhEpvl7sq94Uzf4s1s9qHOBjKCs5cf9e7DkNHfESka",
	"IPNowv702HGegOqGpkTOzpmGgm1BJfrja2T/98c+2kFvKNMi7D764+s/UGrFwmc73/1jhnbQLzwXjU/P",
	"v9GfXuC1JqxvOFOraou9nW/2dIvgp73nXud/EXJRH/372Tk7zbOMCy1r6APGGln1Uv/QK3aSq2bBjbrq",
	"KzJbzqYwDGVopZdcjEcuiVjDb0/1vH/s/LGPTjBblr2e7fzwBwBu7zk6eKO5sB/QwRvTevrHPgKFnWu8",
	"N917bltLBazw3nO1QinA0PTZ/WMfnSqSlcvadX3MYuo9To2rQXUvP5Qg0Rf2B6/LOXv5EadZQjTk0LOd",
	"H6Z73+88/8YeaZCfOcyl4un2r+q0wVIYodZ6TOg9p6a9vo4RrAKF1KYOpfTdNzSzeefN71ULWbZaSxrh",
	"xHMUGPXaoxFsNILtlizKcIHG9rmBeSv0OJrRGh5DTa++sFqqJsG2+KcFoao7rVvc3KxryMKpCfQ1u1rR",
	"aAXqDujpVG7904DPW0CyelvM4togJzwXPEh4dE/KHXZmYd+2+uEBiB1gvJUXsww6wKr3Ukj+lqaBO6gV",
	"OFIBpex07qoxcmzBe++DbqQ5GkO9FaaJIzEg4PuOe1sR9rtd25qOIj1QNSxxGyAPPd1UKaEbeLU6ggnC",
	"YiJI3PreuceuOpzr5o3bp7GtztO5Sc1mtz3l9rP/ovvMecQZI5GV2YvDbu57eXJ8+NI+CGGk1y3KN6Mu",
	"BJTzhK+HYbFll/9STZ6QPXMMVZr6wlGf5rQCBW/V7afjS6XNzb2xpN3qB7G7LnFVli3Ux41jUVgsiRr2",
	"5PhLOYN+Yd2YGXLYlrxx9lvYVMvwxUTqGRpbS4la8biKLr7G6D0joEAB7VCkuFifEFlZX5fypWvF3shd",
	"zaqzFlA40m+IoKqVTlv6VSMv1HVr7viW9NlcoYI2lxNthTIHN223eDPi3DFWjxK1A4aFtziWsqpRLN2r",
	"3zPpJN+NblFtwcUUwa/FvMGv5WJaPnsrLAAGnqthd6WSSMZUKsoihRLdWk7R1YoIG0ChKaIWH8yd0YI/",
	"luh8ckHWP4IgcT6Znes1ESP56p2TMpLjx0zwOAfyCszNknL2Yy53CJZqZ0/fLErEj3McXRAGgB1uNrX7",
	"owsSraOE/ML5hbsH7kB/IgsufO3gwUIR4f1tGpyQOed+i/KHTY66spTG1IE29dW0DuMvsG0cb81N4NyI",
	"m0lc763Smfrgdu5bU5naXm9GXkKDtNEVZe0XbRAr3yKHtkapbxG8qneu/rIhjamtuk4nap8rqwh8Dy2t",
	"p1mV4gSJTfmt6ghpfpejeujB3R69kxjEBVtl4OjR+Kl5NE4nVtYfdoKOidqeK6QZ950Mez76X5H5NLcI",
	"bKQI9O60kNJaGd006FtxVhkEGln1lBgWN2XG7dzUTZ7Sd6eDt1BTBbhthDFaf3lBl60+hzF8q49lTBlI",
	"rvDz777fx89ms9nToaCpTtoOqMLeuxG4CgLWJ+hEWT7sdlfXYbiC6SSm8uI2/VOS8qH4FRqh7luV5ZNi",
	"ULu6oaBtca7QiKApi9V0GmJqgG1ofDNq819Y2Af/UFBFI5zcOH4ztFA/PLT5tZw89NVbUOizW2Tom++R",
	"4mneW8hSjSjhDutVqXRsf1P9VoMf1nqceeCFjVrCUV+XWq8FXaLM2vXlJqqtphtBwOW6yiJurEkCn7WB",
	"HIZ9R4xW31CHAEeol1a569a6aUFhvdeHA6JmVA1BQa6lImmba4P5CG64LrLVLql5mcCefKyla9GtzYSG",
	"KLMtK5tp6PuN7dqtQ/Mo8BROTSIALuC/WiqT+WJBP06RCWVckSTZkWqdELRM+NxNBuuH2fESUyaV89JM",
	"1ijhOCZmClhTij++JmypVpP95999P53YISb7k//7O97562Dnv5/t/GP//Hznf2bn5+fnX3/4+j9Cr1tD",
	"qdqgh4ZjO+YJjQYS4/deD3OtrlvpbNvT5X/1NeRheVd6qQssMUG2r+ZdlcA0MVanSOU4KZ1eb0t7LOvh",
	"m1tKUXsDDr9pJgzgAm7aYDYevWbDGu42XZwBwNGY85w9S8Mx6FPsg/e2rtI+Qe7fcsXApLk4p8e7kTpV",
	"j5BgqU4JYUNcnu21MB6+hLmQAUunhvs3F7qOG6lnNnwAij6VJ2BT3mtj0ahxIQ01PbLarwEDlO0LchVv",
	"QqniFpO/hxmVVVUxcRJGTB+M/vUrrjGcTbneEmreVfNvQDuvenOztHdXV1jEV1gQULEYtzPKlvZpqzot",
	"bd9cbdfgIgG2ZxbZgql6o0QuYZvHO/AeDeds8dXOx/yKCBK/WyxuKAxU1urN2vjmLSTwtcrqVz41teSV",
	"z5UdBL4HBIUKtgeZgKKF1WyZaDEay908p7HJZ8LonzlJ1ojGhCm6WHcKtnhJmGpVfGpyfrCEDFmmSTh/",
	"jKdyahnDa6GfT+PROa8vrTGyBvDRi0B+Es4VOnqxyVAFHhsYhtf5rkD2U4fsAyeo67J8kBT7aK5iWj2A",
	"dtRrMJI9luwMWhq/S8zw0sT5AGkxZBZym0VJHusvVyvC3O9OMT0nKOZXzDLbmhTacLHmJXLtTo3Dce8T",
	"bTZTtC6eqpv2v+4BW3wjJZpZ0/aN3pXht0nhK5u9GYVvDrGBOaoEWGGLys74Cwwxiu9y9W5h/+3ZIG9C",
	"2iuL9KYIfPVnDXauGUOrXxsU2pc1ejgLl2HKehAuEkIUEkTlgpHYINyCqGil0a9IMgdxJ50CWHmT2yLZ",
	"B0TNxWSB80RN9v9uxLMfoLkg+EJjdOdO5mt07q/rfNI0rJaXS9bZsk9g8XZN3QtXXOGkRd2pP3lepKGZ",
	"BkYxWur3KUHH8uJd0Km7ZAGopoHLWj//2oaD1IjKi4cOUoipvDBB+E2MzLBatZlABMSUrZFu46nhYPjq",
	"mN08BMzxIRwYQaXIYdaf8tj61tX4xVqLahI3ckkSm2yRX5FYL8u2NpRJmNA3zWRShjIb/xZwuBQ8z35a",
	"tyuFwMEHXZA1sKYZEfoKI+imQVyY3cr557DcipbE0+d99fvBzn/jnb+e7fzjw+87xb//Z3f24eun//Q+",
	"DtDwgeLwPcOXmCb6zW7JJGhS+nmI7s4IFT0LPHJJYg34QDfZkREQvh70TF9LZLhAOWvOW5zjRvMH2abc",
	"j+e2tGTyTCNt++KKZC1uHYVnu3HaVRxFNjuoSZxbdCh5TZcEA/y9MIJQUHpp/eiIxh479nyNsFEv5Yyq",
	"GSojxIofIWHBPvpDmmAradLNTNEfqfnBxE/pH1bmB4gUg+vtXbV/7v++t/OPD+fn8ddP/3l+Hv8u01X4",
	"XpXRs2Xeznq6Ytdix2q++li6csxT26FOHwJjhkhpI7S3edEaTTqSD9oEGvpMzQI6FcejT80YcvUFhlw1",
	"EGqz6Ktm9+3mGWyJ9g9xuq1Ny+QqYVG3IBSe7QOVJKs9WgC7rAIdaXyuVkStiPCz1qAVlmhOCENuAO/M",
	"55wnBDNju5iT5DZ54w+c1s2MBMlasixZO9LSUBG18MvFPjc6IU9IGMQHtx91kxvumbTvxD3L423P/qDF",
	"vwheeKxsmJ5/+ldYVg5+mFHJ9fhpPSgVvm4rBij/ylGn/pYCvPx0wyO4gfk3APjigGbBuxb2qA02qzrX",
	"NpqMLMGDu9kGz2SQAbrJOI6+t59rNtEww9JPA8B/jRrHtaKhoT6Ntk+k85UFp4iAk6UUYTIcyl3pp+GT",
	"JqGQ/64EHvGqj83w6Pe74BlcCjQruKErasteWDaCysJxYkUY0jfZI+NUhpicFj5DQ3XYkbcYSVoabvYW",
	"DXoaSib0RiyN58jTl3jRv1HN7IuzjXMqNjMIkltQ3q1lSWwqETpO1zbpYvNW/MoqczQhBNyzZX5eJXS5",
	"UuhQE0ae+JfV8/RplivRxDEqFE4b6UMOcgXlHjw1SE53SGf49/uT1+503h+VWAg2WJRL4zaZCfeW/J8T",
	"pK8I8AAJZRcmdQ/M516wDovzTRU9bfqeGrzKCVphMOhKABz7r4WrPFPmQ7UvbXVZlUtjqlXc4GqYoXc8",
	"lNxx72IN8aChl1vuBVa4XKaP5hDCDjwDdkvX46MFTSAnFjp7fRpGfLOYC7LuXMSvZL3R5Bdk3Td3Hdlb",
	"oNJc4qCDH04SBlAGl9ZAowW/4aF7+9KXiguqWkFetj1wTduh7/MKxcioks68DYFJgCUx/Kh+hYF4xLEg",
	"snAe6N04+sqxlisulZYw9zMu1ICImA4AFYsNnjz4MDV00q0ZY6G9SxTbv6wi8+j1dPKKJsQ60RiS7jwB",
	"bBJp8AVMbdJI5+83zPZfGfqwGK7y80kxduXn924iu0LH3NbuH2eKtL0cWYIpQ4p8VOir92evdn54irio",
	"51i3I7iroLG7jZXQ7V7qbjaeoeZMot9ZkzREGSW80GIOzDJDb2whPkJBCXY+gcWdT/SKzidmTeeTGXph",
	"7DfwqBWNfPcM+GkytV2a53A9NRa+MEj09p5IY8ybevYbuyww47hgOJanRNAIHb2oL0twrsyqmuIQj0nn",
	"1BkRNsADihfM0H/xHKREsxjjspVqmW6BU5pQLBCPFE7K2oQY3J/+IoK7fHvPvv/2WzhbbKSaiKa2g0l+",
	"Eurz7fNnT7WYqnIa70qilvo/ikYXazS31ihUJEuYoaMF0mJoAbGp8diqbgaeBb1PLQmUANPLCyeJajdJ",
	"47nkSa5IYZF2l7OWfgm95YoYrqjIag5WWt0UJJQ5QfySiCtBlSKsJdc9EZ2Hxq8gif/W70vIel6gWpAu",
	"grdNc62vrKuOZwGz0ls8Bo+Phq7R0OX1AFzZzLhlumzXoAVjhtXWxaeqqhp+HjH54fXT5UEMUo0Ymj0q",
	"oj9XRbSfeb1NIdlss5ku0vrilk5SNTnAKPNaatWeuSKxziWrjEudE+d8RWJkhx7ic1US0fBWO5TssJVe",
	"xbrd6rDA1ZNK49sUrVUkzZJWFaz7Wsu90XSgrUut95Ent+43H3546h6wbr+tF7vzRt/4Kg8O8IXWU0SA",
	"98ZJska09Fv2UGOFLwmIKKBNiVzxJwgkIRVdBlQHu1rRUNKujRXmxYnfPj42brjrb5KYZuowZtBrVKVW",
	"G2rooYIOjU5IxgsH56CNaQHFV+qZNQcUmXFDu1wiuWhxaP8q41BbQ/MSKVfkKUQ/mYocw7LZ6KFtm+Be",
	"g8UqGnqYJVUnejuhNQqyIAKKUoOW8WeqqgkXbBmyANngOVPHhYjsHFt3G36tuo0jQeYWPZFGArbxnzX3",
	"EwehJ9KI16VHK0xZsdCVD2y7sO7L6Dathl1NWR+lJQe1+9zvy1IOVana13SYhmflhFzS9vhAYb9C7KH0",
	"KlF3rreRSbhYfGPWaZsn/LQlX3h9t7XsJP2rsTmy7UUMTQxpECOn5CxdsWqRYovOPAKgaUmtMi8lKuA2",
	"7dVWH0wY9do6iaOiKbHE7ZH5dKMn8knVpftJ+qTq0q3loSerJ7d36w5wakOr8pS34yRnk+sPELNR/THg",
	"IX75Gxa3cTJ4WaZBRZdYUIgQuCDrHSPzZJgKCPrUm/FiBXKmYRyuL5q34LwWQDSgqzfUjyjFbI2wWOYp",
	"MDK5hAB6hVmMRWySviC5Zgp/1JdHy1BQbNQqSSVKbfkkN5NEGc2gUuESPD+n+kZRQO81uoLksXYRKGcx",
	"EQijOZYrtBMZHfrHsFPIFRcXL2iLvlJ/NHFALqLHbDeXLoBP5Iw5CdIudACpy1krSalUNRx+14pu+vF6",
	"l/VXYvL7eMWFrnvX1VWJ6KBSh6gkbkTfPwh15UiJnOijK4uwBWmeDRRqeTxDW27gE2+xWnBnFPpKPkV6",
	"flCxYwXmHJJYw4t5hfUWJFZUWlMC/FosfbjOomIUCxDkDVT32CruhX8tC1AD4x6tMFsamnsLMIfV6TwL",
	"392itFcvA9t4DT3mTS/yl7OzYxMUrSlBQKrAs0gE3q6fwIbljGRIcK7Q4UEL8yXlFRdxGwNmvhrvhVyt",
	"jLWoua7CxbgYL2RDvqCZURv9RkQRahiwKV/QzPLdrpTupdch7MuuEjkIGGevT42vA5TiHLp0PfoFWQ8f",
	"/YKshw/OL9ryB8Gn7UC/vdTxmS1xDHxi31z9nMGkpbhdgyytlMoGSjfMrGSYfKOpwnGQjPQKNIp7Ao0z",
	"YReR6jbxBSxFEn0vS/6uyw64iTgimuKIkyawLUy+ZhHqEFRMTrnQ5kVhjn9/8toWtOapJvkLZSNI5ljC",
	"1xk6UijCzLIxBP2ZE4jjFTglCpT1ebRCWO6j88mupoi7iu86pe8/ofWP0HqIgbIi8hTHd/9SjruRbXT9",
	"hqqJVeVJGFYXcmjd3MEqDbi1cO4cRThJ9LsZJZwZKTV4ky5xQmMTvd5yp/R45r4ZVpCzxCRacV01+wuF",
	"SsvC2oUkjN5LsCCAk5C+4O5mGgYY5CR4u+yqHb85X7sDdhlr9VlophpWQqTlo8FMvyJJZmgZ2KeKHRVZ",
	"r5TKCmPFRmqdqX+uoRtzlOKln2TPUcMmJWzJR3zi00BHkaA6l00mHKiahTIcXQzyVWrPt9xa1rS5cJNM",
	"qiNtpuEp9Z0DN6VmlavBbGNbRtS7JQl2hyEwdZaOHVjPbfNlTicSZhuqFyxXiUzHXoXgzVWAZoKBer9h",
	"ACnXHBxAZjjqGAU+9w4VPvly+KkHoV7Lh+1dHlLo6lTtQyH0gWQRztxk7fXwm3mI+SUI9tYZp7Q6I3MD",
	"ZJ6USWtfm0ALYx1X0aoUXI0i6eDtCxLP0Ms0U+tdlidJbXZbNxYxrlaULVty6Hqj9mHzm3p7yD9RrPRW",
	"wSUpzvTG/74g6ykoe66NticcHNI8GGfFDRrp9RcvRbWzv1npeM3UiigaeanUC0nU1wdp0miO4xILynNZ",
	"mLFgGXKGDrxcynhtRFl4Wm0N+r9Li94UuYVdB81OirI8gCBv8Bq0kkRZ1RFIAPA3RglNqXKUusy2AZS6",
	"4IaNepEWcciVOB4iIAYZ/A1NvTSXp8PcUKOGoxLxDP+Zk8Jzwz3xiiMqJXzg4BHnojXtQ+h5F2BjgQO7",
	"HJXm3VFcL1NQcmmYCkY+KocrZcaQAtyHBkwm/VTEmaQSGH8YSy/LOihYoxBxILM7rUolet9O7QBJdAT4",
	"ETKE0YJcOeWsOdMMSlIVSAsn7txqDBNUzZJldIewT3e0FpTOJdEkOoxMUgpVQtrakamAhBYy40ySKcpZ",
	"olmzNc/NegSJCC1AaYVP8NRniPR4QoM3M6aMsuWRIumhpph91UZlPpf6YJmyl8uuEwBf1h/V4LdySGya",
	"uIN2WwFH0qKnuyyOXYotQQMvUtCtOsoG7qb1e17swy1KotykP4N7agCph3FAT8hCoZwB8rAY8ZQqT6ss",
	"iaA4oX8Z5UVloXCOxnCAvrK+n3MSYc0MU/gMludVzkD7ysuvAALrdQ+Z9KDR03I/gljQmRtY35PZSKFs",
	"vtFOnAsQT2KQHjFDl3uzve9QzI1TL1HeHOaWUy1SQ8Zy6Ym89Xujd/Y1kYqmIEJ8bbCN/mVt9xFPEls3",
	"EpmAk8J3TM8rCFDKtrGNJAHUQBRaexwNS1AWejNqz1mT9Qtqjkx6aJsSyqee9sk3GSbBR6o9hycXPZrd",
	"MiUDEBB4Ze0b7jzfj9hkOnnLFfz35Uf9OE2mkxecyLdcwd9Bb3jjUNeyL8v8mzZF/voKu9+fc97nqjQI",
	"vU1/aIJ9QPL+UiU/3MmufrgmU9WR6brXlEbeQCWR7edr0zv2/Hgaey2/aeSpciZa2s/0syI1Mge5E0Ns",
	"LZGFJFrueQTGwLY1MlzAU5Qxrsqk+Ddk3srGgJ3N7OgNzIP1UM7OaEqkwmnWkSrD5KcHP8Yr/USbqJnh",
	"+TFikpCbzGUpK3TfZL4lYUS0aMgPkHk2o+LZqnhxYmdtjlA5Spnn0NR1Nf5x6JhneYK9tL5GrpuhE4Lj",
	"Hc10DkzceOvA8DeGc7fOqZAnz/DIhoaAthIzn0XkYomZfhV0O82FLrnQf34lI56ZXw05fVrwepMb6xSt",
	"s3KQFl8xEpTiPC9arBC/AkcH8IY2v2upAJ2DU+iunut8Ymt9tlVW9znEoNXR8tMWiDCtzX3tsiEbpvWJ",
	"9Lyny7JXpVP2MFX/saaOXi61gqRuoB3ttU566RL9dwvHJoQuS4yMboLpgm9V2Kh4gP7/03dv0TEHSIBZ",
	"sU0NmrdcEMNd6zc2Bm7frmbWeL941uW7U39EjomICFNBpWD5zfF/9rDNzalSgqxsbFoFN3hia5fXqx8N",
	"frG8ji+t78b1dJgC7IBVtJe60WyrDiitWtjrD82cQy2QqNXKK4rDWwqz2CklDVlJo2pQyttgkAC5Wbtq",
	"ZDXb3GpRtuTkpgVufObOb6lRICZZwtcbVHkKX7oNSm6dFQrTvMbtAmE9WrLC4N9GU6OyGP+g6jHQuFaG",
	"6/5qcBmItdL/Wv3C4ka4OhoZiToflrG416dd3OvhynRVjbXVa/ghSNE8q2SAlpVf3SPm59AXFW9Z994v",
	"qbI2t+Abf9JhZK/4+HqxrD9T5Rvc9UFZTwPfIjhGxY3xrWN8626JRJsFuXr9thvpWg4cDnetfq/GvBbf",
	"6BjD/glEvoracQxkJQqKPwbBfq5BsDWq04HkjfrBVdGgylQMkx3rEWm9zuS+j1hf41O5Ktv2bL0lVrLe",
	"YrOAySpEbhmwWB3sflP7OZniICFCndiiWbWyXP4Omkz9Kk8x2ykqVtVii8HFSo8dzqaZt6lpXQGJgsel",
	"qUka47nM4Esi8JKYQihgEZ9bc/acLDTSw8SULWfoFZznfnfsUH9UUFdE0Pl5/J/ttR2yDrXUmUnb47RN",
	"fGF3ZAxbgi6XmlCGIGk02Max6ZIMKcZaOe9T2ylc5MuN6B1TZR9VBVDv5apMFkiGZr427owTYYJl3qHI",
	"4bC8X61rKQdubeLN2NrGLMXbtJPS9Vap3mpKmbM6pjjLbMauw+P3rUie5SF7lilr1CqJtpQ8cua1VmNd",
	"q/HtuiBw67egh5xYpYHzmx32ILTspo/Ud62rRyZvgcR14JQ6ayGG6zrhSsxrjQl21LRLLQSNkNCtZuid",
	"c1Eyv2bgUGRRghaVeTZWFZVkPVS3yDvGsEHOKhZ8b3pPYdT0rsRpllC2PNIsdrAOREHW50RdEcIKlRh0",
	"1YC4B0pdBG52xGxWMhN6cJr6ZxvYcRcZPF2zIBdWfq0XzPG8UcF9zfpEGcdgSJrgqWAUN/EN4MFlDwzE",
	"LFqoGUdRbVTHjOqYXR/lNlXIeD23rZIph3ZKmRFfH1i1YjuvWbTx0wvUflSufL7KlRoN6XzYA0Zn/Yh/",
	"JZ8Wz7ZN692lWehJ92JSLzXiuilrRI8dQV0f12Jqi2e6DiXaK0yZ8Z4PcRTGase4vjquN9U4/RJHKxvp",
	"Uh3KOFG5AfSCfbamG1fvNxJ0SMoa5w5WpK5pQvquMtYE3qHu+3cDHZff/5ZaLnwzUtqZfsYpew55mlLV",
	"5iQMruy6AVphaXMxXGEJ598SXOUG/rnDi7AY3HMSDIw9xCd6E2WdSRFm/ViIdeQOSFkFobGVNowrX5Gj",
	"TQtGXt7CLvUEpC88tR6TbedUbdTUF0glsCLL9XBlQW3EDmCU9vna7fc/Oy2iK0icmV/rCePqek9I72WM",
	"+mdlsqNOnUNepueIm8c0IGFi/XCv4XwaZZp7FB/V9hDZDqHEZytB5Ioncd8Ynhtd0DmiyFZnTzbscGK/",
	"akBHK04jE3brfGrcHjXdrJ6Mr/irXoWQ+8KpXG0pa8jp6S9dSUMyQS+xIr+S9TGWMlsJLEl79g/z3egp",
	"5Oq46PtpJP2oLKk3OYfdOQBoeH6O0MXxTTebObtK/5h7rEN3lAhAb7/m+OLSAnSlA+gKhC93FSJybW+7",
	"fc+pUROpXDArMOjbFuHEFQeLOXvisnAgEw7ouXMPLOQxxMZTMg5GJnEOyC2sHJZhY1KKoxVlpHWqq9W6",
	"NoEtLq/XcD55hWmSC3I+seuxIWNUllGTJM3U2kZ5QZBYlRMqYy0P0AksE0UJFsYH3Hk4SVfINCZonmso",
	"ExNuxi+JEDQmiIbtXbL7OJ27fAE89A6CVvfR+eTUEHBXnqPY6Z2LYDIj0Q5m8Y4F6TA0P7NJbFsVFrUG",
	"Vc2n71ZfZPgdFZijAnNUYEKPGvJspsOsd96uGrM2eti9LNCo6mNWazAaLx5eGRo6kkFSfP0pGHWin6tO",
	"NESW+nC/4XpWefutqNjOAizCxZfOnFiPrlZcelUCLL4vwKOG9/PqZvwhm92wor5fJmD6921dyDbMCdWp",
	"WLO3enjx/AK4V1garZhDjIERu5towRpxZ8Fz2EzTWWzA3j2oZ39GU/Lf3GXocpneX3PjB1Rbg4bJX1oC",
	"LCJGhbQeCzDb0cHbAxdleHDy8mD39bvDg7Ojd2+n6ApEEf1jlQc2WUqgDqBAPCKYmTfE9SzSYkNObCwU",
	"jfIECySpLadLrUoSC4KnpubsR/CyQAdQFQ3vviVX//NfXFxM0ctc37/dYyyoc0bJGU7ndJnzXKJvdqIV",
	"FjiCVIdur7WCdOir88nPb87OJ1N0Pnl/dng+eRokT0afdhqtSGzdDevKy/LFlraVS63J9TFGKOZXLOHY",
	"ZoiO7XWTfqIgRVP3lWdGwYBswvIAL9GrUjsU1QzHwGsJ9bPAEXnhOTEO1Q0q73J1vp2uXYNGh4mSxxJV",
	"t3jZxiv9TJVPcsNpA1oQ1Q364Vp/0XjmMifhCEBKUkyTyf5EEZz+fwsoaRqpZEb5xIWOA0mpFTs9Izid",
	"WC3MxL2gld6NAPjfq0N8+Mp7eFf5fBbxtByh/NdTy17YMiRGOanlfQyuR16lEr4w7wlQDBIvyzozNq8N",
	"FZDpW19LOTvXL2dCI8KMgtDu9SDD0Yqg57Nnje1dXV3NMHyecbHctX3l7uujw5dvT1/uPJ89m61UmpjL",
	"ozTiTGpgOzg+mkzLg55c7uEkW+E9m/KE4YxO9iffzJ7N9qxpCW6GZjF2L/d2ca5Wu2W46DL0rP5MGoWa",
	"K57isyLRCOXsKNZbzpXTb0GwJKQcgnmfP3tWK5fqRcXu/q9VEBlE6EMTbxa4irX8Hr9qEHy790NAUsjB",
	"glmW/yCx0WfgpQwUy/6gv1UAZrNiklaQ/WYbQDBzFXSQJCoMMtcLDsrljQWeIpDcOzCqlkXc0oAr0I1X",
	"BMdElKh30KgEXgC7jvcfwodXWwzMDNMCwJ/ttbWhrGw1+Fimk++2eGVMNePAbTmycpuRF1yzYVfCrwVN",
	"l4yypZMczB4TooIvHmSx8opRn5rONjtE1TBevSymb2tXeZdYV2gO2jDOXIC7Pa73zNaw/ovYW/fN3U/6",
	"ios5jWPCzK28hxlt7fT3rNBQVy5l68UDl/QgYQK5/kZ3TvfsvHGdJAsyrViOrGio6ZXJzuk8QaBUbyGc",
	"23zlXgJEy6vACHoASLJkosFVvdETl/Hvic3ZZg0GmSCXkESymhDP0UtYUEkui4yQXYRyGso3ZNOSGcdc",
	"JWikyjx24GZmExW6tFEmnRAVJsmZrNYuJpdErItsoqGFJpUMqfe3WoCtnDqRANLu2axjGsQXBD358ckU",
	"PflR/z8U2Pm3H5+44tfnkwuy3vsRzm1vekHWz//N/PHcChKhncKMN9upX6TIz19oLl6xST+rYpkx8azM",
	"YAlJqky6vvaLVumO6KJ6y6FCthm0lpoSKvGtCGtUQSoRB7zAvWSQAKHWm0FTyARQwsn3UPnmechD5cMd",
	"viCtVATUxh0Pyz3wAT/hGLn0TONj9uk8ZhkPWRQOTYp0POBFaz5opnNrz4mReolUP/F4ffeX34CsFLSV",
	"yMl1Awv37mshIUDHIxreKRp+++wf94CGwL9ruTmhRn30qWP/IFFr92/92l13SVzm9yq1QPbuoxLrNxK1",
	"hojqvo9yP6EymcGgNKJ7z239LPuc23z5VUpxAzH+/qnIFyUgfvvs27uf8S1Xr3jO4kcskQqCTYrwktWN",
	"OrCtip0nBMf3jJtLW2b61og5neSM/pkTmxoZ3vsRV0dc/UQYbqyicHmbaHVDhhv63jO2ZkUa9W09pENF",
	"gh2Y+j83O8tKeuBBAsEDk4dRFvhcSNK9CB+PSeyYTrI8yK9Axuoay3K4AcsC/e+ZDhpniQchhPemG3lQ",
	"UjiqZkZyPJLjT0QLtIuzTHCbiyhIxQ+ggYmZJ2zdxdE2GVnjzNba4cBNvjVKbrK0+wseKfnI1I5U9NOg",
	"oo9ao24dGgd4Khnf9X63pBd2xNEH6Usw25r70+Nw1H91dLPy4oyuRKMr0ehK9Jm4EgXuiM1IgRYJXkLp",
	"YlNG0SSd0qtJUyzW1TAnOUP/0jsBUHEEjK1NvGTBApCs5K8CzLeDeQFBNtYFAA6l6J6Y21S5909KGNVj",
	"XqAy6BM7sB7qCaSaEXkr6nttQ7esyNBxp/YfQ19HJ6v7e63fcuWS+H6C73WPT1Xt0W5zoDLN7shbyg5+",
	"z65R/qyjsm30g3oI9GyKaAM8nF44D6de3PVFtU31VLXBH5fDUjtujx4Pn7vHQ5+sCoGO/bhzQnC8NczZ",
	"mjvRiDYj2tw9y9jtFdSLOtBwa7gzOvdsEX9HbnY0enw+7HOL846x3A575MFNZ2u06lE44Gwibt8fbRpF",
	"+5EYjsTwLnQJu141/6BE5BxQIDGVbqn/y2yS8ibJhMau6P/taWbkVJHNyW0at8chNjmIjNLTiPyfEPLH",
	"BIpkyCJ3WIhjKpKxlZY4o/Dz+jaVi+XHLaoYy0EfBRvlQ2EU90Yi90WoiNqpjSAsJnD5O9LMGXu+aThF",
	"kiSLHWvQJ3FRQaRRn3WAOPczUSd2XC8H61bUt5VFty5yWyRr2lqU6ILxK1Ys5DeX1DTskACNT6ptJw/F",
	"JQVOpkMY/LZ5dd5y5BYyEpqRm3oQ+lam4e+kbn4G4g0sTdbjdbQ3jRLTaG+y9qaN0cmzPm0Nn0Yb1CiU",
	"jHTkk6cjHcagG7zKnmloa4RkNBCNhGMkHJ8st0+Y4EmSEqYGZMsvG1fCDkJaiZdF0yJh/mBKggcmfzCB",
	"UaApYYhKmVdzbEG9xEzwSxqTeOoXg7AhFSsSXSDaF6RsFTUyPAlEWEA0C5UowpIUQR/UaVBsxEwdIlBo",
	"CSeJrWSp+05t7aYCyv5EJnAGVj4npvJja0SWFA+m9Ggc/EjePl/yhj4p+lYiTjAkuPF5SHRweZ0H1y9o",
	"dBljhr+MmOHQ/esKH97obukewZs1BhWPQcVjUPFYn2ADzmysSzA+VuHHqjt2lnU8WW1xtI0edxRS25zn",
	"nqNrWxYweuOOgbafsgy0QfjtZujfIgxtqlJun/JxBegOIg+jEfhz18FuICNC2O5mOHdCcHzHGPdIHC1G",
	"dBvRrZ3L7Qz33QzloNMd49zojHE3eD8y4KMP5yNOK91C3LoChDdlJ8Aj5I6p26PwELmheuFBCNuo1RiJ",
	"6ugY/yBqlBtk6A+Q5CYltr3ugBI/uhz8jS0UdQkemiK7hfSb5EcaOQq5nwCx2jy2ZwvqqJt5Fo9KqRFf",
	"v2Cl1K3QMKyiugs8HBVVo6JqpD+jourWiqpbsh1htdVdULxReTUyPiPjsx1BZZEQMsgp/5Vu2O+I/8qM",
	"Nzrffwn+jHB5ehzue++NblXcmtGxfnSsHx3rP9dqXUc2TLOtLJfbNNCVtpXg2OaxkadmkIerggVka/To",
	"H1/A/gpY1WewzXEfWt2Rs74Z+54d9L1JR/P16JT/AJjZkHV2/4b/Xu8qkmYJVporkpSzTiEodtWwIp4k",
	"Nm20frvsEKgYIywVndl2v5XNevUhUE3SPZCNiVq0HwuPgDy87WUU1R6LqAZsZv9t1rzOJ3yXp6PEOEqM",
	"o8Q4hmKHKGeNbo1i2/gabsAcDgjZLHjE+gM3jCm89Tt6d89o3Tw3cOZPyg+oDu3RGPYFGsN6uGBBcGxY",
	"wOL968XlE4LjEZNHTB4x+VN5wYeXNu9Tynom7U09WKpDP660Ca1K2xGtvvAH0lQ170Mb/SRuCWm26GT+",
	"ZVgjR7T9stG2p6p6H+pCuy3h7uiYvj3UHbVRozP6Z2OS7Suo3s9fgK/5lsjUo/Am38B5496o0ugnMlLB",
	"MSRnizqLvthgUE+WETpVRaWjhi2i2M3icO5UIBtloVEWejhZqF6qa7hktC1UGuWjUT4aScgnTkLy4DsM",
	"8sfGT3EptWyLhIyyy8gAjNjbz2YLknFJFReUDIl1PXHN1/0Bryf+0KMv9ZfgPVbcpnVP7Ouwe6Sb1m7R",
	"GAY7OjWPTs2jU3MvCSspzOjPPL5I7kXqiUUNPEttAall0zuKSvUmuOfQ1PrMo91hjE99KJRtEVU28WUc",
	"hNQ1kWW9qQYiMMnjcm3sRvpRN/C56waGiG7GyXEQPp0QHG8dmx6JiW1EpRGVfJ6z2/FwEDpZE9OW8Wm0",
	"s20Zp0d2eHTDecRuOHXC1emLOJANANPe1inXozDvbSrB3y+1GjUGI4kcSeT2lBPWirVm0TBDqml/umbR",
	"EFNq2Xq0pX4pmuvyRvVaU4ddJmNPLduO9tTRnjraU0d76jAWr6Qbo0V1fJfKd6nXphp4nNqtqpXX6W6k",
	"Mm+Ke7es1uceJaXRtvpwyNsmwGxmXh2E301BZnNVUGCix2Zk7cb/0Tb0+duGhkh1ztA6CLOMqfUO8OrR",
	"mFtHpBqRqsqS9plcByGWtTfeAWaNhtetY/fILY92hUdtV6iTsB7j60DWwJpf74CGPRIT7KbC/n1TrlG9",
	"MBLMkWBuT5NhUx+3ZYrRkpU0I/uZnatk82eiyoTVd0YfBmRp/hL1y+4EP0BXY7oxD1Uuksn+ZHeiHwvb",
	"un6879w5SrTgAmlSQJiyG5h5yUkrHyZNm5M3EGfokAhFF7o1OaVLRtmyXn1beoNHZWtpWouCCHbPYxKm",
	"Bgc1qVd7R2ivD+4P1ix93DduoFhtJfd6X/+2gF87iOdW0T9Sm7G7GMujDJ2j6SsiSEToJWXLEFmwI7or",
	"ef3h+v8FAAD//6TNVOgV8wEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
