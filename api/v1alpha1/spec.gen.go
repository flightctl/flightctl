// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
