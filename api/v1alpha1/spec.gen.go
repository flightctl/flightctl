// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
