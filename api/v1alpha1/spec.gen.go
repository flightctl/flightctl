// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"k/3Jzeeb/x8AAP//Mzirr8d2AQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
