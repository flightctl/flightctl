// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
