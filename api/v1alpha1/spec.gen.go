// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
