// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/wEAAP//Wi2HMEAeAgA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
