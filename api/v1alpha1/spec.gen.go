// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
