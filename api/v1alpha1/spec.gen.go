// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//4RpHP6m7QEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
