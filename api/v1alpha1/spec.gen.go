// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"LNgR3ZW8fn/9/wMAAP//Fm6eBlPxAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
