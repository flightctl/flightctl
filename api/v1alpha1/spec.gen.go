// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
