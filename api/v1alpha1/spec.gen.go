// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"3gEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
