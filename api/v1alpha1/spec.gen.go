// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
