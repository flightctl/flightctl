// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+x9C3PcNpPgX8HO7pXs7GhkOflS+VSV+k6R7UQXP3SSnK92I+8aQ2JmsCIBBgAlT3L6",
	"71doACRIgo/R07JZqYrtIZ4NdKPf/dck4mnGGWFKTvb+mshoRVIMf93PsoRGWFHOXrKL37CAXzPBMyIU",
	"JfAvUn7AcUx1W5wcVZqodUYmexOpBGXLydV0EhMZCZrptpO9yUt2QQVnKWEKXWBB8Twh6Jysty9wkhOU",
	"YSrkFFH2PyRSJEZxrodBImeKpmQ2mbrx+Vy3mFxdNX6Z+js5yUgEq02Sd4vJ3u9/Tf5NkMVkb/KvOyUg",
	"diwUdgIguJrWYcBwSvSf1X2drgjSXxBfILUiCJdDeat2UAms+q8JZ2TAGg9TvCTeQo8Ev6AxEZOrD1cf",
	"eoChsMrlKbSor99806vHSFK2TCpbQJzBrmJyQSM4BsLydLL3++RIkAzDpqZ6DKHMX49zxszfXgrBxWQ6",
	"ec/OGb9kk+nkgKdZQhSJJx/qgJlOPm3rkbcvsNDQlHqKxg78ORsfvUU0vpWranxyy2x8KNfd+ORtpApo",
	"eZKnKRbrgQBPEh/Wsh3YvxCcqNV6Mp28IEuBYxIHALwxUKurLedobeJN3tomAM9qg2K5GnS5Wh1wtqDL",
	"Jpz0NxTBRw2KKi7iXK3C4IVuGg4B7JtCv/fHr1u6vT9+HcZZQf7IqSCxBmAxdTlaCP1+wipaNeeBnxGV",
	"CDNEEgLkkDI0h58l+SMnzBx9db8JTakKE58Uf6JpniKWp3MiEBcoIyIiTOElECVzmyRSHOVZjBXR8+lr",
	"BnPqqYbRn6NiVCBaKWV62snebrF5yhRZGoI0nUiSkEhxoRfdNexrPCfJiWusO+ZRRKQ8XQkiVzyJ+wbw",
	"13XVdhAnFrItB+I+o5gsKNPAWhGUUKk0AAFOBoBzgsgnEuX6haKs47xk63z71XHNjPCgSj0MVSSVfVs2",
	"d+tqqg/h0HQoTwELgddhUBwcvT8mkuciIm84o4qLzZ7JUGc47AO984VGd3JCl5rUHmsAyMCVbW2KBMkE",
	"kXpChJGwPy64gIdpyUiMorIvWgiewjEd7AfIQ0Z/I0LCjI0DODq03yqnfWF+IzEyuzXvOZXlsuyDuNCo",
	"a2A6QydE6I5IrniexJpcXRChtxLxJaN/FqPB7YFLhZXelkYVwXCCgPuZIsxilOI1EkSPi3LmjQBN5Ay9",
	"4ULj7oLvoZVSmdzb2VlSNTv/Qc4o18eV5oyq9U7EmRJ0nisu5E5MLkiyI+lyG4toRRWJVC7IDs7oNiyW",
	"mZuXxv8q7OHKIOE8pyxuwvJXymIgZsi0NGstQaZ/0rs+fnlyitwEBqwGgt6hl8DUgKBsQYRpWZw0YXHG",
	"KVPwjyihmnbKfJ5SJd190XCeoQPMGFcaWw3Fi2fokKEDnJLkAEty56DU0JPbGmRhYKZE4Rgr3Ifn7wBG",
	"b4jCQBgtrnb1aMUug6vTiYQ3+PrDmO6NN7HEN3tVvE3alYceydZ5XtONaIdubu6hI66tTUdicffEonjE",
	"qsB8PeRsBj2A7e/NVf0dHEnXg5AufdaGcG1GKszxb0QrHA9TPd9/CpxlRCAseM5ihFEuidiOBNFARQcn",
	"x1OU8pgkJNZi13k+J4IRRSSiHICJMzrz+A05u9iddS6hSVjIp4wKIzaSiLM4gBK2v1F4FDTjAic0pmoN",
	"3A/cmHJiPc2CixQrw3F/+3zSZMCnE/JJCdylrinwrHHEdfyp6XH0wAgrc7mIdHoPDV6kVlghB2NgzjSc",
	"M57lCfw0X8Ov+0eHSALGaNhDe71zTddomuYKz5OQysdcpCBXeQryjCTff7dNWMRjEqOjl2/Kv/96cPKv",
	"u8/0cmbojePnVwTpl2lW8JqUJMDXY/8+dDGshipUjmS+ViSEOMDCirdBHdIhi80lgzWJ4k6YPobgA6n6",
	"I8cJXVASg8opiKA5DRC794cv7uGcvEVIvCSB6/4efgeo620A9SXwJpyTNTK9vP1bQZVKmVe5/8pD0XuB",
	"9ZbDyru3nuLuHgBTI4XuNlcux2akr+Dm2i4UzjLBL3CyExNGcbKzwDTJBUGy0EIVu9Sr168GpkwG4A6a",
	"A83PrBH5RKWSTYLnnVAYRe2ITXFuWsINcS2IFyAfhFyauhoZOsA0Ft+Msk0fLPcRbYZ+ZfySochrKAja",
	"B8iReIpeEEb1nxpArzBNzKKK+zdMdi6WMbn6oGnqAueJJmRXVwHJ3b8l3t6Cd6MYt33n5bHGRGGaSHhY",
	"OCMIa1RU7hpEuRDAmSh92I6n1Zf92CN1Nc0UlupUYCZhplPapiPX7ZCiKTEzFUtTRV8SG35Jr8teT8UR",
	"ZlytiKhcA80YbeuxwhyK1HSkuYpf8hQzJAiO4ZrZdogaXNH8noMOnvNc2RUXywsSOj4HMhD/TBgx73d4",
	"9zPH4syWRUtDbKrQuMQSKKJ+y2KUZ2Za/73//rvgey8IlkEBBj2ZC0oWT5FpUbIUbs4tOWinAwVHN6oT",
	"FN1IA7uBYrWOAcpoW+0KpqErVwCgPP9OZGkjnCcVsljAaAqXki/QqdAC2CucSDJFVpPtK+r198l0Ag02",
	"Vs3XVmfHqv3qhq797GvVq9Bs3sd1Bnspbx31JQxvN44EGnW++6shh7BLTQv1R9DY0nlC6v9wdOMICwlN",
	"T9Ysgr+8uyAiwVlG2dJpf/XZ/qZZXw05Lf1Y61JGIvfzmzxRNEvIu0tGoP0L0G6/IFrwoVKLFbrTMHi/",
	"ZIInSUqYss+pt8nWJ3dImwJCrS0K0B2TjEuquFgH4abB1fqhAVz/YwHoVwkhqgXa8M3B1oDSA7z5wQe/",
	"+WXoIZiruKBLZ6p0ktowg8PPVAW6X027e/1acO4nJBJEbdT5kCWUkWvM+otSWagbwEBw9vJTJogM65j0",
	"d0SKBshQeyDUevg4T0AXQVMiZ2dMvya2BZXo4zfI/vdxD22jN5RpmWwPffzmI0qtnPNs+29/n6Ft9AvP",
	"RePT82/1pxd4rSnCG87Uqtpid/vbXd0i+Gn3udf5n4Sc10f/fnbGTvIs40Izz5ptwPrm6aV+1Ct2ophm",
	"Ko3+5QmZLWdTGIYytNJLLsYjF0Ss4benet6P2x/30DFmy7LXs+0fPgLgdp+j/TeaffgB7b8xracf9xBo",
	"oFzj3enuc9taKmDudp+rFUoBhqbPzsc9dKJIVi5rx/Uxi6n3ODEW9OpefihBol+VH7wuZ+zlJ5xmCdGQ",
	"Q8+2f5jufr/9/Ft7pMGH+CCXiqe3b8eZNt5CI6VZRwC959S019cxglWgkB7QPbf67hvK0Lzz5veqySdb",
	"rSWNcOLZv0dF7WjVGa06O+VDPJwTt32uYa8JMc5mtIYjTNNRLKxnqYlew/2lgK+P1y1uV9bjYeHkW33N",
	"Llc0WoEADz2dDql/GqmwUAGR4G0xi2uDnNRXCFPh0T3xbNiZhV226ocHIHaA8VZezDLoAKtOOSHBUZoG",
	"7qBW4B8ElLLTZ6l6HzQ69t4H3UhzNIZ6axnckRiQTH1/tFuRUrs9turw7oWqYfzaAHngKVVK0dLAq9W/",
	"SRAWE0Hi1vfOPXbV4Vw3b9w+FWR1ns5NSp60PuX2s/+iWwkafo44YySywmZx2M19L4+PDl7aByGM9LpF",
	"+WZ42ozaPOHrYVjswxfhse1ndPhis4FrQK1swp+0Hbq+7NQkqrH39RSLJQnA5qTQqZv7IPVqUFyVyVBK",
	"1IrH1VvjS/zvGQGhGKR7LSWuj4kkqilQ1/ccWGL7bg81YRRUrfvVMPZiU9cj4GplEHjYe1ib2SJ/E+Xt",
	"74O3cFIuorYTS0Sr2F9sp3kSNySfRnVZkM5yolshnF17vx7t7BirRznXAcPCRxlLWdVUlU6975l0gulA",
	"dVFwwcUUwa/FvMGv5WJaPnsrLAD2mi5ItI4S8gvn5w5ObsM/kQUXvgpnf6GI8P5tGhyTOed+i/KHTUBR",
	"WUpj6kCb+mpah/EX2DaOt2YPOCHjcPmt6iNkfpejoPngHkHeSQzy/7FqhdHZ53Nz9plu9hy3PsDX9hIy",
	"4747CTsF+V+R+TS3CKyAaUHvTgrWr/VNToPmxdPKINDICrpiWGCBGbdzU9cRMd6dDN5CTahw2whjtP7y",
	"gi5b3XFi+FYfyyhFkVzh53/7fg8/m81mT4eCpjppO6AKM8hG4CoIWB9PFmX5sNtdXYfhj6aTmMrzm/RP",
	"ScqH4ldohLp7QZZPikHt6oaCtsW+qBFBUxarMzHE1ADb0PhmWNM/sbABWgeCKhrh5NoBTqGF+vFTza/l",
	"5KGv3oJCn90iQ998o6ynw2shSzWihDv04KX6ov1N9VsNfljrEZSBFzZqiddy85rvKLN2sOFzB81ujen5",
	"QObAPgFGtWcQO8DM6VEr19SaOOwurE/m8D3ULCuhDci1VCSNWzQQ5iM4l7moLbuk5j0Ao9IRVpoXlF2R",
	"RtAQZbZlZTMNpZ8xYLl1aPYCXrEpuqRqpd8y/aeWMWW+WNBPU2QCdFYkSbalWicELRM+d5PB+mF2vMSU",
	"SeV8jJI1SjiOiZkC1pTiT68JW6rVZO/5376fTuwQk73Jf/2Ot//c3/7PZ9t/3zs72/7v2dnZ2dk3H775",
	"t9DD1B8GZZitI57QaCAdfe/1MNfqqpVEtr06/ldfTRaW3qUXlmvpALJ9NdupBKaJUT1HKsdJ6bJ1U7Jh",
	"uQZf52rWsiFz3rQVBHABNxWxG49eU2QP9wYszgDgaHT6Tqmt4Rj0iPPBO5SqOb+/Llrav+WKllkzYE5b",
	"cC2ljR4hwVKdEMKGOOzZa2H80whzjrCWTg33ztuAfBfrrBDwTZmejWWSxnUytPDQauIGDFC2L4hNvAmd",
	"iVusdt69rqyqikeTMFr5YPQvT3EJ4WzK9ZZQ8y5KO2N4fWuSd7tWWMSXWBDQZxhvES2Zm61WfQ1u38pk",
	"1+A8T29PXXoLFqaN0gqEdaHvwLUpnEHAV7cd8UsiSPxusbgm511Zqzdr45u3kMDXKl9d+dTUDlY+V3YQ",
	"+B7gyisYHny2ixZWjWSiFmgsd/Kcxia6ntE/cpKsEY0JU3Sx7pQifd1MmADvey30Y2WcqOb1YRt3UwMn",
	"ZOH6iXOFDl9sMlSBg2b/4XW+KxD1xCHqwAnqSh8fJMU+mqtox5MGn9ZjJsugpfFtwgwvjRM40AFDByEl",
	"TZTksf5yuSLM/e5UtnOCYn7JLC+r6ZYNMmieuGt3Ypz6ep2izWaK1sVbct3+Vz1gi6+lXjJrun3LVWX4",
	"2yTHlc1ejxw3h2gjx8r6WgcBVhhds1P+AkNky7tcvVvYv3uGkuvQ4coivSkCX/1Zg51rFpvq1wY5bbeG",
	"NtgAl5zEeuksEkIUEkTlgpHYINyCqGil0a/ITwRey53yTXmT28IfB4RUeDE608Y+5oLgc43RnTuZr9GZ",
	"v66ziSdMNS6XrPNQn8Hi7Zq6F664wkmLIlB/8jy1QjMNDHGx1O9zgo5llrugU49lAVBNA5e1fv61DQep",
	"EZXnD+0IHFN5biI3mxiZYbVqMw4ICEJYI93G03LB8NUxu5kGmOND2PmYSpHDrPtJwi9xMB9PoFE1CxC5",
	"IInN1sUvSawXZzsY+iR4kuiXi8IFyQRfCiIDMspS8Dz7ad2ueUnwnCTonKyBm8yI0BcZQTcN6MIsVc6P",
	"3Yo3i4dN8af3DF9gmuhHuCWrlEnv5GGuAzoqehaI4ZL1GUiEPSBTyvZ7pqwlslqgnDXnKo6hd84gv5P7",
	"UXqWCEyeaWxrX1ARmu/mLtw+jUeb4iiyGeFmCG6361AyiS7kOUYYfN255mYurBcL0dfejj1fI2zULjmj",
	"aobK8IniR4hP3UMfpYlEkCa5wBR9TM0PJrhA/7AyP0AYBdzIUqX65B97v+9u//3D2Vn8zdN/nJ3Fv8t0",
	"9SGoUS3jpMpcbfX0kK7FttUI9fFi5ZgntsPVdLIUWbQNjDgkRtsm1/AELLv7yqluGhJYfsdiQpS4EUrW",
	"XHKjSUfCKxu0rW+WWVunWnd0VhmjIr7CqIgGQm0WINHsfru5rVqiS0OMcmvTMnA/LCkXhMKzTKCSmhUZ",
	"DkKykoli7UgdcbkiakWEnyoBrbBEc0IYcgN4Zz7nPCGYWbsOfN1vId3wlGFlgzX8CS6xrIw9zKrgevy0",
	"HpSgV7cVwdsKPNhN0hzvO9WgGQkyGGRZsnY0saELa5ETigMadLXCfo/BZlUXyEaT8X15cGfI4JkMsjU2",
	"uZDRQ/JLTYcWfv36aQB4GVHjXlQ0NO9Ho+2WdB6NYP8OuMJJESa4oeRbfvZWabIh+A9UgLBW3SmGRzve",
	"BR13uVqsgIAuqc3ebUk7lYWNfEUY0jfZe4ipDL2YLbRfQ3XYkbco7FsabuZ1MuhpKDmajehSwQpdTfuT",
	"Rvl3qZk5arZxPqhmkiNyA5rb4d+xWSKnpkTcca62SRd/uOKXVjOhSSBgHbhwYfQqocuVQgeaJPLEv6ae",
	"xNzMt67JYlRoTzYS7vdzBfmqPUE7pz3i/fvj1+503h+W+IeXeqG5NL5xmXCvyP89RvqKwOufUHZukjTA",
	"fO7t6jB0XldrUSgvAkniPXiVE7TCYNCVADj2XwuXOr9M5Wbf2OqyKpfGJNq+xtUwQ297KLntXsQa4kFD",
	"LyXOC6xwuUwfzfUAhlvAbul6fLSgCWQ/QaevT8KIbxZzTtadi/iVrDea/Jys++auI3sLVJpLHHTww0nC",
	"AMrgYlk1WvBrHrq3L32puKCqFeRl233XtB36PpdQjIwqmVjbEJgEmBHDier3F4hHHAsiCxN278bRE8dU",
	"rrhUWorcy7hQAyIWOgBULDZ48uD20lCwtia1g/Yul13/sorkaFfTySuaEOu7YUi6s0fb/JfgMpbaXFfO",
	"LWyYBboy9EExXOXn42Lsys/v3UR2hY6trd0/zhRpezmyBFOGFPmk0JP3p6+2f3iKuKinh7UjuKugsbuN",
	"ldDtXupu+qemS4N+Z02kuDK6XKEFHJhlht7kEsQXQkGXcjaBxZ1N9IrOJmZNZ5MZemGMEfCoFY18JwH4",
	"aTK1XQIB2VNjYQqDRG9vSxpj0tQzRthlgU3CBSuxPCWCRujwRX1ZgnNlVtUUhHhMOqfOiLDh4ZB3eYb+",
	"g+cgH5rFGE+hVEtzC5zShGKBeKRw4piWhGBwwvmTCO4yKz37/rvv4GyxkWcimtoOmsyF+3z3/NlTLaCq",
	"nMY7kqil/kPR6HyN5ta0goq42xk6XCAtgBYQmxq/oepm4FnQ+9QyQAkwvbywMazdMIrnkie5IoVd1F3O",
	"WqIN9JYrYriiIiMrWAl1U5BN5gTxCyIuBVWKsJY0vUR0Hhq/hPzDt35fQjbcAtWCdBF8PpprfWUdRjxD",
	"ipXb4jG4d7SXjPYSrwfgymY2EtPldu0iMGZYYV18qiqp4ecRkx9eM10exCDViKHZowr6S1VBw/keGwec",
	"NlVks81mWkjrEVp6+dTkAKPMaym2d+qq3DmfojL4cE6c9xCJ0QYORCURDW+1Q70OW+lVqdutDotOPK40",
	"vknVPUXSLGlVwbqvtdwITTfOutR6HxkR697b4Yen7ofp9tt6sTtv9LWv8uAoTmg9RQR4b5wka0RL71kP",
	"NVb4goCIAtqUyNWtaLpBmcImlysr6Dbk6c0U5sWJ3zwIMm44jW+SOGTqMGbQa1SlVhtq6CHJP42OScYL",
	"N9ugdWkB+eFrIB6SB98N7XI95KLFrfpJxiEluOYlUq7IUwi6MYnEh2Ub0UPbNsG9BpNvN/QwS6qO9XZC",
	"axRkQQRU1QQt489UVaPqbQWVANngOVNHhYjsvDR3Gk6auo0jQeYWbUkjAduQwZqLiYPQljTidemeCVNW",
	"bHPlA9surPsyuk17YFdTpnVvyTbqPvf7q5RDVQoONb184Vk5JhdUtpahEPYrhKtJr4hm53obOSOLxTdm",
	"nbb5Y08Hls+uZY/oX43NhmovYmhiyBgWOSVn6Rhfi1dadAaLg6Yltcq8lKiAD7BXHHYwYdRr6ySOiqbE",
	"ErdH5qCMtuRW1T95K92q+idreWhrtXVzH+UblFUvb8dxzqCWeuXK6B8fQTX86UTkLTivBRAN6OoN9eMa",
	"MVsjLJZ5CoxMLiHmWmEWYxGbzB5IrpnCn/Tl0TIU1EmzSlKJUlsOws0kUUYzqLK0BAfCqb5RFNB7jS6J",
	"8Goo5ywmAmE0x3KFtiOjQ/8Udge55OL8BW3RV+qPJhrFxZWY7ebShZEJUwLeEhlY6ABSl7NWklIpvDT8",
	"rhXd9OP1LuuvLOH38cpIXPWuq6vmxH6l4kRJ3Ii+fxBwyZESOdFHV9aJCdI8G6jS8niGttzAJ95iteDO",
	"KPREPkV6flCxYwXmHJJYw4t5hfUWJFZUWlMC/FosfbjOomIUCxDkDVT32CruhX8tC1AD4x6tMFsamnsD",
	"MIfV6TwL392iVEkvA9t4DT3mTS/yl9PTIxOaqylBQKrAs0ioUM11Sb7/zhnJkOBc2TLeAeZLyksu4jYG",
	"zHw13gu5WhlrUXNdhRtxMV7IhnxOM6M2+o2IIuAtYFM+p5nlu10VwAuvQ9glWiVyEDBOX58YXweoFjZ0",
	"6Xr0c7IePvo5WQ8fnJ+3JYmBT7cD/fYqjae2OiPwiX1z9XMGk5ZiPQ2ytFIqGyjdMLOSYfKNpgpHQTLS",
	"K9Ao7gk0zoRdxEvbfAuwFEn0vSz5uy474CbiiGiKI06awLam6ppFqENQMYnDQpsXhTn+/fFrW4uTp5rk",
	"L5QNRJhjCV9n6FChCDPLxhD0R04gmlTglChQ1ufRCmG5h84mO5oi7ii+45S+/4DWP0LrIQbKishTHN/9",
	"SznuRrbR9WuqJlaVJ2FYnauhpf0GqzTg1sK5cxThJNHvZpRwZqTU4E2COskmhrrlTunxzH0zrCBniUn3",
	"4bpq9hfqq5VFQQtJGL2XYEEAJyF9wd3NNAwwyEnwdtlVO35zvnYH7DKK6rPQTDWshEjLR4OZfkWSzNAy",
	"sE8VOyoSJSmVFcaKjdQ6U/9cQzfmMMVLP5Oao4ZNStiSL/bYp4GOIkEdFpvsNVAfBWU4Oh/kq9SeD7e1",
	"TFtz4Sb/UEduRMNT6jsHbkrNeiaD2ca2jJV3SxLsDkNg6iyFN7Byz+bLnE4kzDZUL1iuEpmOvQrB66sA",
	"zQQD9X7DAFKuOTiAzHDUMQp87h0qfPLl8FMPQr2WD9u7PKTQ1anah0LoA8kKnLnJ2uvhN/MQ8wsQ7K0z",
	"Tml1RuYGyDwpM5O+NiEWxjquolUpuNpKzG9fkHiGXqaZWu+wPElqs9sKgYhxtaJs2ZIo1Ru1D5vf1NtD",
	"0oRipTcKK0lxpjf+1zlZT0HZc2W0PeGwkObBOCtu0Eivv3gphJ39zUrHa6ZWRNHIS3VdSKK+PkiTRnMc",
	"F1hQnsvCjAXLkDO07yXMxWsjysLTasvk/lVa9KbILewqaHZSlOUBBHmD16CVJMqqjkx9dv1vjBKaUuUo",
	"dZkuAih1wQ3bsvleaX0vgocICGUFf0OAUJFowtxQo4ajEvEM/5GTwnPDPfGKm1rmrjx1Eb9qH0LPuwAb",
	"CxzY5ag0747iepmCkgvDVDDySTlcKVNeFOA+MGAySZAiziSVwPjDWHpZ1kHBGoWIA5ndaVUq0ft2agdI",
	"5SLAj5AhjBbk0ilnzZlmUN2kQFo4cedWY5igaq4mozuEfbqjtaB0LokmN15kchuoEtLWjkwF5EWQGWeS",
	"TFHOEs2arXlu1iNIRGgBSit8gqc+Q6THExq8mTFllC0PFUkPNMXsqysn87nUB8uUvVx2nQD4stKcBr+V",
	"Q2LTxB202wo4khY93WVx7FJsCRp4kYJu1VE2cDet3/NiH25REuUmCRfcUwNIPYwDekIWCuUMkIfFiKda",
	"FCy0ypIIihP6p1FeVBYK52gMB+iJ9f2ckwhrZpjCZ7A8r3IG2ldefgUQWK97yOcGjZ6W+xHEgs7cwPqe",
	"zEYKZfO1duJcgHgSg/SIGbrYne3+DcXcOPUS5c1hbjnVIjWkpZaeyFu/N3pn3xCpaAoixDcG2+if1nYf",
	"8SSxxcKQCTgpfMf0vIIApWwb20gSQA1EobXH0bA0WaE3o/acNVm/oObI5AC2KYl86mmffJPnEHyk2lNH",
	"ctGj2S0D5IGAwCtr33Dn+X7IJtPJW67gz5ef9OM0mU5ecCLfcgX/DnrDG4e6ln1Z5t+0KZKUb5JGqcZV",
	"aRB6m/7QBPuADO2lSn64k139cE2qpUPTdbcpjbyBSg+3nzVM79jz42nstfymkafKmWhpP9PPitTIHORO",
	"DLG1RBayQLnnERgD29bIcAFPUca4KjOfX5N5KxsDdjZTYDcwD9ZDOTulKZEKp1lHOgyThBz8GC/1E22i",
	"ZobnwIhJQq4zl6Ws0H2T+ZaEEdGiId9H5tmMimer4sWJnbU5QuUoZbY9U7rQ+MehI57lCfayyRq5boaO",
	"CY63NdM5MH3gjUPC3xjO3TqnQp42wyMbGgLaSsx8FpGLJWb6VdDtNBe65EL/84mMeGZ+NeT0acHrTa6t",
	"U7TOykFafMlIUIrzvGixQvwSHB3AG9r8rqUCdAZOoTt6rrOJrT3fVkPX5xCDVkfLT1sgwrQ2XbLLyWuY",
	"1i3peU+XZYlKp+xhqv4jTR29lFwFSd1AO9prnfTS9fnvFo5NCF2WGBndBNMF36qwUXEf/Z+Td2/REQdI",
	"gFmxTQ2at1wQw13rNzYGbt+uZtZ4v3jW5btTf0SOiIgIU0GlYPnN8X/2sM3NqVKCrGxsWlWQ+b+e7D57",
	"9v/ABeQfvz/b/vuHp/8rmKDu2FaxrVevGfyieR1fWt+Oq+kwBdk+q2g3daPZrTqotGpprz5cfZg2NLJB",
	"SNRqnRVlgi0FWmyXkoisJPs0KBcub11eDzdrV42jZpsbLcqWDNy0yonP/FXKWCuOYpIlfL1BqZ/wpdug",
	"ZNJpoVDNa9wwEN7DJSscAtpoblSWZR5UQgQaw9NWLTjc37lSoviahZg2K2pd3AhXmiEjUefDM1Z4+rwr",
	"PD1craZNa55XrJYBWlZ+dY+cn+ldVLxpHT+wpMra5II8wHGHEb7iA+zFuv5MlW+Q1wdlPRF8i+EYNTfG",
	"v47xrzslEm0WBOv1u91I2HLgcDhs9Xs1Jrb4RscY988gMlbUjmMgK1FQ/DFI9ksNkq1RnQ4kb9R/rYoG",
	"VaZimOxYj1jrdTb3fcj6Gp/IVdm2Z+stsZT1FpsFVFYhcsOAxupg95v6z8kU+wkR6tiWdqoVj/J30GTq",
	"V3mK2XZRV6kWewwuWHrscJ7NvE2N66olFDwuTU1SGc+lBl8QgZfElOsAi/ncmrvnZKGRHiambDlDr+A8",
	"97pji/qjhroihs7O4n9vL2SQdaitTk1aH6eN4gu7I2P4EnS51IQyBEmj4TaOTxdkSEXOynmf2E7hUlRu",
	"RO+YKvuoKoB6L1dlskCyNPO1cWecCBMs0w1184blBWtdSzlwaxNvxtY2Zinepp2UrrdK9VZTypxVMsVZ",
	"ZjN6HRy9b0Xyo/che5cpvtMqibYU5nHmt1ZjXqtx7qogcOu3oIecWKWB86sd9iC07KaP1Hetq0cmb4HE",
	"VeCUOiv2hasP4UpMbI0JdtS0Sy0EjZDQrWbonXNhMr9m4HBkUYIWpWc2VhWVZD1UjMc7xtZS+hUFVlVh",
	"1PS+xGmWULY81Cx2sNxAQdbnRF0SwgqVGHTVgLgHSl0EdnbEdFYyF3pwmvpnG9hxFxk8WbMgF1Z+rddl",
	"8bxVwb3N+kwZx2FIquCpYBQ38Q/g4WUPDMQsWqgZR1FtVMeM6pgdH+U2Vch4PW9bJVMO7ZQyI74+sGrF",
	"dl6zaOOnF6j9qFz5cpUrNRrS+bAHjM76EX8inxbPtk373aVZ6EkHY1IzNeK+KWtElx1CzSbXYmqLO7oO",
	"JdorTJnxrg9xFMZqx7i+Oq431Tj9EkcrGwlTHco4WbkB9IJ9tqYbV+83UnRIShvnLlaktmlC+q4y2gTe",
	"oe77dw0dl9//hloufD1S2pmexil7DniaUtXmRAyu7roBWmFpczVcYgnn3xJ85Qb+ucPLsBjccyIMjD3E",
	"Z3oTZZ1JIWb9WIh19A5IWQWhsZU4jKtfkcNNC0ZeXsOGeqIm7kslsCLL9XBZH5Iinlg/TNDQVi9PMWI4",
	"Ss+WtXWtLOr2I1MxbAfwSnt+DVv8z07r6FZii/XXE9DV9aSQLsw4AZyWyZM6dRR5me4jbh7rgASM9ctw",
	"BecZKj7coytpdIF4eQhQPl0JIlc8ifuG8Zzzgi4VJ3J1S/k/Tk5+6Ur/kQl6gRX5layPsJTZSmBJ2vN4",
	"mO9GoyBXR0XfzyN9R2VJvWk27M4BQMMzbbQc1jWD+qV/zD12nDsK6dfbr7mouAD/rsD+rpD2clch8tL2",
	"CtuXlxqFjsoFs6y9vm0RTlyBr5izLZdPA5nAPs8xe2BJjiHWmPKJN9KDcyVuYbqwDJt9UhytKCOtU12u",
	"1rUJbJlyvYazyStMk1yQsny9Cf6isox/JGmm1jZeC8K9qjxLGTW5j45hmShKsDDe3M4XyW4WyjPNcw1l",
	"YgLH+AURgsYE0bBlSnYfp3N8L4CH3kH46R46m5wYoukKbRQ7vXNhSWYk2sYs3rYgHYbmpzYdbatqodag",
	"qqP0HeSLXL2jqnFUNY6qRuhRQ57NtI31zrercKyNHnYECzSqeoPVGoxmhodXW4aOZJC8XX8KRu3ll6q9",
	"DJGlPtxvOIlV3n4bKNHOAizCZZROnUCNLldcevn+Lb4vwPeF9/PqZvwhmy1o77AILT/h//Svmzp7bZjd",
	"qVMFZm/18FL3BXAvsTT6K4cYA2NvN9FXNSLEguewmU6y2IC9ezM4X5qS/+Qu15bL2f6aG4+d2ho0TP7U",
	"EmAR+ymk9S2A2Q733+67eMH945f7O6/fHeyfHr57O0WXIIroH6s8sMk3AhX9BOIRwcy8Ia5nkeAasltj",
	"oWiUJ1ggSW1hXGqVh1gQPDXVYz+BPwTah/pmeOctufzv/+DifIpe5vr+7RxhQZ3bSM5wOqfLnOcSfbsd",
	"rbDAESQtdHutlZZDT84mP785PZtM0dnk/enB2eRpkDwZTdZJtCKxdQysqxnLF1vaVi5JJtfHGNnrJf0U",
	"P4qmJvNzjHhmFArIphoP8A69GrQDUc1NDLyVUD8LHJEXnnvhUC2c8i5T51vp2jVocogI6Ub6drvMQziC",
	"jZEU02SyN1EEp/97ASVBI5XMKJ+40GtA5Fqx0FOC04nVfUzcu1Xp3Qgg/706xIcn3nO3yueziKflCOXf",
	"ntpH3Zbx0GcbEy1lY3DN8Sp98IWh4oCnJF6WdVpsXhgqIFN2wnEsZ2f6vUpoRJhRy9m97mc4WhH0fPas",
	"sb3Ly8sZhs8zLpY7tq/ceX148PLtycvt57Nns5VKE3OESl/XSQ1s+0eHk+nkwrGik4tdnGQrvGtThjCc",
	"0cne5NvZs9muNb3AFdQP+87F7g7O1WqnDKdchh6zn0mj0HHFk3pWJOqgnB3Gesu5clolCCaElD0w7/Nn",
	"z2rlRr2o0Z3/sWoZcx37Lqs3C1zFWn6MXzUIvtv9IcCf52DhK8tnkNhoEfBSBopNf9DfKgCzWSVJK8h+",
	"sw0g2LcKOkiyFAaZ6wUH5fKuwkseSI4dGFVLAG5p8BbrxiuCYyJK1NtvVNIugF1/Fj+ED6+2GJgZpgWA",
	"P9tta0NZ2WrwsUwnf7vFK2OqAQduy6GVlgyX7poNuxJ+LWW6ZJQtHb9u9pgQFXxnIAuUV8z5xHS22RWq",
	"huPqZTF9W7vKu8S6Ql5vwzhzAe72uN4zWwP6T2Jv3bd3P+krLuY0jgkzt/IeZrS1x9+zQi9cuZStFw9c",
	"toOECaTpa9053bPzxnWSLMhUYvmioqGmVya7pfOUgFK3hUhs8317CQStuAEj6AEgSZGJllb1RlsuY96W",
	"zXlm1fSZIBeQhLGaUM7RS1hQSS6LjIpdhHIaytdj03oZx1UlaKTKPHDghmUT/bm0SyYdDxUmSZis1v4l",
	"F0Ssi2ycoYUmlQyj97dagK2cOkYc0tbZrF0axOcEbf24NUVbP+r/Q4Gaf/lxyxWPPpuck/Xuj3Buu9Nz",
	"sn7+L+Yfzy37HtopzHi9nfpFfvz8f+biFZv0sxKWGQdPywyQkOTJpLtrv2iV7oguqrccKkybQWupHaGS",
	"3YqwRhWhEnHAS9pLpggQar0ZNIVI+RJOvgfHt89DHhwf7vAFaaUioKzteFjugQ/4CcfIpTcaH7PP5zHL",
	"eEiPf2BSjOMBL1rzQTOdW3tOjABMpPqJx+u7v/wGZKXMrUROrh4CC9sx8PktYsNG05ujis0anj/MGvaj",
	"iGTFIn64PXxhgidJSpjqmjwRBMdryFIglCMTIz38SunhIOFz5y/9/l91yaDm9yr9RBYVUEkHNxI+hygv",
	"fK/mftJtcolBsUXH4diKXJbBsRn4q7TzGoqNh6KrXwlWfffsu7uf8S1Xr3jO4kcso2tSb+TfgvmPOrCt",
	"ip3HBMf3jJtLW7j6xog5neSM/pETm2wZOKARV0dc/UxEEKyicMGcaHVNEQT63jO2ZkVi9tt6SIcKSdsw",
	"9b9vdpaVhMNXVkYaRSJfJBoFgS+HDH737O93P+EBZ4uEGjeiR0B38yCPBHm3a2zSwQZsEvS/Z9prHEce",
	"hPiOGqqRHI/keCTH96h52sFZJniRMalNBcXW16biLwhbP2JF1CjvjpRlpCw9Nj5DRK7P6e2b/vdMJtyq",
	"wbeUrb9YxfXI6owEaRP6AM6DVbL0UN6dj4rZsn7nAxxKTWBPv/foCzvi6Cr6NViTzf3p8Qvtvzq6WXlx",
	"Ro/P0ePzc/f43EcLmtibF9yni+ix1TArF8p0tbUzcwmpZzY8JNPzFQxUWfnwurijE+s1nVhv99pD0c9N",
	"j99UCt3wxto0SWiR4CVUxjdVek3OQg2yNMViXY29lTP0Tw1uOE+OQJCwefvs2cFxV9IfAsW1g3lRqjYA",
	"E24FrH/LYHGF3myVB1kPxITC01t2YD3UFmQeE3kryfXahmBVpI26U/nHvGujD/L9cUlvuXI54D9DPqnH",
	"5bjGLLX5F5tmd+RMbAcfZJfZvZNZRyvIQ6gGHkhS/4zQsykaD3B3feHcXXtx1xeRN1UQ1gZ/XN6r7bg9",
	"mgO+dPe3Ph0B5AHox51jguNbw5xb8y0d0WZEm7tnGbtdRHtRBxreGu6Mnp43wNeRex0NW18Ou9ziRWly",
	"YQ171MFf8tZo06PwhNxEvL4/2jSK8iMxHInhXegOdiLOJE/a03o5Tx/Ijqhb6j+ZrVHRJJnQ+MCOeXOa",
	"GTnVY3Nym0v0cYhJDiKjtDQi/2eE/DGBmkrS5fQOckxFRtDS8mYUfF7fpjKx/HiLKsVy0EfBRvlQ+NxY",
	"qpHDGVVC90xtBGExgcvfkXXV2O9NwymSJFlsWwM+iR31kY1y3gPEuZ+JOrbjeonAb0VdW1l06yJvi2RN",
	"W2vYnTN+yYqF/OYya4cdEKDxcbXt5KG4pMDJdAiD3zWvzluO3EJGQjNyUw9C38paMJ3UzU+Dv4FlyXoW",
	"j/alUWL6quxLHUrca2CTp9K9NYQaFbujFDISjs/2lSZFtkmTZN/zmmr3+WCoTFJpCi40qUm9xSakxAZL",
	"dkR1PoY3ugGBEdG/XERHnxWml1gdDB5sfB4SR9jIS9sfUtjoMkYXfh3RhaH71xVouNHd0j2CN2sMPxzD",
	"D8eCE2PBic1TrI9BXuNjVXusuqO9WMeT1Rb51UzsfzfKjJYCAvcXDzaogkGlhMNYPWGMT/siDSMbC2Ib",
	"RK1tRoNaJLJNNbztUz6uuLZBdGK0pXzpKtENBNWG5rMf544Jju8Y4x6JvXJEtxHd2lntrlCUTTEObJh3",
	"jHSPwqZ5TTHgQXD+IaWPkfEfXbC+YkmjkpQ7rPTYr+auDdLkWVue3TsgxXecTvceSPG+g/lDk+TqQkbl",
	"5xdOHp8/vw+4ZoJHREpNol4yRdV6zOt7A/q8uePsLQip13P/G0XVkU59vaLqDbEwLLjeBSKO4utIB0Y6",
	"cDvv9iIhZJD73CvdsN9l7pUZb3ST+xo8D+Dy9LjG9d4b3aq4NaML3OgCN7rAjenqHzBd/aFNTq9XVR6v",
	"q6pAGSI4WiEgfW2z4tiGdcoDnjP1cCngga6OzoHjE92f/r36Trf5AEKrO/L7M2Pfs6+fN+loYRtd6x4A",
	"MxvC2M5f8OfVjiJplmClXzlJOZPdZWdtKviIJ4nNoaZ5WDsEKsYIi22ntt1vZbNehQ28rY5RbkzUop5Z",
	"eATk4XWloyz5WGRJ4A/7b7PmdT7juzwdRdpRpB1F2jGqK0Q5a3RrFNvG13AD5nBA4EXBI9YfuGFM4Y3f",
	"0bt7Ruv2w4Ezf1Z2+zq0R2vdV2it6+GCBcGxYQGL968Xl48JjkdMHjF5xOTP5QUfXtevTynr2dw3dbGp",
	"Dv24gh9blbYjWj366ITPVU3bWUOwD0/1G3xLWHqLXqitps+2ktxOgh9o/Dwxgzyw+XOkE183I91Tw7AP",
	"daHdLeHuWMDw+qg6qrtGNuKLsfn2lS/s5yfA2/6WyNKj8KffwDvk3qjS6IgyUsFRmLpFpUhfsCDoP8sY",
	"paom1FHDFtHrepFIdyqAjbLPKPvcP5chDPOwMR6VLMdtodLIeIzYO2Jv/xspSMYlVVxQMiRU79g1X/fH",
	"6x37Q4+ell+Db0lxm9Y9oXvD7pFuWrtFYxTf6PI4ujyOLo8DKoM6CjN6O44vknuReiLVAs9SW7ha2fSO",
	"Yta8Ce45cK0+86g0HKPXHgplW0SVTTydBiF1TWRZb6qBCEzyuByfupF+1A186bqBIaKb8UgahE/HBMe3",
	"jk2PRD8+otKISj7P2e0lNAidrL/MLePT6DR0Qxwe2d/RZv6IbeZ1QtXpODTw2QdT3q1TqkdhzttUYr9f",
	"ajVqCEYSOZLI21NGWKvVmkXDDKem/cmaRUNMp2Xr0Xb6tWiqyxvVaz0ddpmM/bRsO9pPR/vpaD/9grOg",
	"1rnp8vXSd2ZBE70st7d561qEz74/lA6tJFujAXd8FstnsdeEG3gb2424lcfxboRCb4p7N+TW5x4FtdGU",
	"+3DI2yY/bWbNHYTfTTlqc01UYKLHZtPtxv/RFPXlm6KGCJXOrjsIs4xl9w7w6tFYd0ekGpGqypL2WXgH",
	"IZY1b94BZo123htj88gdj2aMR23GqJOsHlvvQFbAWnvvgGY9EovvpsL9fVOuUZ0wEsyRYN5cc3E1nRir",
	"giFquUgme5OdiSYstkud0r1zpFKiBRdIXxvClN3FzEtqV/kwaSr1vYE4QwdEKLrQrckJXTLKlvU6ttIb",
	"PCpbS9NaFAjTPY9JtBcc1KTs6x2hvdKuP1iziGjfuIGyj5UkwX3922JPm8aP/pHa7LDFWN4tuvpw9f8D",
	"AAD//4WBZNEK3wEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
