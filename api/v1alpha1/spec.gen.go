// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"s/IBAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
