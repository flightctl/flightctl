// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
