// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
