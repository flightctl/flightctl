// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+y9CXPctpYo/FcwPVNlO9NqWc5SuapK3U+R7URfvOhJcm7NRH5jNInuxogEGACU3Enp",
	"v7/CAUCCJLi01JK8sG7VjdXEenBwcPbz9yTiacYZYUpO9v+eyGhFUgz/PMiyhEZYUc5esMvfsYBfM8Ez",
	"IhQl8BcpP+A4protTo4rTdQ6I5P9iVSCsuXkejqJiYwEzXTbyf7kBbukgrOUMIUusaB4nhB0QdY7lzjJ",
	"CcowFXKKKPtfEikSozjXwyCRM0VTMkNnK2iNMIuR6UFwtEJpLhWaEzQn6ooQhvagwbPvv0XRCgscKSLk",
	"bDJ1i+NzPfzk+rrxy9QHw2lGIthqkrxdTPb/+HvyH4IsJvuTf98tobhrQbgbgN/1tA5AhlOi/1sFit6V",
	"/oL4AqkVQbgcatDW4CepsFDoiqoVwighShGBuEAsT+dEeJt3JxPY/N8TzsiArR6leEm8/R4LfkljIibX",
	"76/f98BUYZXLM2hRB4P5poGAkaRsmVQhwRkAJyaXNCJ6Q4Tl6WT/j8mxIBmGTU31GEKZf57kjJl/vRCC",
	"i8l08o5dMH7FJtPJIU+zhCgST97XATOdfNzRI+9cYqEPReopGjvw52x89BbR+FauqvHJLbPxoVx345O3",
	"kSqg5WmeplisBwI8SXxYy3Zg/0pwolbryXTynCwFjkkcAPDGQK2utpyjtYk3eWubADyrDYrlatDlanXI",
	"2YIum3DS31AEHzUoqlca52oVBi9003AI3L4p9Ht38qql27uTV+E7K8ifORUk1gAspi5HC12/n7GKVs15",
	"4GdENfVAJCFAkilDc/hZkj9zwszRV/eb0JSqMA1L8Uea5qmlOZr6ZEREhCm8BNpmsEkixVGexVgRPZ9G",
	"M5hTTzWM/hwXowLRSinT007294rNU6bI0hCk6USShESKC73ormFf4TlJTl1j3TGPIiLl2UoQueJJ3DeA",
	"v67rtoM4tZBtORD3GcVkQZkG1oqghEqlAQhwMgCcE0Q+kijXryRlHeclW+c7qI5rZoRHHR5Lqkgq+7Zs",
	"cOt6qg/hyHQoTwELgdcASCWwIst132gnPEl4rk5d8zrCF+OE0PxQ73mhLzo5pUtNZE/01mUAWVubIkEy",
	"QaReFMJI2B8XXMCTtGQkRlHZFy0ET+GADg8ChCGjvxMhYcYG6I+P7LfKOV+a30iMDEQMQ0BluSz7FC70",
	"pTVbn6FTInRHJFc8T2JNqC6J0FuJ+JLRv4rRAG8AnbDS29KXRDCcGE5qClxEitdIED0uypk3AjSRM/Sa",
	"C31rF3wfrZTK5P7u7pKq2cWPcka5PtI0Z1StdyPOlKDzXHEhd2NySZJdSZc7WEQrqkikckF2cUZ3YLHM",
	"4Fwa/7sgkuciIjJIMi8oi5uw/I2yGMgYMi0tY1iATP+kd33y4vQMuQkMWA0EvUMvgakBQdmCCNOyOGnC",
	"4oxTpuCPKKGaasp8nlIlHb5oOM/QIWaMA+tmaF08Q0cMHeKUJIdYkjsHpYae3NEgCwMzJQrHWOG+O/kW",
	"YPSaKAw32fLEXT1abxcw1EAO9Ot782FM98ZrWN43iyreJu3KN6Ibr+hGtEM3N3joyGpr05FY3D2xKJ6v",
	"KjBfDTmbQU9f+3tz3XwBR9L1AKRLn7UhXJuRCnP8G9EKpyuonu+/BM4yIhAWPGcxwiiXROxEgmigosPT",
	"kylKeUwSEmuB6yKfE8GIIhJRDsDEGZ15/IacXe7NOpfQJCzkY0aFERhJxFkcuBK2v1G3FDTjEic0pmoN",
	"3A9gTDmxnmbBRYqV4bW/fTZpst7TCfmoBO5SFhX3rHHE9ftT0yLpgRFWBrmIdIoTDV6kVlghB2NgzjSc",
	"M57lCfw0X8OvB8dHSMKN0bCH9nrnmq7RNM0VnickoDMyiBTkKs9AkpHkh+92CIt4TGJ0/OJ1+e/fDk//",
	"fe+pXs4MvXac/Iog/TLNCl6TkgQ4euzjQxfDaqhC5Ujma0VCFwdYWPEmqIQ6YrFBMliTKHDC9DEEH0jV",
	"nzlO6IKSGHRWwQua0wCxe3f0/B7OyVuExEsSQPd38DtAXW8DqC+BN+GCrJHp5e3fiqhUyrzK/Vceil4E",
	"1lsOa//eeJq/ewBMjRQ6bK4gx2akr+Dm2hAKZ5nglzjZjQmjONldYJrkgiBZ6J+KXerV61cDUyZb4I6o",
	"ZmjWiHykUskmxfOahu+oHbIpz01LwCGuZfAC5oNulyavRnwOcI3FN6Nn0yfL/Zs2Q78xfsVQ5DUUBB0A",
	"6Eg8Rc8Jo/q/GkIvMU3MooZxKm7MJmLWsMHbQhAHioHaN1geX0wUpomEB4QzgrC+csodd5QLARyI0mfq",
	"eFeN1CceSavpnrBUZwIzCTOd0TZlum6HFE2JmalYmir6ktjwRXpdFg0VR5hxtTLa8uK0NQO0o8cKcyJS",
	"04vmKn7NU8yQIDgGbLLtEDV3QvN1Djp4znNlV1wsL0jQ+Byue/wLYcS80+HdzxwrM1sWLQ1RqULjCkug",
	"fPrNilGemWn9d/2H74LvuiBYBgUV9HguKFk8QaZFyTq4OR/JQTsdKCC6UZ1A6EYa2A1Up/UboIw+1a5g",
	"GkK5AgDl+XdeljYCeVohfwWMpoCUfIHOhBa0XuJEkimyumpfFa+/T6YTaLCx8r22OjtW7Vc3dO1nX29e",
	"hWYTH9cZ7KXEOupLEt5uHKUzCnv3T0P1YJea5OmPoJOl84TU/3B04xgLCU1P1yyCf7y9JCLBWUbZ0ul3",
	"9dn+rllc3dGoHY/YseBLQaT+9k5LPtamlJHINX2dJ4pmCXl7xQiM8Rx02s+JFnqo1CKF7jTsDF4wwZMk",
	"JUzZp9TbeOtzO6RNAbXWFgU4T0jGJVVcrIOw1CBs/dAAuP+xAP7LhBDVcgLwzcEW/gidhYGxdyLmB/9c",
	"zC9DT8fg7YIuneXSiW/D7A+/UBXofj3t7vVbwc6fkkgQtVHnI5ZQRm4w669KZaFuAIMsdyf2mjONBJuZ",
	"vEOdzcCCsxcfM318YWZBcIZI0QCZNweeCz12nCeg+aApkbNzpt8024JK9OEbZP/3YR/toNeUaQlwH334",
	"5gNKrVT1dOf7f8zQDvqV56Lx6dm3+tNzvNZ06TVnalVtsbfz7Z5uEfy098zr/C9CLuqj/zA7Z6d5lnGh",
	"WXXNvGCN63qpH/SKneCnOVij7XlMZsvZFIahDK30kovxyCURa/jtiZ73w86HfXSC2bLs9XTnxw8AuL1n",
	"6OC1ZmJ+RAevTevph30E+i7XeG+698y2lgo4yb1naoVSgKHps/thH50qkpXL2nV9zGLqPU6Npb66lx9L",
	"kOi37Uevyzl78RGnWUI05NDTnR+nez/sPPvWHmmQHTjMpeLp9lF12niRjUxoHQ70nlPTXqNjBKtAIa2j",
	"e/Q17huS08R583vVwJSt1pJGOPHs7KNaeLQhjTak3fKFHy4P2D43sA6F2HczWsPhpukUF9bq1ATAFveu",
	"IFR1p3WLl5j1rFg4KVuj2dWKRivQFkBPp7HqnwZcxgKCyZtiFtcGOdmzEOnCo3tC4rAzC7uG1Q8PQOwA",
	"4628mGXQAVadf0LiqzQN3EGtwA8JKGWnb1QVH/R17MUH3UhzNIZ6K0wTR2JAPvb93rYiK3d7hjX9LHqg",
	"ajjKNkAeeqqdUsA18Gr1oxKExUSQuPW9c49ddTjXzRu3T+FZnadzk5InrU+5/ey/6FaOh58jzhiJrMhb",
	"HHbIPwd44KPn4RtvP6Oj5742pTZDGDFMz9ceja7he2GVKWZxFNHREL1uqxn/qeKhG2EGz5I0ikzwG8IJ",
	"/cto3JSV+hURKWU4mRZrNp5LutsUERX1H1d9F1MPYO1H50t8zY27wazuDTtciqtyYqGabZyZwmJJ1LD3",
	"yF/KGfQL653MkMO25I2z38LDWm4wJlLP0NhaStSKx9W75Gtj3jECygnQvGhpfX1CZGV9XYqNrhV7I3c1",
	"q85aQOFIPzCCqlYibolbjfZQ162541sSb4NCBeEuJ9oK2Q5u2m7xZpS7Y6weBWUHDAtPbCxlVVtXui6/",
	"Y9KJxRthUW3BxRTBr8W8wa/lYlo+eyssAAZeoWFXoNKBMqZSURYplOjWcoquVkTY4ASqSKplC4MzisQI",
	"S3Q+KUjq+WR2rtdEjFisd07KKImfMsHjHKg8cD5LytlPudwhWKqdPY1ZlIif5ji6IAwAO9wkafdHFyRa",
	"Rwn5lfMLhwfuQH8mCy58zdvBQhHh/W0anJA5536L8odNjrqylMbUgTb11bQO4y+wbRxvzU3g3IjVSVzv",
	"rdKZ+uB27ltTmdpeb0ZeQoO00ZWCS2iBWPkWuWtrFOb2gld1utVfNqQxtVXX6UTtc2UVge+hpfU0q1Kc",
	"ILEpv1WdDM3vctQdPbhLoXcSg8zyVlM4egt+at6C04lVBAw7QcdEbc/N0Iz7Voa9Cv2vyHya2wtspAj0",
	"9rQQFlsZ3TTot3BWGQQaWd2VGBaTZMbt3NRNntK3p4O3UNMTuG2Eb7T+8pwuW/35YvhWH8vYOZBc4Wff",
	"/7CPn85msydDQVOdtB1QhS11I3AVBKxP0ImyfBh2V9dhuILpJKby4jb9U5LyofcrNELdbynLJ8WgdnVD",
	"QdviuGDVGNKqQQ0xNcA2NL4ZEfkvLOyDfyioohFObhwbGVqoH3rZ/FpOHvrqLSj02S0y9M339vDU8i1k",
	"qUaUcIdpq9RItr+pfqvBD2s9hjvwwkYtoZ5uXvMdZdZmLjfxtWua6APuzFUWcWNNEviDDeQw7DtiVP6G",
	"OgQ4Qr20Cq5b06cFhfUMHw6ImsU1BAW5loqkcYvi03wEF1cXNWqX1EQmMDYfa+laMNklqENDlNmWlc00",
	"jAHGsO3WoXkUeAqnJsieC/ivlspkvljQj1NkwgRXJEl2pFonBC0TPneTwfphdrzElEnlPCCTNUo4jomZ",
	"AtaU4o+vCFuq1WT/2fc/TCd2iMn+5P/+gXf+Otj576c7/9g/P9/5n9n5+fn5N++/+Y/Q69Zw9WzQQ8Ox",
	"HfOERgOJ8Tuvh0Gr61Y62/Z0+V999XlY3pVeWgBLTJDtq3lXJTBNjEkqUjlOSofS29Iey3r4tphS1N6A",
	"w2/aEAN3ATcNNBuPXjNwDXdJLs4A4Ghsfc7YpeEY9Nf1wXtbN2SfIPdvuWJ90lyc0+PdSJ2qR0iwVKeE",
	"sCHuxBYtjPcsYc4d39Kp4b7Dha7jRuqZDR+Aok/lCdiU99pYNGogpKGmR1b7NWCAsn1BruJNKFXc4g/g",
	"3YzKqqo3cRK+mD4YffQr0BjOplxvCTUP1XwMaOdVb26z9nB1hUV8hQUBFYvxSaNsaZ+2qkfT9m3Zdg3O",
	"y357ZpEt2LE3SpIStnm8Bc/McD4UX+18zK+IIPHbxeKGwkBlrd6sjW/eQgJfq6x+5VNTS175XNlB4HtA",
	"UKjc9iATULSwmi0TiUVjuZvnNDa5Qhj9MyfJGtGYMEUX607BFi8JU62KT03OD5aQfco0Cedm8VROLWN4",
	"LfTzadw95/WlNUbWAA6Z+n/mXKGj55sMVdxjA8PwOt8Wl/3UXfaBE9R1WT5Iin00VzGtHkD71Wswkj2W",
	"7AxaGqdMzPDSxNAAaTFkFvKGRUke6y9XK8Lc704xPSco5lfMMtuaFNpQrCYSuXanxhu594k2mylaF0/V",
	"Tftf94AtvpESzaxp+0bvyvDbpPCVzd6MwjeH2MAcVQKssEVlZ/w5hvi/t7l6u7D/9myQNyHtlUV6UwS+",
	"+rMGO9eModWvDQrtyxo9nIXL3uRcgxJCFBJE5YKR2Fy4BVHRSl+/IoEbxHR0CmAlJrdFiQ+ISIvJAueJ",
	"muz/3YgVP0BzQfCFvtGdO5mv0bm/rvNJ07BaIpess2WfwOLtmroXrrjCSYu6U3/yXExDMw2MELTU71OC",
	"juXFu6BTd8kCUE0DyFo//9qGg9SIyouHjmCIqbwwAe7NG5lhtWozgQiI11oj3cZTw8Hw1TG7eQiY4304",
	"aoJKkcOsP+ex9a2r8Yu1FtUEaeSSJDaRIb8isV6WbW0okzBhZZrJpAxlNrasCYal4Hn287pdKQQOPuiC",
	"rIE1zYgAF0nopkFcmN3K+eew3IqWxNPnPf7jYOe/8c5fT3f+8f6PneLf/7M7e//Nk396Hwdo+EBx+I7h",
	"S0wT/Wa3ZOkz6fK8i+7OCBU9i3vkErAa8IFusiPbHnw96Jm+liRwgXLWnLc4x43mD7JNuR8rbWnJ5Km+",
	"tO2LKxKhuHUUbu/Go1dxFNnMmyYpbdGh5DVdggnw98IIwizppfWjI/r22LHna4SNeilnVM1QGT5W/AjJ",
	"APbRB2kisaRJ5TJFH1Lzgwmu0j+szA8QRgbo7aHaP/f/2Nv5x/vz8/ibJ/88P4//kOkqjFdlZGqZE7Oe",
	"Cti12LGarz6Wrhzz1Hao04fAmCFS2gibbSJao0lHYj+bnEKfqVlAp+J49KkZ47G+wnisxoXaLDSr2X27",
	"OfxaIulDnG5r0zJxSVjULQiFZ/tAJclqjxbALmK/I0XO1YqoFRF+Rhi0whLNCWHIDeCd+ZzzhGBmbBdz",
	"ktwmJ/uB07qZkSARSpYla0daGiqiFn652OdGJ+QJCYP44PajbnLDPZP2nbhnebzt2R+0+BfBC4+VjeHz",
	"T/8Ky8rBDzMquR4/rwelmddtxQDlXznq1N9SgJefbngENzD/BgBfHNAsiGthj9pgs6pzbaPJyBI8uJtt",
	"8EwGGaCbjOPoe/ulZuoMMyz9NAD816hxXCsaGurTaPtIOl9ZcIoIOFlKESbDobyQfoo7aZL1+O9K4BGv",
	"+tgMD42/C57BpRezghu6orakhGUjqCwcJ1aEIY3JHhmnMsTktPAZGqrDjrzFSNLScLO3aNDTUDKhN2Jp",
	"PEeevqSGPkY1MxvONs5X2MzOR25BebeWgbCpROg4Xduki81b8SurzNGEEO6eLaHzMqHLlUKHmjDyxEdW",
	"z9OnWQpEE8eoUDhtpA85yBWUUvDUIDndcW9B+Njfnbxyp/PuqLyFYINFuTRuk5lwb8n/OUEaRYAHSCi7",
	"MHl9YD73gnVYnG+q6GnT99TgVU7QCoNBKAFw7EcLV9WlzDVqX9rqsipIYypB3AA1zNA73pXcCQflH0JD",
	"L2/bc6xwuUz/mkMIO/AM2C1dj48WNIHIfXT26jR88c1iLsi6cxG/kfVGk1+Qdd/c9cveApXmEgcd/HCS",
	"MIAyuOwK+lrwGx66ty+NVFxQ1Qrysu2Ba9oOfZ9XKEZGlVThbReYBFgSw4/qVxiIRxwLIgvngd6No8eO",
	"tVxxqbSEuZ9xoQZExHQAqFhs8OTBh6mhk27NxgrtXRLW/mUVWT2vp5OXNCHWicaQdOcJYBM0gy9gahMy",
	"On+/Ybb/ytCHxXCVn0+KsSs/v3MT2RU65raGf5wp0vZyZAmmDCnyUaHH785e7vz4BHFRz19uR3CooG93",
	"Gyuh273Q3Ww8Q82ZRL+zJneJMkp4ocUcmGWGXtsid4SCEux8Aos7n+gVnU/Mms4nM/Tc2G/gUSsa+e4Z",
	"8NNkars0z+F6aix8YZDo7T2Sxpg39ew3dllgxnHBcCxPiaAROnpeX5bgXJlVNcUhHpPOqTMibIAHFAaY",
	"of/iOUiJZjHGZSvVMt0CpzShWCAeKZyUdf8wuD/9RQR3yfie/vDdd3C22Eg1EU1tB5P8JNTnu2dPn2gx",
	"VeU03pVELfV/FI0u1mhurVGoSJYwQ0cLpMXQAmJT47FV3Qw8C3qfWhIoAaaXF84g1W6SxnPJk1yRwiLt",
	"kLOWmwm94YoYrqjIGA5WWt0UJJQ5QfySiCtBlSKsJY88EZ2Hxq8gQf7W8SVkPS+uWpAugrdNc60vrauO",
	"ZwGz0ls8Bo+Phq7R0OX1gLuymXHLdNmuQQvGDKuti09VVTX8PN7kh9dPlwcxSDViaPaoiP5SFdF+VvM2",
	"hWSzzWa6SOuLWzpJ1eQAo8xrqQN75gqwOpesMi51TpzzFYmRHXqIz1VJRMNb7VCyw1Z6Fet2q8MCV08q",
	"jW9TEFaRNEtaVbDuay33RtOBti613kcS3brffPjhqXvAuv22InYnRt8YlQcH+ELrKSLAe+MkWSNa+i17",
	"V2OFLwmIKKBNiVxhJQgkIRVdBlTeulrRUNKujRXmxYnfPj42brjrb5KYZupuzKDXqEqtNtTQQ3UaGp2Q",
	"jBcOzkEb0wIKm9Qzaw4o4OKGdrlEctHi0P4441C3QvMSKVfkCUQ/mWoXw7LZ6KFtm+Beg4UgGnqYJVUn",
	"ejuhNQqyIAIKPoOW8ReqqgkXbImvANngOVPHhYjsHFt3G36tuo0jQQaLHkkjAdv4z5r7iYPQI2nE69Kj",
	"FaasWOjKB7ZdWPdldJtWw66mrD3SkqDafe73ZSmHqlTEazpMw7NyQi5pe3ygsF8h9lB6VZ4719tIM1ws",
	"vjHrtM0TftqSTLy+21p2kv7V2ATaFhFDE0MaxMgpOUtXrFqk2KIzjwBoWlKrzEuJCrhNe3XLBxNGvbZO",
	"4qhoSixx+8x8utEj+ajq0v0ofVR16dby0KPVo9u7dQc4taEVb0rsOMnZ5Po9xGxUfwx4iF/+jsVtnAxe",
	"lGlQ0SUWFCIELsh6p5KKmjK9GS9WIGcaxuHanXnLndcCiAZ0FUP9iFLM1giLZZ4CI5NLCKBXmMVYxCbp",
	"C5JrpvBHjTxahoJCnlZJKlFqSxO5mSTKaAbJs5fg+TnVGEXheq/RFSSPdeX9cxYTgTCaY7lCO5HRoX8M",
	"O4VccXHxnLboK/VHEwfkInrKdNw2TCZnzEmQdqEDSF3OWklKpWLgcFwruunH623WX+XI7+NVHrruXVdX",
	"maKDSpGikrgRjX8Q6sqREjnRR1cWOAvSPBso1PJ4hrbcuE+8xWrBnVHosXyC9PygYscKzDkksYYX8wrr",
	"LUisqLSmBPi1WPpwnUXFKBYgyBuo7rFV3AsfLQtQA+MerTBbGpp7CzCH1ek8C+NuUTarl4FtvIYe86YX",
	"+evZ2bEJitaUICBV4FkkAm/Xz2DDckYyJDhX6PCghfmS8oqLuI0BM1+N90KuVsZa1FxX4WJcjBeyIV/Q",
	"zKiNfieiCDUM2JQvaGb5blem9tLrEPZlV4kcBIyzV6fG1wHKXA5duh79gqyHj35B1sMH5xdt+YPg03ag",
	"315G+MyWDwY+sW+ufs5g0lI4rkGWVkplA6UbZlYyTL7RVOE4SEZ6BRrFPYHGmbCLSHWb+AKWIonGy5K/",
	"67IDbiKOiKY44qQJbIt+r1mEOgQVk1MutHlRmOPfnbyyxaJ5qkn+QtkIkjmW8HWGjhSU6jBsDEF/5gTi",
	"eAVOiQJlfR6tEJb76HyyqyniruK7Tun7T2j9E7QeYqCsiDzF8d2/lOMwso2u31A1sao8CcNqLg6tSTtY",
	"pQFYC+fOUYSTRL+bUcKZkVKDmASF/E30egtO6fEMvhlWkLPEJFpxXTX7C0VAy6LVhSSM3kmwIICTkEZw",
	"h5mGAQY5Cd4uu2rHb87X7oBdxlp9FpqphpUQafloMNOvSJIZWgb2qWJHRdYrpbLCWLGRWmfqn2sIY45S",
	"vPST7Dlq2KSELfmIT3wa6CgSlO6yyYQDJbVQhqOLQb5K7fmWW0uGNhdukkl1pM00PKXGOXBTapbAGsw2",
	"tmVEvVuSYHcYAlNnWdaBxd42X+Z0ImG2oXrBcpXIdOxVCN5cBWgmGKj3GwaQcs3BAWSGo45R4HPvUOGT",
	"L4efehDqtXzY3uUhhVCnah8KXR9IFuHMTdZeD7+Zh5hfgmBvnXFKqzMyGCDzpExa+8oEWhjruIpWpeBq",
	"FEkHb56TeIZepJla77I8SWqz26KyiHG1omzZkkPXG7XvNr+ut4f8E8VKbxVckuJMb/zvC7KegrLn2mh7",
	"wsEhzYNxVtygkV5/8VJUFzXPjHS8ZmpFFI28VOqFJOrrgzRpNMdxiQXluSzMWLAMOUMHXi5lvDaiLDyt",
	"tr7736VFb4rcwq6DZidFWR64IK/xGrSSRFnVEUgA8DdGCU2pcpS6zLYBlLrgho16kRZxyJU4HiIgBhn8",
	"DU29NJenw2CoUcNRiXiG/8xJ4bnhF4aTEj5w8Ihz0Zr2IfS8C7CxwIFdjkrz7iiulykouTRMBSMflbsr",
	"ZcaQAtyHBkwm/VTEmaQSGH8YSy/LOihYoxBxILM7rUolet9O7QBJdAT4ETKE0YJcOeWsOdMMSlIVlxZO",
	"3LnVGCaomiXL6A5hn+5oLSidS6JJdBiZpBSqhLS1I1MBCS1kxpkkU5SzRLNma56b9QgSEVqA0gqf4KnP",
	"EOnxhAZvZkwZZcsjRdJDTTH7SpHKfC71wTJlkcuuEwBfFifV4LdySGyauIN2WwFH0qKnQxbHLsWWoIEX",
	"KehWHWUDd9M6nhf7cIuSKDfpzwBPDSD1MA7oCVkolDO4PCxGPKXK0ypLIqDAoVFeVBYK52gMB+ix9f2c",
	"kwhrZpjCZ7A8r3IG2ldefgUQWK97yKQHjZ6U+xHEgs5gYH1PZiOFsvlGO3EuQDyJQXrEDF3uzfa+RzE3",
	"Tr1EeXMYLKdapIaM5dITeet4o3f2DZGKpiBCfGNuG/3L2u4jniS2fCUyASeF75ieVxCglG1jG0kCqIEo",
	"tPY4GpagLPRm1J6zJusX1ByZ9NA2JZRPPe2TbzJMgo9Uew5PLno0u2VKBiAg8MraN9x5vh+xyXTyhiv4",
	"74uP+nGaTCfPOZFvuIK/g97wxqGuZV+W+Tdtivz1FXa/P+e8z1VpEHqbft8E+4Dk/aVKfriTXf1wTaaq",
	"I9N1rymNvIZKItvP16Z37PnxNPZaftOXp8qZaGk/08+K1Jc5yJ0YYmuJLCTRcs8jMAa2rZHhAp6ijHFV",
	"JsW/IfNWNobb2cyO3rh5sB7K2RlNiVQ4zTpSZZj89ODHeKWfaBM1Mzw/RkwScpO5LGWF7pvMtySMiBYN",
	"+QEyz2ZUPFsVL07srM0RKkcp8xyauq7GPw4d8yxPsJfW18h1M3RCcLyjmc6BiRtvHRj+2nDu1jkV8uQZ",
	"HtnQENBWVmsHc7HETL8Kup3mQpdc6D8fy4hn5ldDTp8UvN7kxjpF66wcpMVXjASlOM+LFivEr8DRAbyh",
	"ze9aKkDn4BS6q+c6n9han21l130OMWh1tPy0BSJMa3Nfu2zIhml9JD3v6bLsVemUPUzVf6ypo5dLrSCp",
	"G2hHe62TXrpE/93CsQmhyxIjo5tguuBbFTYqHqD///TtG3TMARJgVmxTg+YtCGK4a/3GxsDt29XMGu8X",
	"z7p8d+qPyDEREWEqqBQsvzn+zx62wZwqJcjKxqZVcIMntrB5vfrR4BfL6/jC+m5cT4cpwA5YRXupG822",
	"6oDSqoW9ft/MOdQCiVqtvKJyvKUwi51S0pCVNKrmSnkbDBIgN2tXjaxmm1stypac3LTAjc/c+S31FYhJ",
	"lvD1BlWewki3Qcmts0Jhmte4XSCsR0tWGPzbaKqtLt+31Qh8tVwperkpE1kp+99X1ev+SnqZA2h9Tmrl",
	"EAsEc2U5MhJ1vlNjrbBPu1bYw1X9qtp+q2j4PkggPSNngDSWX92b6KfkFxXnW8c+LKmyJrwgy3DSYbOv",
	"uAx7obG/UOXb7/VBWccF38A4BtmN4bJjuOxueYk2i5n1+m03cLYcOBw9W/1eDaEtvtExJP4TCKQVteMY",
	"yEoUFH+Mqf1SY2prVKfjkjfKEVcljSpTMUwUrQe49fqm+y5nfY1P5aps27P1ltDLeovN4i+rELll/GN1",
	"sPvNFOhkioOECHVia3DVqnz5O2gy9as8xWynKIBVC1UGjy09djg5Z96m9XX1KAoel6YmB43ngYMvicBL",
	"YuqqgIF9bq3jc7LQlx4mpmw5Qy/hPPe7Q5H6g4y6AozOz+P/bC8VkXVouc5MFiCnvOILuyNjJxN0udSE",
	"MgRJoxA3flKXZEht18p5n9pO4ZphbkTvmCr7qOqTepGrMlkgt5r52sAZJ8IEq8ZDzcRhacRa11IO3NrE",
	"m7G1jVmKt2knpeutUr3VlDJnxExxltkEYIfH71oveZaHzGOmSlKrJNpSQclZ61ptf622vOuCwK3fgFpz",
	"YpUGzg132IPQsps+Ut+1rh6ZvAUS14FT6iytGC4ThSshtDUm2FHTLrUQNEJCt5qht87jyfyagX+SvRK0",
	"KPSzsaqoJOuhMkjeMYbte1ax4DvnewqjprMmTrOEsuWRZrGDZSUKsj4n6ooQVqjEoKsGxD1Q6iIOtCME",
	"tJLo0IPT1D/bwI67yODpmgW5sPJrvf6O59wK3nDWxcr4GUMOBk8Fo7gJlwCHMHtgIGbRQs04imqjOmZU",
	"x+z6V25ThYzXc9sqmXJop5QZ7+sDq1Zs5zWLNn56gdqPypUvV7lSoyGdD3vAhq0f8cfySfFs2yzhXZqF",
	"nuwxJpNTI0ycskYw2hGUCXItprYWp+tQXnuFKTPO+CGOwljtGNeo43pTfadf4GhlA2eqQxmfLDeAXrDP",
	"1nTf1fsNLB2SAcd5lxWZcJqQvqsEOIF3qBv/bqDj8vvfUsuFb0ZKO7PZOGXPIU9Tqtp8jsEzXjdAKyxt",
	"aocrLOH8W2K13MC/dDglFoN7PoeBsYe4WG+irDMZx6xbDLF+4QEpqyA0tnCH8QwsUr5pwchLg9ilnoBs",
	"iKfWAbPtnKqNmvoCqQRWZLkeriyojdgBjNI+X8N+/7PTIrr6xpn5tZ5/rq73hGxhxqh/VuZO6tQ55GW2",
	"j7h5TAPyL9YP9xrOp1H1uUfxUW0PgfIQmXy2EkSueBL3jeF55QWdI4rkd/Zkww4n9qsGdLTiNDJRvM6n",
	"xu1R083qyfiKvyoqhNwXTuVqS0lITk9/7cpBkgl6iRX5jayPsZTZSmBJ2pOJmO9GTyFXx0XfTyOHSGVJ",
	"vbk+7M4BQMPTfYQQxzfdbOY7K/1j7rEO3VFeAb39muOLyzLQlV2gK66+3FWIyLW97fY9p0ZNpHLBrMCg",
	"sS3Cias1FnP2yCX1QCa60PMOH1gXZIiNp2QcjEzi/JlbWDksw8akFEcrykjrVFerdW0CW6ter+F88hLT",
	"JBfkfGLXYyPQqCyDMEmaqbUNGoOYsyonVIZuHqATWCaKEiyMS7nzcJKuLmpM0DzXUCYmeo1fEiFoTBAN",
	"27tk93E67/sCeOgtxMDuo/PJqSHgrtpHsdM7F8FkRqIdzOIdC9Jh1/zM5sRtVVjUGlQ1n76XfpEweFRg",
	"jgrMUYEJPWqXZzMdZr3zdtWYtdHD7mWBRlUfs1qD0Xjx8MrQ0JEMkuLrT8GoE/1SdaIhstR39xuuZ5W3",
	"34qK7SzAIlzL6cyJ9ehqxaVXdMDe9wV41PB+Xt2MP2SzGxbo96sOTP++rQvZhimmOhVrFquH1+IvgHuF",
	"pdGKuYsxMAB4Ey1YI4wteA6baTqLDVjcg/L4ZzQl/81dwi+XOP4VN35AtTVomPylJcAiAFVI67EAsx0d",
	"vDlwQYsHJy8Odl+9PTw4O3r7ZoquQBTRP1Z5YJP0BMoKCsQjgpl5Q1zPIss2pNjGQtEoT7BAktrqvNSq",
	"JLEgeGpK2H4ELwt0AEXW8O4bcvU//8XFxRS9yDX+7R5jQZ0zSs5wOqfLnOcSfbsTrbDAEWROdHut1bdD",
	"j88nv7w+O59M0fnk3dnh+eRJkDwZfdpptCKxdTesKy/LF1vaVi5TJ9fHGKGYX7GEY5twOrboJv28Q4qm",
	"7ivPjIIB2fznAV6iV6V2KKoJk4HXEuoXgSPy3HNiHKobVB5ydb6drl2DRoeJkscSVbd42cYr/UKVT3LD",
	"WQhaLqob9P21/qLvmUvEhCMAKUkxTSb7E0Vw+v8toEJqpJIZ5RMXiQ4kpVY79YzgdGK1MBP3glZ6N+Lp",
	"/6gO8f5xqNsTy0zYGiZGFamlewyORl6ZE74wrwfQBxIvyyI1NikOFZAmXCOhnJ3rdzKhEWFGHWh3dpDh",
	"aEXQs9nTxmaurq5mGD7PuFju2r5y99XR4Ys3py92ns2ezlYqTQyqKH1NJjUgHRwfTablsU4u93CSrfCe",
	"zZfCcEYn+5NvZ09ne9aQBHigGYrdy71dnKvVbhlrugw9or+QRpXnil/4rMhSQjk7ivWWc+W0WRAaCfmK",
	"YN5nT5/Waq16IbW7/2vVQQbt+y6FNwsgXi05yG8aBN/t/RiQC3KwV5a1Q0hstBd4KQOVtt/rbxWA2ZSa",
	"pBVkv9sGEAldBR1kmAqDzPWCg3JJZ4GDCGQGD4yqJQ+3NOABdOMVwTER5UU7aJQRL4Bdv+Xvw4dXWwzM",
	"DNMCwJ/utbWhrGw1+Fimk++3iDKmFHIAW46slGakA9dsGEr4haTpklG2dHKC2WNCVPB9gxRYXiXrU9PZ",
	"ppaomsGryGL6tnaVd3nrCj1B240zCHC3x/WO2QLYfxGLdd/e/aQvuZjTOCbMYOU9zGgLr79jhT66gpSt",
	"iAcO6EHCBFL8jXBO9+zEuE6SBWlaLP9VNNT0yqT2dH4fUOe3EMVtsnMve6LlTGAEPQBkaDKx36re6JFL",
	"F/jIJnyz5oFMkEvIQFnNpufoJSyoJJdFOskuQjkNJSuyOc2MG64SNFJlEjxwKrNZDl3OKZOLiAqTIU1W",
	"Cx+TSyLWRSrS0EKTSnrV+1stwFZOnQAAOftsyjIN4guCHv30aIoe/aT/H6rz/NtPj1zl7PPJBVnv/QTn",
	"tje9IOtn/2b+eGbFhtBOYcab7dSvcOQnPzSIV2zST8lYpls8K9NfQoYrk+uvHdEq3RFdVLEcymubQWt5",
	"LaGM34qwRgml8uKAz7eXSRIg1IoZNIW4/xJOvj/Kt89C/ijv7/AFaaUioCTueFjugQ/4GcfI5XYaH7NP",
	"5zHLeMh+cGjyq+MBL1rzQTOdW3tOjIxLpPqZx+u7R34DslKsViIn141buHdfCwkBOh6v4Z1ew++e/uMe",
	"riHw71puTqhRFn3qt3+QqLX7t37trrskLvN7lVogi/uovPUbiVpDRHXfI7mfUJm0YlBX0b3ntviWfc5t",
	"sv0qpbiBGH//VOSrEhC/e/rd3c/4hquXPGfxZyyRCoJNfvGS1Y06blv1dp4QHN/z3VzaGtW3vpjTSc7o",
	"nzmxeZXhvR/v6nhXPxGGG6soXBsnWt2Q4Ya+93xbsyIH+7Ye0qEiwQ5M/Z+bnWUlt/AggeCBycMoC3wp",
	"JOlehI/PSeyYTrI8yK9Auusay3K4AcsC/e+ZDhrXiAchhPemG3lQUjiqZkZyPJLjT0QLtIuzTHCbeShI",
	"xQ+ggYmQJ2zdxdE2GVnjutba4cBNvjVKblK8+wseKfnI1I5U9NOgop+1Rt06NA7wVDKe6v1uSc/tiKMP",
	"0tdgtjX40+Nw1I86ulmJOKMr0ehKNLoSfSGuRAEcsfkn0CLBS6h7bGowmhRTejVpisW6GtQkZ+hfeicA",
	"Ko6AsbVplixYAJKVbFVw8+1gXviPjWwBgEMdu0cGmyp4/6iEUT3CBcqKPrID66EeQWIZkbdefa9tCMuK",
	"fBx3av8x9HV0srq/1/oNVy5l7yf4Xvf4VNUe7TYHKtPsjryl7OD37Brlzzoq20Y/qIe4nk0RbYCH03Pn",
	"4dR7d31RbVM9VW3wz8thqf1ujx4PX7rHQ5+sCoGO/XfnhOB4azdna+5E47UZr83ds4zdXkG9Vwcabu3u",
	"jM49W7y/Izc7Gj2+HPa5xXnHWG6HPfLgprM1WvVZOOBsIm7fH20aRfuRGI7E8C50Cbv1GvxBollkXyqV",
	"8Ubm9/o29Qvlxy1qGcpBPwtK6kNh5PhGIvdVSInt1EYQFhNA/o5MU8akZxpOkSTJYsfa9EhclAxoFGQc",
	"wNH9QtSJHddLurgVDU5l0a2L3BbJmrZWIblg/IoVC/ndZTEM2ySh8Um17eSh9EuBk+ngB79ros4bjtxC",
	"RkIzclMPQt/KvNud1M1PObqBstk6vY0q51HlPKqcrcp54+vkKaC3dp9GNfQolIx05JOnIx364Bu8yp52",
	"eGuEZNQRj4RjJByfLLdPmOBJkhKmBiTMLhtXPI9DWokXRdMiZ/ZgSoIHxn+b2AjQlDBEpcyraXagQFom",
	"+CWNSTz1s79br+oViS4Q7YtTtIoaGZ4EnKzBoZ1KFGFJCr9v6jQo1mm+DhGorIKTxJau032ntlhLAWV/",
	"IuM7DyufE1PqrTUoQ4oHU3o0Dn4kb18ueUOfFH0rL04wKrDxeUiAYInOg1OYN7qMYYNfR9hgCP+6Igg3",
	"wi3dI4hZY1zhGFc4xhWOKco34MzG1OTjYxV+rLrD51jHk9UWStfocUdRdc157jnArmUBo0PeGGv3KctA",
	"G0TgbXb9W4ShTVXK7VN+XjF6g8jDaAT+0nWwG8iIELm32Z07ITi+4xv3mThajNdtvG7tXG5nxN9mVw46",
	"3fGdG50x7ubejwz46MP5GWeWbSFuXTGCm7IT4BFyx9Tts/AQuaF64UEI26jVGInq6Bj/IGqUGyTpDpDk",
	"QCV10+sOKPFnl4a7sYUiNflDU2S3kH6T/EgjRyH3EyBWm8f2bEEddTPP4lEpNd7Xr1gpdatrGFZR3cU9",
	"HBVVo6JqpD+jourWiqpbsh1htdVdULxReTUyPiPjsx1BZZEQMsgp/6Vu2O+I/9KMNzrffw3+jIA8PQ73",
	"vXijWxVYMzrWj471o2P9l1qw58iGabZV5nGbBrrSthIc2zw28tQM8nCFcIBsjR794wvYXwSn+gy2Oe5D",
	"qzty1jdj37ODvjfpaL4enfIf4GY2ZJ3dv+G/17uKpFmCleaKJOWsUwiKXUGciCeaZ6Ccwdtlh0DFGGGp",
	"6My2+71s1qsPgYJy7oFsTNSi/Vh4BOThbS+jqPa5iGrAZvZjs+Z1PmFcno4S4ygxjhLjGIodopw1ujWK",
	"beNruAFzOCBks+AR6w/cMKbw1u/o3T2jdfPcwJk/KT+gOrRHY9hXaAzr4YIFwbFhAYv3r/cunxAcjzd5",
	"vMnjTf5UXvDh1Y37lLKeSXtTD5bq0J9X2oRWpe14rb7yB9IUNu67NvpJ3NKl2aKT+ddhjRyv7dd9bXsK",
	"K/ddXWi3pbs7OqZv7+qO2qjRGf2LMcn21VTu5y/A13xLZOqz8CbfwHnj3qjS6CcyUsExJGeLOou+2GBQ",
	"T5YROlVFpaOGLaLYzeJw7lQgG2WhURZ6OFmoXqpruGS0ras0ykejfDSSkE+chOTBdxjkj42f4lJq2RYJ",
	"GWWXkQEYb28/my1IxiVVXFAyJNb1xDVf9we8nvhDj77UX4P3WIFN657Y12F4pJvWsGgMgx2dmken5tGp",
	"uZeElRRm9GceXyT3IvXEogaepbaA1LLpHUWlehPcc2hqfebR7jDGpz7UlW0RVTbxZRx0qWsiy3pTDURg",
	"ks/LtbH70o+6gS9dNzBEdDNOjoPu0wnB8dZv02diYhuv0niVfJ6z2/Fw0HWyJqYt36fRzrblOz2yw6Mb",
	"zmfshlMnXJ2+iAPZADDtbZ1yfRbmvU0l+PulVqPGYCSRI4ncnnLCWrHWLBpmSDXtT9csGmJKLVuPttSv",
	"RXNdYlSvNXUYMhl7atl2tKeO9tTRnjraU4exeCXdGC2q47tUvku9NtXA49RuVa28TncjlXlT3LtltT73",
	"KCmNttWHu7xtAsxm5tVB97spyGyuCgpM9LkZWbvv/2gb+vJtQ0OkOmdoHXSzjKn1Du7VZ2NuHS/VeKmq",
	"LGmfyXXQxbL2xju4WaPhdeu3e+SWR7vCZ21XqJOwHuPrQNbAml/vgIZ9JibYTYX9+6Zco3phJJgjwdye",
	"JsOmPm7LFKMlK2lG9jM7V8nmL0SVCavvjD4MyNL8NeqX3Qm+h67GdGMeqlwkk/3J7kQ/FrZ1/XjfunOU",
	"aMEF0qSAMGU3MPOSk1Y+TJo2J28gztAhEYoudGtySpeMsmW9+rb0Bo/K1tK0FgUR7J7HJEwNDmpSr/aO",
	"0F4f3B+sWfq4b9xAsdpK7vW+/m0Bv3YQz62if6Q2Y3cxlkcZOkfTKCJIROglZcsQWbAjOpS8fn/9/wIA",
	"AP//koGf1rHuAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
