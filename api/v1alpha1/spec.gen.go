// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
