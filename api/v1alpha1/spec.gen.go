// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
