// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"juiu5PX76/8XAAD//3Fn60nD7gEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
