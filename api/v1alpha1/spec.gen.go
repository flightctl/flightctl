// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"4QEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
