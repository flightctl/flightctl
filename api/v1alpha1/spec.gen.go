// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"Fm4rAgA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
